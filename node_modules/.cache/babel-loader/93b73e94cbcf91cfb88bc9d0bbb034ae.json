{"ast":null,"code":"import data from \"@iconify/icons-mdi/map-marker\"; //import google from \"google-maps\"\n\nimport axios from \"axios\";\nimport { ArrowRight } from \"@material-ui/icons\";\n\nconst getData = () => {\n  var coordsList = [];\n  var list = [\"united states of america\", \"newton, massachusetts, USA\"];\n\n  for (var i = 0; i < list.length; i++) {\n    var temp = getRes(list[i]);\n    temp.then(temp => {\n      coordsList.push(temp);\n      console.log(coordsList);\n      console.log(coordsList);\n    }); // console.log(\"temp: \"+temp)\n  }\n\n  return coordsList;\n};\n\nasync function getRes(str) {\n  var loc = str.replace(/\\s+/g, \"+\");\n  const url = \"https://maps.googleapis.com/maps/api/geocode/json?address=\" + loc + \"&key=\" + process.env.REACT_APP_GOOGLEMAPS_ID; //  console.log(url)\n\n  var res = await axios.get(url); // console.log(res)\n  // console.log(\"Latitude: \" + res.data.results[0].geometry.location.lat);\n  // console.log(\"Longitude: \" + res.data.results[0].geometry.location.lng);\n  // console.log(\"Location: \" + res.data.results[0].formatted_address);\n\n  var arr = [];\n  arr.push(JSON.stringify(res.data.results[0].geometry.location.lat));\n  arr.push(JSON.stringify(res.data.results[0].geometry.location.lng));\n  arr.push(JSON.stringify(res.data.results[0].formatted_address));\n  console.log(arr);\n  return arr;\n}\n\nexport default getData; //  var lat = results[0].geometry.location.lat;\n//       var long = results[0].geometry.location.lng;\n//       var name = results[0].formatted_address\n//       var temp = [lat,long,temp]\n//       coordsList.push(temp)\n// console.log(g.latlng)\n// var sydney = new google.maps.LatLng(-33.867, 151.195);\n// var map = new google.maps.Map(\n//     document.getElementById('map'), {center: sydney, zoom: 15});\n// var request = {\n//   query: list[i],\n//   fields: ['name', 'lat', 'lng'],\n// };\n// var service = new google.maps.places.PlacesService(map);\n// service.findPlaceFromQuery(request, function(results, status) {\n//   if (status === google.maps.places.PlacesServiceStatus.OK) {\n//       var lat = results[0].geometry.location.lat;\n//       var long = results[0].geometry.location.lng;\n//       var name = results[0].formatted_address\n//       var temp = [lat,long,temp]\n//       coordsList.push(temp)\n//     }\n//   console.log(coordsList)\n// });\n// return coordsList;\n// }\n//\n// var x =\"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\"+list[i]+\"&key=\"+ process.env.REACT_APP_GOOGLEMAPS_ID\n// var result = axios.get(x)\n// result.then((result) =>{\n//   var lat = result.data.results[0].geometry.location.lat;\n//   lat = lat.toString();\n//   const location =result.data.results[0].formatted_address\n//   var long =result.data.results[0].geometry.location.lng;\n//   long = long.toString()\n//   // console.log(\"Name: \"+ list[i])\n//   // console.log(\"Lat: \"+lat)\n//   // console.log(\"Long: \"+long)\n//    var res = [lat,long,location]\n//   //  console.log(res)\n//   // console.log(\"Return val: \"+ res)\n//    coordsList.push(res);\n//   // console.log(res)\n// })\n// var headers = new Headers();\n// function loadScript() {\n// var script = document.createElement('script');\n// script.type = 'text/javascript';\n// script.src = process.env.REACT_APP_URL;\n// document.body.appendChild(script);\n// }\n// window.onload = loadScript;\n// for (var i =0; i<list.length;i++){\n//   let x = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\"+list[i]+\"&key=\"+ process.env.REACT_APP_GOOGLEMAPS_ID;\n//   fetch(x)\n//     .then(response => response.json())\n//     .then(data => {\n//       console.log(data);\n//       let lat = data.results[0].geometry.location.lat;\n//       let long = data.results[0].geometry.location.lng;\n//       let name = data.results[0].formatted_address;\n//       let temp = [lat,long,name]\n//       coordsList.push(temp)","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/LocationCoordinates.js"],"names":["data","axios","ArrowRight","getData","coordsList","list","i","length","temp","getRes","then","push","console","log","str","loc","replace","url","process","env","REACT_APP_GOOGLEMAPS_ID","res","get","arr","JSON","stringify","results","geometry","location","lat","lng","formatted_address"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,+BAAjB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,IAAI,GAAG,CAAC,0BAAD,EAA6B,4BAA7B,CAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,IAAI,GAAGC,MAAM,CAACJ,IAAI,CAACC,CAAD,CAAL,CAAjB;AAEAE,IAAAA,IAAI,CAACE,IAAL,CAAWF,IAAD,IAAU;AAClBJ,MAAAA,UAAU,CAACO,IAAX,CAAgBH,IAAhB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACD,KAJD,EAHoC,CASpC;AACD;;AACD,SAAOA,UAAP;AACD,CAfD;;AAiBA,eAAeK,MAAf,CAAsBK,GAAtB,EAA2B;AACzB,MAAIC,GAAG,GAAGD,GAAG,CAACE,OAAJ,CAAY,MAAZ,EAAoB,GAApB,CAAV;AACA,QAAMC,GAAG,GACP,+DACAF,GADA,GAEA,OAFA,GAGAG,OAAO,CAACC,GAAR,CAAYC,uBAJd,CAFyB,CAOzB;;AAEA,MAAIC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAUL,GAAV,CAAhB,CATyB,CAWzB;AAEA;AACA;AACA;;AACA,MAAIM,GAAG,GAAG,EAAV;AACAA,EAAAA,GAAG,CAACZ,IAAJ,CAASa,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACrB,IAAJ,CAAS0B,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAA7B,CAAsCC,GAArD,CAAT;AACAN,EAAAA,GAAG,CAACZ,IAAJ,CAASa,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACrB,IAAJ,CAAS0B,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAA7B,CAAsCE,GAArD,CAAT;AACAP,EAAAA,GAAG,CAACZ,IAAJ,CAASa,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACrB,IAAJ,CAAS0B,OAAT,CAAiB,CAAjB,EAAoBK,iBAAnC,CAAT;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACA,SAAOA,GAAP;AACD;;AAED,eAAepB,OAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import data from \"@iconify/icons-mdi/map-marker\";\n//import google from \"google-maps\"\nimport axios from \"axios\";\nimport { ArrowRight } from \"@material-ui/icons\";\n\nconst getData = () => {\n  var coordsList = [];\n  var list = [\"united states of america\", \"newton, massachusetts, USA\"];\n  for (var i = 0; i < list.length; i++) {\n    var temp = getRes(list[i]);\n\n    temp.then((temp) => {\n      coordsList.push(temp);\n      console.log(coordsList);\n      console.log(coordsList);\n    });\n\n    // console.log(\"temp: \"+temp)\n  }\n  return coordsList;\n};\n\nasync function getRes(str) {\n  var loc = str.replace(/\\s+/g, \"+\");\n  const url =\n    \"https://maps.googleapis.com/maps/api/geocode/json?address=\" +\n    loc +\n    \"&key=\" +\n    process.env.REACT_APP_GOOGLEMAPS_ID;\n  //  console.log(url)\n\n  var res = await axios.get(url);\n\n  // console.log(res)\n\n  // console.log(\"Latitude: \" + res.data.results[0].geometry.location.lat);\n  // console.log(\"Longitude: \" + res.data.results[0].geometry.location.lng);\n  // console.log(\"Location: \" + res.data.results[0].formatted_address);\n  var arr = [];\n  arr.push(JSON.stringify(res.data.results[0].geometry.location.lat));\n  arr.push(JSON.stringify(res.data.results[0].geometry.location.lng));\n  arr.push(JSON.stringify(res.data.results[0].formatted_address));\n  console.log(arr);\n  return arr;\n}\n\nexport default getData;\n\n//  var lat = results[0].geometry.location.lat;\n//       var long = results[0].geometry.location.lng;\n//       var name = results[0].formatted_address\n//       var temp = [lat,long,temp]\n//       coordsList.push(temp)\n\n// console.log(g.latlng)\n\n// var sydney = new google.maps.LatLng(-33.867, 151.195);\n\n// var map = new google.maps.Map(\n//     document.getElementById('map'), {center: sydney, zoom: 15});\n\n// var request = {\n//   query: list[i],\n//   fields: ['name', 'lat', 'lng'],\n// };\n// var service = new google.maps.places.PlacesService(map);\n\n// service.findPlaceFromQuery(request, function(results, status) {\n//   if (status === google.maps.places.PlacesServiceStatus.OK) {\n\n//       var lat = results[0].geometry.location.lat;\n//       var long = results[0].geometry.location.lng;\n//       var name = results[0].formatted_address\n//       var temp = [lat,long,temp]\n//       coordsList.push(temp)\n//     }\n\n//   console.log(coordsList)\n// });\n\n// return coordsList;\n// }\n\n//\n\n// var x =\"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\"+list[i]+\"&key=\"+ process.env.REACT_APP_GOOGLEMAPS_ID\n// var result = axios.get(x)\n// result.then((result) =>{\n//   var lat = result.data.results[0].geometry.location.lat;\n//   lat = lat.toString();\n//   const location =result.data.results[0].formatted_address\n//   var long =result.data.results[0].geometry.location.lng;\n//   long = long.toString()\n//   // console.log(\"Name: \"+ list[i])\n//   // console.log(\"Lat: \"+lat)\n//   // console.log(\"Long: \"+long)\n//    var res = [lat,long,location]\n//   //  console.log(res)\n//   // console.log(\"Return val: \"+ res)\n//    coordsList.push(res);\n\n//   // console.log(res)\n// })\n// var headers = new Headers();\n\n// function loadScript() {\n// var script = document.createElement('script');\n// script.type = 'text/javascript';\n// script.src = process.env.REACT_APP_URL;\n// document.body.appendChild(script);\n// }\n// window.onload = loadScript;\n// for (var i =0; i<list.length;i++){\n//   let x = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\"+list[i]+\"&key=\"+ process.env.REACT_APP_GOOGLEMAPS_ID;\n//   fetch(x)\n//     .then(response => response.json())\n\n//     .then(data => {\n//       console.log(data);\n//       let lat = data.results[0].geometry.location.lat;\n//       let long = data.results[0].geometry.location.lng;\n//       let name = data.results[0].formatted_address;\n//       let temp = [lat,long,name]\n//       coordsList.push(temp)\n"]},"metadata":{},"sourceType":"module"}