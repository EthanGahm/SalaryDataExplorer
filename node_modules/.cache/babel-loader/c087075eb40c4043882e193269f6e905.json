{"ast":null,"code":"var _jsxFileName = \"/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/FirstDatasetTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SheetsAPIInfo from \"../SheetsAPIInfo.json\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"Age\",\n  headerName: \"Age\",\n  width: 130\n}, {\n  field: \"Industry\",\n  headerName: \"Industry\",\n  width: 130\n}, {\n  field: \"Job Title\",\n  headerName: \"Job Title\",\n  width: 130\n}, {\n  field: \"Annual Salary\",\n  headerName: \"Annual Salary\",\n  width: 130\n}, {\n  field: \"Currency\",\n  headerName: \"Currency\",\n  width: 130\n}, {\n  field: \"Location\",\n  headerName: \"Location\",\n  width: 130\n}, {\n  field: \"Work Experience\",\n  headerName: \"Work Experience\",\n  width: 130\n}, {\n  field: \"Context for Job\",\n  headerName: \"Context for Job\",\n  width: 130\n}, {\n  field: \"Other\",\n  headerName: \"Other\",\n  width: 130\n}];\nlet rows = [];\nconst spreadSheet = new GoogleSpreadsheet(\"13vhiAvwNpCaUAAutNwd-pEbYZNk1qIVMqgB4e4HGQtE\");\nlet isLoaded = false;\n\n_s(async function () {\n  _s();\n\n  try {\n    await spreadSheet.useServiceAccountAuth({\n      client_email: SheetsAPIInfo.client_email,\n      private_key: SheetsAPIInfo.private_key\n    });\n    await spreadSheet.loadInfo();\n    const sheet = spreadSheet.sheetsByIndex[0];\n    rows = await sheet.getRows();\n    isLoaded = true;\n  } catch (e) {\n    console.error(\"Error: \", e);\n  }\n}, \"XzZzjmf42T4ghIIVsLcPZIIQRXQ=\", false, function () {\n  return [spreadSheet.useServiceAccountAuth];\n})();\n\nexport default function TestTable() {\n  _s2();\n\n  React.useEffect(() => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 600,\n        width: \"100%\"\n      },\n      children: isLoaded ? /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        getRowId: rows => rows.rowNumber,\n        autoHeight: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }), [isLoaded];\n}\n\n_s2(TestTable, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TestTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestTable\");","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/FirstDatasetTable.js"],"names":["React","DataGrid","CircularProgress","SheetsAPIInfo","GoogleSpreadsheet","columns","field","headerName","width","rows","spreadSheet","isLoaded","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","getRows","e","console","error","TestTable","useEffect","height","rowNumber"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SheetsAPIInfo from \"../SheetsAPIInfo.json\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\n\nconst columns = [\n  { field: \"Age\", headerName: \"Age\", width: 130 },\n  { field: \"Industry\", headerName: \"Industry\", width: 130 },\n  { field: \"Job Title\", headerName: \"Job Title\", width: 130 },\n  { field: \"Annual Salary\", headerName: \"Annual Salary\", width: 130 },\n  { field: \"Currency\", headerName: \"Currency\", width: 130 },\n  { field: \"Location\", headerName: \"Location\", width: 130 },\n  { field: \"Work Experience\", headerName: \"Work Experience\", width: 130 },\n  { field: \"Context for Job\", headerName: \"Context for Job\", width: 130 },\n  { field: \"Other\", headerName: \"Other\", width: 130 },\n];\n\nlet rows = [];\n\nconst spreadSheet = new GoogleSpreadsheet(\n  \"13vhiAvwNpCaUAAutNwd-pEbYZNk1qIVMqgB4e4HGQtE\"\n);\n\nlet isLoaded = false;\n\n(async function () {\n  try {\n    await spreadSheet.useServiceAccountAuth({\n      client_email: SheetsAPIInfo.client_email,\n      private_key: SheetsAPIInfo.private_key,\n    });\n\n    await spreadSheet.loadInfo();\n    const sheet = spreadSheet.sheetsByIndex[0];\n    rows = await sheet.getRows();\n    isLoaded = true;\n  } catch (e) {\n    console.error(\"Error: \", e);\n  }\n})();\n\nexport default function TestTable() {\n  React.useEffect(() => {\n    return (\n      <div style={{ height: 600, width: \"100%\" }}>\n        {isLoaded ? (\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            getRowId={(rows) => rows.rowNumber}\n            autoHeight={true}\n          />\n        ) : (\n          <CircularProgress />\n        )}\n      </div>\n    );\n  }),\n    [isLoaded];\n}\n"]},"metadata":{},"sourceType":"module"}