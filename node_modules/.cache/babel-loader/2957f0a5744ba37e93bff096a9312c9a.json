{"ast":null,"code":"var _jsxFileName = \"/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/FilterAndSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { mainListItems } from \"./listItems\";\nimport Title from \"./Title\";\nimport Copyright from \"./Copyright\";\nimport useStyles from \"./UseStyles.js\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport GoogleMaps from \"./GoogleMaps.js\";\nimport GoogleMap from \"./GoogleMaps.js\"; // Passing in a map array to the search bar function, may be useful when extracting jobs from spreadsheet\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar industryOptions = [\"Doctor\", \"Software Engineer\", \"Teacher\", \"Professor\"];\nvar options = industryOptions.map(opt => ({\n  label: opt,\n  value: opt\n})); // Hardcoded labels for search bar\n// const industryOptions = [\n//   { label: 'Software Engineer', value: 'Software Engineer' },\n//   { label: 'Doctor', value: 'Doctor'},\n// ];\n\nexport default function Search() {\n  _s();\n\n  const industryOptions = [{\n    label: \"Doctor\",\n    value: \"Doctor\"\n  }, {\n    label: \"Teacher\",\n    value: \"Teacher\"\n  }, {\n    label: \"Lawyer\",\n    value: \"Lawyer\"\n  }, {\n    label: \"Software Engineer\",\n    value: \"Software Engineer\"\n  }];\n  const genderOptions = [{\n    label: \"Woman\",\n    value: \"Woman\"\n  }, {\n    label: \"Man\",\n    value: \"Man\"\n  }, {\n    label: \"Non-binary\",\n    value: \"Non-binary\"\n  }, {\n    label: \"Other\",\n    value: \"Other/NA\"\n  }];\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  }; // age range bar values\n\n\n  function valuetext(value) {\n    return `${value}`;\n  }\n\n  const [value, setValue] = React.useState([30, 50]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"absolute\",\n      className: clsx(classes.appBar, open && classes.appBarShift),\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          className: clsx(classes.menuButton, open && classes.menuButtonHidden),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      classes: {\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n      },\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbarIcon,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: mainListItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.appBarSpacer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Set Parameters and Search the Dataset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"Industry:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"industry-dropdown\",\n                  options: industryOptions,\n                  getOptionLabel: option => option.label,\n                  style: {\n                    width: 300\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"Job Title:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"industry-dropdown\",\n                  options: options,\n                  getOptionLabel: option => option.label,\n                  style: {\n                    width: 300\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              pt: 3,\n              children: [\"Age Range:\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.root,\n                style: {\n                  width: \"300px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  id: \"range-slider\",\n                  gutterBottom: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                  min: 18,\n                  max: 80,\n                  value: value,\n                  onChange: handleChange,\n                  valueLabelDisplay: \"auto\",\n                  \"aria-labelledby\": \"range-slider\",\n                  getAriaValueText: valuetext\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"Gender:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"industry-dropdown\",\n                  options: genderOptions,\n                  getOptionLabel: option => option.label,\n                  style: {\n                    width: 300\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"Country:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"industry-dropdown\",\n                  options: options,\n                  getOptionLabel: option => option.label,\n                  style: {\n                    width: 300\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"State/Province:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"industry-dropdown\",\n                  options: options,\n                  getOptionLabel: option => option.label,\n                  style: {\n                    width: 300\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"City:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"industry-dropdown\",\n                  options: options,\n                  getOptionLabel: option => option.label,\n                  style: {\n                    width: 300\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"Google Maps\", /*#__PURE__*/_jsxDEV(GoogleMap, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          pt: 5,\n          children: /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"Q1MTlkF7qRjXpgIuDT1dWlE8/T4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/FilterAndSearch.js"],"names":["React","clsx","CssBaseline","Drawer","Box","AppBar","Toolbar","List","Typography","Divider","IconButton","Container","Grid","Paper","MenuIcon","ChevronLeftIcon","mainListItems","Title","Copyright","useStyles","Slider","Autocomplete","TextField","GoogleMaps","GoogleMap","industryOptions","options","map","opt","label","value","Search","genderOptions","classes","open","setOpen","useState","handleDrawerOpen","handleDrawerClose","valuetext","setValue","handleChange","event","newValue","root","appBar","appBarShift","toolbar","menuButton","menuButtonHidden","paper","drawerPaper","drawerPaperClose","toolbarIcon","content","appBarSpacer","container","width","option","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { mainListItems } from \"./listItems\";\nimport Title from \"./Title\";\nimport Copyright from \"./Copyright\";\nimport useStyles from \"./UseStyles.js\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport GoogleMaps from \"./GoogleMaps.js\"\nimport GoogleMap from \"./GoogleMaps.js\";\n\n// Passing in a map array to the search bar function, may be useful when extracting jobs from spreadsheet\nvar industryOptions = [\"Doctor\", \"Software Engineer\", \"Teacher\", \"Professor\"];\nvar options = industryOptions.map((opt) => ({ label: opt, value: opt }));\n\n// Hardcoded labels for search bar\n// const industryOptions = [\n//   { label: 'Software Engineer', value: 'Software Engineer' },\n//   { label: 'Doctor', value: 'Doctor'},\n// ];\n\nexport default function Search() {\n  const industryOptions = [\n    { label: \"Doctor\", value: \"Doctor\" },\n    { label: \"Teacher\", value: \"Teacher\" },\n    { label: \"Lawyer\", value: \"Lawyer\" },\n    { label: \"Software Engineer\", value: \"Software Engineer\" },\n  ];\n\n  const genderOptions = [\n    { label: \"Woman\", value: \"Woman\" },\n    { label: \"Man\", value: \"Man\" },\n    { label: \"Non-binary\", value: \"Non-binary\" },\n    { label: \"Other\", value: \"Other/NA\" },\n  ];\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  // age range bar values\n  function valuetext(value) {\n    return `${value}`;\n  }\n  const [value, setValue] = React.useState([30, 50]);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Title>Set Parameters and Search the Dataset</Title>\n              {/* React-Select, taken from https://stackoverflow.com/questions/48930622/react-select-show-search-bar-in-dropdown  */}\n              <div style={{ width: \"300px\" }}>\n                <Box pt={3}>\n                  Industry:\n                  <Autocomplete\n                    id=\"industry-dropdown\"\n                    options={industryOptions}\n                    getOptionLabel={(option) => option.label}\n                    style={{ width: 300 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </Box>\n              </div>\n              <div style={{ width: \"300px\" }}>\n                <Box pt={3}>\n                  Job Title:\n                  <Autocomplete\n                    id=\"industry-dropdown\"\n                    options={options}\n                    getOptionLabel={(option) => option.label}\n                    style={{ width: 300 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </Box>\n              </div>\n              {/* Age Range is taken from @material-ui https://material-ui.com/components/slider/ */}\n              <Box pt={3}>\n                Age Range:\n                <div className={classes.root} style={{ width: \"300px\" }}>\n                  <Typography id=\"range-slider\" gutterBottom></Typography>\n                  <Slider\n                    min={18}\n                    max={80}\n                    value={value}\n                    onChange={handleChange}\n                    valueLabelDisplay=\"auto\"\n                    aria-labelledby=\"range-slider\"\n                    getAriaValueText={valuetext}\n                  />\n                </div>\n              </Box>\n\n              <div style={{ width: \"300px\" }}>\n                <Box pt={3}>\n                  Gender:\n                  <Autocomplete\n                    id=\"industry-dropdown\"\n                    options={genderOptions}\n                    getOptionLabel={(option) => option.label}\n                    style={{ width: 300 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </Box>\n              </div>\n              <div style={{ width: \"300px\" }}>\n                <Box pt={3}>\n                  Country:\n                  <Autocomplete\n                    id=\"industry-dropdown\"\n                    options={options}\n                    getOptionLabel={(option) => option.label}\n                    style={{ width: 300 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </Box>\n              </div>\n              <div style={{ width: \"300px\" }}>\n                <Box pt={3}>\n                  State/Province:\n                  <Autocomplete\n                    id=\"industry-dropdown\"\n                    options={options}\n                    getOptionLabel={(option) => option.label}\n                    style={{ width: 300 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </Box>\n              </div>\n              <div style={{ width: \"300px\" }}>\n                <Box pt={3}>\n                  City:\n                  <Autocomplete\n                    id=\"industry-dropdown\"\n                    options={options}\n                    getOptionLabel={(option) => option.label}\n                    style={{ width: 300 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </Box>\n              </div>\n              <div style={{ width:\"300px\" }}>\n                <Box pt={3}>\n                Google Maps\n                <GoogleMap />\n                \n                </Box>\n                </div>\n            </Grid>\n          </Grid>\n          <Box pt={5}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}