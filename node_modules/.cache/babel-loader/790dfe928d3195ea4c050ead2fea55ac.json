{"ast":null,"code":"var _jsxFileName = \"/home/ethan/Documents/DevHub/SalaryDataExplorer/src/App.js\";\nimport React from \"react\";\nimport Home from \"./Components/Home\";\nimport FilterAndSearch from \"./Components/FilterAndSearch\";\nimport DataSummary from \"./Components/DataSummary\";\nimport Graph from \"./Components/Graph\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getData() {\n  var coordsList = [];\n  var list = [\"united states of america\", \"newton, massachusetts, USA\"];\n\n  for (var i = 0; i < list.length; i++) {\n    try {\n      var temp = await getRes(list[i]);\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n\n    coordsList.push(temp); // console.log(\"temp: \"+temp)\n  }\n\n  return true;\n}\n\nasync function getRes(str) {\n  var loc = str.replace(/\\s+/g, \"+\");\n  const url = \"https://maps.googleapis.com/maps/api/geocode/json?address=\" + loc + \"&key=\" + process.env.REACT_APP_GOOGLEMAPS_ID; //  console.log(url)\n\n  var res = await axios.get(url); // console.log(res)\n  // console.log(\"Latitude: \" + res.data.results[0].geometry.location.lat);\n  // console.log(\"Longitude: \" + res.data.results[0].geometry.location.lng);\n  // console.log(\"Location: \" + res.data.results[0].formatted_address);\n\n  var arr = [];\n  arr.push(JSON.stringify(res.data.results[0].geometry.location.lat));\n  arr.push(JSON.stringify(res.data.results[0].geometry.location.lng));\n  arr.push(JSON.stringify(res.data.results[0].formatted_address));\n  return arr;\n}\n\nexport default function App() {\n  getData().then(data => console.log(data));\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/DataSummary\",\n        component: DataSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/FilterAndSearch\",\n        component: FilterAndSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/graph\",\n        component: Graph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/coords\",\n        component: getData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryDataExplorer/src/App.js"],"names":["React","Home","FilterAndSearch","DataSummary","Graph","Switch","Route","BrowserRouter","axios","getData","coordsList","list","i","length","temp","getRes","error","console","push","str","loc","replace","url","process","env","REACT_APP_GOOGLEMAPS_ID","res","get","arr","JSON","stringify","data","results","geometry","location","lat","lng","formatted_address","App","then","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Home from \"./Components/Home\";\nimport FilterAndSearch from \"./Components/FilterAndSearch\";\nimport DataSummary from \"./Components/DataSummary\";\nimport Graph from \"./Components/Graph\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\nasync function getData() {\n  var coordsList = [];\n  var list = [\"united states of america\", \"newton, massachusetts, USA\"];\n  for (var i = 0; i < list.length; i++) {\n    try {\n      var temp = await getRes(list[i]);\n    } catch (error) {\n      console.error(error);\n      return error;\n    }\n    coordsList.push(temp);\n\n    // console.log(\"temp: \"+temp)\n  }\n  return true;\n}\n\nasync function getRes(str) {\n  var loc = str.replace(/\\s+/g, \"+\");\n  const url =\n    \"https://maps.googleapis.com/maps/api/geocode/json?address=\" +\n    loc +\n    \"&key=\" +\n    process.env.REACT_APP_GOOGLEMAPS_ID;\n  //  console.log(url)\n\n  var res = await axios.get(url);\n\n  // console.log(res)\n\n  // console.log(\"Latitude: \" + res.data.results[0].geometry.location.lat);\n  // console.log(\"Longitude: \" + res.data.results[0].geometry.location.lng);\n  // console.log(\"Location: \" + res.data.results[0].formatted_address);\n  var arr = [];\n  arr.push(JSON.stringify(res.data.results[0].geometry.location.lat));\n  arr.push(JSON.stringify(res.data.results[0].geometry.location.lng));\n  arr.push(JSON.stringify(res.data.results[0].formatted_address));\n  return arr;\n}\n\nexport default function App() {\n  getData().then((data) => console.log(data));\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/DataSummary\" component={DataSummary} />\n        <Route path=\"/FilterAndSearch\" component={FilterAndSearch} />\n        <Route path=\"/graph\" component={Graph} />\n        <Route path=\"/coords\" component={getData} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}