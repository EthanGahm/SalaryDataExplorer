{"ast":null,"code":"const _ = require('lodash');\n\nfunction getFieldMask(obj) {\n  return _.keys(obj).join(',');\n}\n\nfunction columnToLetter(column) {\n  let temp;\n  let letter = '';\n  let col = column;\n\n  while (col > 0) {\n    temp = (col - 1) % 26;\n    letter = String.fromCharCode(temp + 65) + letter;\n    col = (col - temp - 1) / 26;\n  }\n\n  return letter;\n}\n\nfunction letterToColumn(letter) {\n  let column = 0;\n  const {\n    length\n  } = letter;\n\n  for (let i = 0; i < length; i++) {\n    column += (letter.charCodeAt(i) - 64) * 26 ** (length - i - 1);\n  }\n\n  return column;\n}\n\nmodule.exports = {\n  getFieldMask,\n  columnToLetter,\n  letterToColumn\n};","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryDataExplorer/node_modules/google-spreadsheet/lib/utils.js"],"names":["_","require","getFieldMask","obj","keys","join","columnToLetter","column","temp","letter","col","String","fromCharCode","letterToColumn","length","i","charCodeAt","module","exports"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,SAAOH,CAAC,CAACI,IAAF,CAAOD,GAAP,EAAYE,IAAZ,CAAiB,GAAjB,CAAP;AACD;;AAED,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC9B,MAAIC,IAAJ;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,GAAG,GAAGH,MAAV;;AACA,SAAOG,GAAG,GAAG,CAAb,EAAgB;AACdF,IAAAA,IAAI,GAAG,CAACE,GAAG,GAAG,CAAP,IAAY,EAAnB;AACAD,IAAAA,MAAM,GAAGE,MAAM,CAACC,YAAP,CAAoBJ,IAAI,GAAG,EAA3B,IAAiCC,MAA1C;AACAC,IAAAA,GAAG,GAAG,CAACA,GAAG,GAAGF,IAAN,GAAa,CAAd,IAAmB,EAAzB;AACD;;AACD,SAAOC,MAAP;AACD;;AAED,SAASI,cAAT,CAAwBJ,MAAxB,EAAgC;AAC9B,MAAIF,MAAM,GAAG,CAAb;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAaL,MAAnB;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,EAA7B,EAAiC;AAC/BR,IAAAA,MAAM,IAAI,CAACE,MAAM,CAACO,UAAP,CAAkBD,CAAlB,IAAuB,EAAxB,IAA8B,OAAOD,MAAM,GAAGC,CAAT,GAAa,CAApB,CAAxC;AACD;;AACD,SAAOR,MAAP;AACD;;AAEDU,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,YADe;AAEfI,EAAAA,cAFe;AAGfO,EAAAA;AAHe,CAAjB","sourcesContent":["const _ = require('lodash');\n\nfunction getFieldMask(obj) {\n  return _.keys(obj).join(',');\n}\n\nfunction columnToLetter(column) {\n  let temp;\n  let letter = '';\n  let col = column;\n  while (col > 0) {\n    temp = (col - 1) % 26;\n    letter = String.fromCharCode(temp + 65) + letter;\n    col = (col - temp - 1) / 26;\n  }\n  return letter;\n}\n\nfunction letterToColumn(letter) {\n  let column = 0;\n  const { length } = letter;\n  for (let i = 0; i < length; i++) {\n    column += (letter.charCodeAt(i) - 64) * 26 ** (length - i - 1);\n  }\n  return column;\n}\n\nmodule.exports = {\n  getFieldMask,\n  columnToLetter,\n  letterToColumn,\n};\n"]},"metadata":{},"sourceType":"script"}