{"ast":null,"code":"var _jsxFileName = \"/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/Graph.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport SheetsAPIInfo from \"../SheetsAPIInfo.json\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"./UseStyles.js\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { RadarChart, Radar, PolarGrid, PolarAngleAxis, PolarRadiusAxis, BarChart, Bar, PieChart, Pie, LineChart, Line, CartesianGrid, XAxis, YAxis, Label, Tooltip, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\nconst data = [{\n  name: \"Computing or Tech\",\n  val: 5000,\n  fill: colors[0]\n}, {\n  name: \"Accounting, Banking & Finance\",\n  val: 7000,\n  fill: colors[1]\n}, {\n  name: \"Education (Higher Education)\",\n  val: 2000,\n  fill: colors[2]\n}];\nlet data1 = [];\nlet data2 = [];\nlet data3 = [];\nlet rows = [];\nvar numCT = 0;\nlet numABF = 0;\nlet avgABF = 0.0;\nvar salABF = [];\nvar numAF = 0;\nvar numAD = 0;\nvar numBC = 0;\nvar numEPS = 0;\nvar numEH = 0;\nvar numEM = 0;\nvar numEnt = 0;\nvar numGPA = 0;\nvar numHC = 0;\nvar numHE = 0;\nvar numIns = 0;\nvar numLaw = 0;\nvar numLS = 0;\nvar numLST = 0;\nvar numMAPR = 0;\nvar numMD = 0;\nvar numNonP = 0;\nvar numPC = 0;\nvar numRHR = 0;\nvar numRetail = 0;\nvar numSales = 0;\nvar numSW = 0;\nvar numTL = 0;\nvar numUT = 0;\nconst spreadSheet = new GoogleSpreadsheet(\"1xL-FWa7vdAH32MtPPVX688IMmG2y2rE34A_VW7SoZnI\");\nexport default function Graph() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [isLoaded, setIsLoaded] = React.useState(false);\n\n  _s(async function google() {\n    _s();\n\n    try {\n      await spreadSheet.useServiceAccountAuth({\n        client_email: SheetsAPIInfo.client_email,\n        private_key: SheetsAPIInfo.private_key\n      });\n      await spreadSheet.loadInfo();\n      const sheet = spreadSheet.sheetsByIndex[0];\n      rows = await sheet.getRows();\n\n      for (var i = 0; i < rows.length; i++) {\n        if (rows[i].Industry === \"Accounting, Banking & Finance\") {\n          numABF++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n          salABF.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Agriculture or Forestry\") {\n          numAF++;\n        }\n\n        if (rows[i].Industry === \"Art & Design\") {\n          numAD++;\n        }\n\n        if (rows[i].Industry === \"Business or Consulting\") {\n          numBC++;\n        }\n\n        if (rows[i].Industry === \"Computing or Tech\") {\n          numCT++;\n        }\n\n        if (rows[i].Industry === \"Education (Primary/Secondary)\") {\n          numEPS++;\n        }\n\n        if (rows[i].Industry === \"Education (Higher Education)\") {\n          numEH++;\n        }\n\n        if (rows[i].Industry === \"Engineering or Manufacturing\") {\n          numEM++;\n        }\n\n        if (rows[i].Industry === \"Entertainment\") {\n          numEnt++;\n        }\n\n        if (rows[i].Industry === \"Government and Public Administration\") {\n          numGPA++;\n        }\n\n        if (rows[i].Industry === \"Health care\") {\n          numHC++;\n        }\n\n        if (rows[i].Industry === \"Hospitality & Events\") {\n          numHE++;\n        }\n\n        if (rows[i].Industry === \"Insurance\") {\n          numIns++;\n        }\n\n        if (rows[i].Industry === \"Law\") {\n          numLaw++;\n        }\n\n        if (rows[i].Industry === \"Law Enforcement & Security\") {\n          numLS++;\n        }\n\n        if (rows[i].Industry === \"Leisure, Sport & Tourism\") {\n          numLST++;\n        }\n\n        if (rows[i].Industry === \"Marketing, Advertising & PR\") {\n          numMAPR++;\n        }\n\n        if (rows[i].Industry === \"Media & Digital\") {\n          numMD++;\n        }\n\n        if (rows[i].Industry === \"Nonprofits\") {\n          numNonP++;\n        }\n\n        if (rows[i].Industry === \"Property or Construction\") {\n          numPC++;\n        }\n\n        if (rows[i].Industry === \"Recruitment or HR\") {\n          numRHR++;\n        }\n\n        if (rows[i].Industry === \"Retail\") {\n          numRetail++;\n        }\n\n        if (rows[i].Industry === \"Sales\") {\n          numSales++;\n        }\n\n        if (rows[i].Industry === \"Social Work\") {\n          numSW++;\n        }\n\n        if (rows[i].Industry === \"Transport or Logistics\") {\n          numTL++;\n        }\n\n        if (rows[i].Industry === \"Utilities & Telecommunications\") {\n          numUT++;\n        }\n      }\n\n      var sumABF = 0;\n\n      for (let i = 0; i < numABF; i++) {\n        sumABF += salABF[i];\n      }\n\n      avgABF = sumABF / numABF; // console.log(avgABF);\n\n      avgABF = avgABF.toFixed(2);\n      data1.push({\n        name: \"Accounting, Banking & Finance\",\n        val: numABF\n      });\n      data1.push({\n        name: \"Agriculture or Forestry\",\n        val: numAF\n      });\n      data1.push({\n        name: \"Art & Design\",\n        val: numAD\n      });\n      data1.push({\n        name: \"Business or Consulting\",\n        val: numBC\n      });\n      data1.push({\n        name: \"Computing or Tech\",\n        val: numCT\n      });\n      data1.push({\n        name: \"Education (Primary/Secondary)\",\n        val: numEPS\n      });\n      data1.push({\n        name: \"Education (Higher Education)\",\n        val: numEH\n      });\n      data1.push({\n        name: \"Engineering or Manufacturing\",\n        val: numEM\n      });\n      data1.push({\n        name: \"Entertainment\",\n        val: numEnt\n      });\n      data1.push({\n        name: \"Government and Public Administration\",\n        val: numGPA\n      });\n      data1.push({\n        name: \"Health Care\",\n        val: numHC\n      });\n      data1.push({\n        name: \"Hospitality & Events\",\n        val: numHE\n      });\n      data1.push({\n        name: \"Insurance\",\n        val: numIns\n      });\n      data1.push({\n        name: \"Law\",\n        val: numLaw\n      });\n      data1.push({\n        name: \"Law Enforcement & Security\",\n        val: numLS\n      });\n      data1.push({\n        name: \"Leisure, Sport & Tourism\",\n        val: numLST\n      });\n      data1.push({\n        name: \"Marketing, Advertising & PR\",\n        val: numMAPR\n      });\n      data1.push({\n        name: \"Media & Digital\",\n        val: numMD\n      });\n      data1.push({\n        name: \"Nonprofits\",\n        val: numNonP\n      });\n      data1.push({\n        name: \"Property or Construction\",\n        val: numPC\n      });\n      data1.push({\n        name: \"Recruitment or HR\",\n        val: numRHR\n      });\n      data1.push({\n        name: \"Retail\",\n        val: numRetail\n      });\n      data1.push({\n        name: \"Sales\",\n        val: numSales\n      });\n      data1.push({\n        name: \"Social Work\",\n        val: numSW\n      });\n      data1.push({\n        name: \"Transport or Logistics\",\n        val: numTL\n      });\n      data1.push({\n        name: \"Utilities & Telecommunications\",\n        val: numUT\n      });\n      console.log(data1);\n      console.log(salABF);\n      console.log(avgABF);\n      setIsLoaded(true);\n      console.log(isLoaded);\n      return true;\n    } catch (e) {\n      console.error(\"Error: \", e);\n    }\n  }, \"XzZzjmf42T4ghIIVsLcPZIIQRXQ=\", false, function () {\n    return [spreadSheet.useServiceAccountAuth];\n  })();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.appBarSpacer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            lg: 9,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Distribution of People in the Job Market\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(RadarChart, {\n                  outerRadius: 300,\n                  width: 1000,\n                  height: 670,\n                  data: data1,\n                  children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n                    dataKey: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {\n                    angle: 30,\n                    domain: [0, 150]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Radar, {\n                    name: \"People\",\n                    dataKey: \"val\",\n                    fill: colors[2],\n                    fillOpacity: 0.5\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Graph, \"E9FXvoLVpNCvxFRTOszJmb2KKvI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/Graph.js"],"names":["React","SheetsAPIInfo","GoogleSpreadsheet","Container","Grid","Paper","useStyles","CircularProgress","RadarChart","Radar","PolarGrid","PolarAngleAxis","PolarRadiusAxis","BarChart","Bar","PieChart","Pie","LineChart","Line","CartesianGrid","XAxis","YAxis","Label","Tooltip","Legend","colors","data","name","val","fill","data1","data2","data3","rows","numCT","numABF","avgABF","salABF","numAF","numAD","numBC","numEPS","numEH","numEM","numEnt","numGPA","numHC","numHE","numIns","numLaw","numLS","numLST","numMAPR","numMD","numNonP","numPC","numRHR","numRetail","numSales","numSW","numTL","numUT","spreadSheet","Graph","isLoaded","setIsLoaded","useState","google","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","getRows","i","length","Industry","totalSalary","parseInt","replace","push","sumABF","toFixed","console","log","e","error","classes","root","content","appBarSpacer","container","paper"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SheetsAPIInfo from \"../SheetsAPIInfo.json\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"./UseStyles.js\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  RadarChart,\n  Radar,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Label,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\nconst data = [\n  { name: \"Computing or Tech\", val: 5000, fill: colors[0] },\n  { name: \"Accounting, Banking & Finance\", val: 7000, fill: colors[1] },\n  { name: \"Education (Higher Education)\", val: 2000, fill: colors[2] },\n];\nlet data1 = [];\nlet data2 = [];\nlet data3 = [];\nlet rows = [];\nvar numCT = 0;\nlet numABF = 0;\nlet avgABF = 0.0;\nvar salABF = [];\nvar numAF = 0;\nvar numAD = 0;\nvar numBC = 0;\nvar numEPS = 0;\nvar numEH = 0;\nvar numEM = 0;\nvar numEnt = 0;\nvar numGPA = 0;\nvar numHC = 0;\nvar numHE = 0;\nvar numIns = 0;\nvar numLaw = 0;\nvar numLS = 0;\nvar numLST = 0;\nvar numMAPR = 0;\nvar numMD = 0;\nvar numNonP = 0;\nvar numPC = 0;\nvar numRHR = 0;\nvar numRetail = 0;\nvar numSales = 0;\nvar numSW = 0;\nvar numTL = 0;\nvar numUT = 0;\n\nconst spreadSheet = new GoogleSpreadsheet(\n  \"1xL-FWa7vdAH32MtPPVX688IMmG2y2rE34A_VW7SoZnI\"\n);\n\nexport default function Graph() {\n  const [isLoaded, setIsLoaded] = React.useState(false);\n\n  (async function google() {\n    try {\n      await spreadSheet.useServiceAccountAuth({\n        client_email: SheetsAPIInfo.client_email,\n        private_key: SheetsAPIInfo.private_key,\n      });\n\n      await spreadSheet.loadInfo();\n      const sheet = spreadSheet.sheetsByIndex[0];\n      rows = await sheet.getRows();\n      for (var i = 0; i < rows.length; i++) {\n        if (rows[i].Industry === \"Accounting, Banking & Finance\") {\n          numABF++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          salABF.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Agriculture or Forestry\") {\n          numAF++;\n        }\n        if (rows[i].Industry === \"Art & Design\") {\n          numAD++;\n        }\n        if (rows[i].Industry === \"Business or Consulting\") {\n          numBC++;\n        }\n        if (rows[i].Industry === \"Computing or Tech\") {\n          numCT++;\n        }\n        if (rows[i].Industry === \"Education (Primary/Secondary)\") {\n          numEPS++;\n        }\n        if (rows[i].Industry === \"Education (Higher Education)\") {\n          numEH++;\n        }\n        if (rows[i].Industry === \"Engineering or Manufacturing\") {\n          numEM++;\n        }\n        if (rows[i].Industry === \"Entertainment\") {\n          numEnt++;\n        }\n        if (rows[i].Industry === \"Government and Public Administration\") {\n          numGPA++;\n        }\n        if (rows[i].Industry === \"Health care\") {\n          numHC++;\n        }\n        if (rows[i].Industry === \"Hospitality & Events\") {\n          numHE++;\n        }\n        if (rows[i].Industry === \"Insurance\") {\n          numIns++;\n        }\n        if (rows[i].Industry === \"Law\") {\n          numLaw++;\n        }\n        if (rows[i].Industry === \"Law Enforcement & Security\") {\n          numLS++;\n        }\n        if (rows[i].Industry === \"Leisure, Sport & Tourism\") {\n          numLST++;\n        }\n        if (rows[i].Industry === \"Marketing, Advertising & PR\") {\n          numMAPR++;\n        }\n        if (rows[i].Industry === \"Media & Digital\") {\n          numMD++;\n        }\n        if (rows[i].Industry === \"Nonprofits\") {\n          numNonP++;\n        }\n        if (rows[i].Industry === \"Property or Construction\") {\n          numPC++;\n        }\n        if (rows[i].Industry === \"Recruitment or HR\") {\n          numRHR++;\n        }\n        if (rows[i].Industry === \"Retail\") {\n          numRetail++;\n        }\n        if (rows[i].Industry === \"Sales\") {\n          numSales++;\n        }\n        if (rows[i].Industry === \"Social Work\") {\n          numSW++;\n        }\n        if (rows[i].Industry === \"Transport or Logistics\") {\n          numTL++;\n        }\n        if (rows[i].Industry === \"Utilities & Telecommunications\") {\n          numUT++;\n        }\n      }\n      var sumABF = 0;\n      for (let i = 0; i < numABF; i++) {\n        sumABF += salABF[i];\n      }\n      avgABF = sumABF / numABF;\n      // console.log(avgABF);\n      avgABF = avgABF.toFixed(2);\n      data1.push({ name: \"Accounting, Banking & Finance\", val: numABF });\n      data1.push({ name: \"Agriculture or Forestry\", val: numAF });\n      data1.push({ name: \"Art & Design\", val: numAD });\n      data1.push({ name: \"Business or Consulting\", val: numBC });\n      data1.push({ name: \"Computing or Tech\", val: numCT });\n      data1.push({ name: \"Education (Primary/Secondary)\", val: numEPS });\n      data1.push({ name: \"Education (Higher Education)\", val: numEH });\n      data1.push({ name: \"Engineering or Manufacturing\", val: numEM });\n      data1.push({ name: \"Entertainment\", val: numEnt });\n      data1.push({ name: \"Government and Public Administration\", val: numGPA });\n      data1.push({ name: \"Health Care\", val: numHC });\n      data1.push({ name: \"Hospitality & Events\", val: numHE });\n      data1.push({ name: \"Insurance\", val: numIns });\n      data1.push({ name: \"Law\", val: numLaw });\n      data1.push({ name: \"Law Enforcement & Security\", val: numLS });\n      data1.push({ name: \"Leisure, Sport & Tourism\", val: numLST });\n      data1.push({ name: \"Marketing, Advertising & PR\", val: numMAPR });\n      data1.push({ name: \"Media & Digital\", val: numMD });\n      data1.push({ name: \"Nonprofits\", val: numNonP });\n      data1.push({ name: \"Property or Construction\", val: numPC });\n      data1.push({ name: \"Recruitment or HR\", val: numRHR });\n      data1.push({ name: \"Retail\", val: numRetail });\n      data1.push({ name: \"Sales\", val: numSales });\n      data1.push({ name: \"Social Work\", val: numSW });\n      data1.push({ name: \"Transport or Logistics\", val: numTL });\n      data1.push({ name: \"Utilities & Telecommunications\", val: numUT });\n      console.log(data1);\n      console.log(salABF);\n      console.log(avgABF);\n      setIsLoaded(true);\n      console.log(isLoaded);\n      return true;\n    } catch (e) {\n      console.error(\"Error: \", e);\n    }\n  })();\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={classes.paper}>\n                <center>\n                  <h4>Distribution of People in the Job Market</h4>\n                </center>\n                {!isLoaded ? (\n                  <CircularProgress />\n                ) : (\n                  <center>\n                    <RadarChart\n                      outerRadius={300}\n                      width={1000}\n                      height={670}\n                      data={data1}\n                    >\n                      <PolarGrid />\n                      <PolarAngleAxis dataKey=\"name\" />\n                      <PolarRadiusAxis angle={30} domain={[0, 150]} />\n                      <Radar\n                        name=\"People\"\n                        dataKey=\"val\"\n                        fill={colors[2]}\n                        fillOpacity={0.5}\n                      />\n                      <Legend />\n                    </RadarChart>\n                  </center>\n                )}\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}