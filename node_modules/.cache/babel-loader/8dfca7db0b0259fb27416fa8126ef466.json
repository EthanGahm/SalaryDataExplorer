{"ast":null,"code":"var _jsxFileName = \"/home/ethan/Documents/DevHub/SalaryDataExplorer/frontend/src/Components/FilterAndSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { mainListItems } from \"./listItems\";\nimport Title from \"./Title\";\nimport Copyright from \"./Copyright\";\nimport useStyles from \"./UseStyles.js\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tabletop from \"tabletop\";\nimport { useEffect, useState } from \"react\";\nimport PageTitle from \"./PageTitle\";\nimport GoogleMaps from \"./GoogleMaps.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilterAndSearch() {\n  _s();\n\n  const [data, setData] = useState([]); // Industry data\n\n  const industries = data.map(item => item.Industry);\n  const indset = new Set(industries);\n  let indarray = [...indset];\n  const industriesOptions = indarray.map(item => ({\n    label: item,\n    value: item\n  }));\n  const options = industriesOptions.map(option => {\n    const firstLetter = option.label[0].toUpperCase();\n    return {\n      firstLetter: firstLetter,\n      ...option\n    };\n  }); // Gender Data\n\n  const genderOptions = [{\n    label: \"Woman\",\n    value: \"Woman\"\n  }, {\n    label: \"Man\",\n    value: \"Man\"\n  }, {\n    label: \"Non-binary\",\n    value: \"Non-binary\"\n  }, {\n    label: \"Other\",\n    value: \"Other/NA\"\n  }]; // State/Province data\n\n  const states = data.map(item => item.State);\n  const stateset = new Set(states);\n  let statearray = [...stateset];\n  const stateOptions = statearray.map(item => ({\n    label: item,\n    value: item\n  })); // Country data\n\n  const countries = data.map(item => item.Country);\n  const countryset = new Set(countries);\n  let countryarray = [...countryset];\n  const countryOptions = countryarray.map(item => ({\n    label: item,\n    value: item\n  })); // City data\n\n  const cities = data.map(item => item.City);\n  const cityset = new Set(cities);\n  let cityarray = [...cityset];\n  const cityOptions = cityarray.map(item => ({\n    label: item,\n    value: item\n  })); // Utilizes tabletop to get data from google spreadsheet\n\n  useEffect(() => {\n    Tabletop.init({\n      key: \"1bacAOGeeXSRUy5jzovspRcS-SPwWxaXjp8AqONnD290\",\n      simpleSheet: true\n    }).then(data => setData(data)).catch(err => console.warn(err));\n  }, []); // Page Styling\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  }; // Marks for Age Slider\n\n\n  const marks = [{\n    value: 0,\n    label: \"<18\"\n  }, {\n    value: 15,\n    label: \"18-24\"\n  }, {\n    value: 30,\n    label: \"25-34\"\n  }, {\n    value: 45,\n    label: \"35-44\"\n  }, {\n    value: 60,\n    label: \"45-54\"\n  }, {\n    value: 75,\n    label: \"55-64\"\n  }, {\n    value: 90,\n    label: \">65\"\n  }]; // Age slider state\n\n  const [value, setValue] = React.useState([15]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function valuetext(value) {\n    return `${value}`;\n  }\n\n  const location = {\n    address: \"1600 Amphitheatre Parkway, Mountain View, california.\",\n    lat: 37.12,\n    lng: -122.12\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"absolute\",\n      className: clsx(classes.appBar, open && classes.appBarShift),\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          className: clsx(classes.menuButton, open && classes.menuButtonHidden),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PageTitle, {\n          text: \"Filter and Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      classes: {\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n      },\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbarIcon,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: mainListItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.appBarSpacer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"Set Parameters and Search the Dataset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"Industry:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"industry-dropdown\",\n                  options: options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter)),\n                  groupBy: option => option.firstLetter,\n                  getOptionLabel: option => option.label,\n                  style: {\n                    width: 300\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              pt: 3,\n              children: [\"Age Range:\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.root,\n                style: {\n                  width: \"300px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  id: \"range-slider\",\n                  gutterBottom: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                  value: value,\n                  style: {\n                    width: 300\n                  },\n                  onChange: handleChange,\n                  step: null,\n                  marks: marks,\n                  min: 0,\n                  max: 90,\n                  \"aria-labelledby\": \"discrete-slider\",\n                  getAriaValueText: valuetext\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"Gender:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"gender-dropdown\",\n                  options: genderOptions,\n                  loading: true,\n                  getOptionLabel: option => option.label,\n                  style: {\n                    width: 300\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"Country:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"country-dropdown\",\n                  options: countryOptions,\n                  getOptionLabel: option => option.label,\n                  style: {\n                    width: 300\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"State/Province:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"state-dropdown\",\n                  options: stateOptions,\n                  getOptionLabel: option => option.label,\n                  style: {\n                    width: 300\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"City:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"city-dropdown\",\n                  options: cityOptions,\n                  getOptionLabel: option => option.label,\n                  style: {\n                    width: 300\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: 3,\n                children: [\"Google Maps\", /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                  location: location,\n                  zoomLevel: 8\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          pt: 5,\n          children: /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilterAndSearch, \"OUWm/5s2AKkebNJJr/0P8LyXPMw=\", false, function () {\n  return [useStyles];\n});\n\n_c = FilterAndSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterAndSearch\");","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryDataExplorer/frontend/src/Components/FilterAndSearch.js"],"names":["React","clsx","CssBaseline","Drawer","Box","AppBar","Toolbar","List","Typography","Divider","IconButton","Container","Grid","Paper","MenuIcon","ChevronLeftIcon","mainListItems","Title","Copyright","useStyles","Slider","Autocomplete","TextField","Tabletop","useEffect","useState","PageTitle","GoogleMaps","FilterAndSearch","data","setData","industries","map","item","Industry","indset","Set","indarray","industriesOptions","label","value","options","option","firstLetter","toUpperCase","genderOptions","states","State","stateset","statearray","stateOptions","countries","Country","countryset","countryarray","countryOptions","cities","City","cityset","cityarray","cityOptions","init","key","simpleSheet","then","catch","err","console","warn","classes","open","setOpen","handleDrawerOpen","handleDrawerClose","marks","setValue","handleChange","event","newValue","valuetext","location","address","lat","lng","root","appBar","appBarShift","toolbar","menuButton","menuButtonHidden","paper","drawerPaper","drawerPaperClose","toolbarIcon","content","appBarSpacer","container","width","sort","a","b","localeCompare","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { mainListItems } from \"./listItems\";\nimport Title from \"./Title\";\nimport Copyright from \"./Copyright\";\nimport useStyles from \"./UseStyles.js\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tabletop from \"tabletop\";\nimport { useEffect, useState } from \"react\";\nimport PageTitle from \"./PageTitle\";\nimport GoogleMaps from \"./GoogleMaps.js\";\n\nexport default function FilterAndSearch() {\n  const [data, setData] = useState([]);\n\n  // Industry data\n  const industries = data.map((item) => item.Industry);\n  const indset = new Set(industries);\n  let indarray = [...indset];\n  const industriesOptions = indarray.map((item) => ({\n    label: item,\n    value: item,\n  }));\n\n  const options = industriesOptions.map((option) => {\n    const firstLetter = option.label[0].toUpperCase();\n    return {\n      firstLetter: firstLetter,\n      ...option,\n    };\n  });\n\n  // Gender Data\n  const genderOptions = [\n    { label: \"Woman\", value: \"Woman\" },\n    { label: \"Man\", value: \"Man\" },\n    { label: \"Non-binary\", value: \"Non-binary\" },\n    { label: \"Other\", value: \"Other/NA\" },\n  ];\n\n  // State/Province data\n  const states = data.map((item) => item.State);\n  const stateset = new Set(states);\n  let statearray = [...stateset];\n  const stateOptions = statearray.map((item) => ({ label: item, value: item }));\n\n  // Country data\n  const countries = data.map((item) => item.Country);\n  const countryset = new Set(countries);\n  let countryarray = [...countryset];\n  const countryOptions = countryarray.map((item) => ({\n    label: item,\n    value: item,\n  }));\n\n  // City data\n  const cities = data.map((item) => item.City);\n  const cityset = new Set(cities);\n  let cityarray = [...cityset];\n  const cityOptions = cityarray.map((item) => ({ label: item, value: item }));\n\n  // Utilizes tabletop to get data from google spreadsheet\n  useEffect(() => {\n    Tabletop.init({\n      key: \"1bacAOGeeXSRUy5jzovspRcS-SPwWxaXjp8AqONnD290\",\n      simpleSheet: true,\n    })\n      .then((data) => setData(data))\n      .catch((err) => console.warn(err));\n  }, []);\n\n  // Page Styling\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  // Marks for Age Slider\n  const marks = [\n    { value: 0, label: \"<18\" },\n    { value: 15, label: \"18-24\" },\n    { value: 30, label: \"25-34\" },\n    { value: 45, label: \"35-44\" },\n    { value: 60, label: \"45-54\" },\n    { value: 75, label: \"55-64\" },\n    { value: 90, label: \">65\" },\n  ];\n\n  // Age slider state\n  const [value, setValue] = React.useState([15]);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  function valuetext(value) {\n    return `${value}`;\n  }\n\n  const location = {\n    address: \"1600 Amphitheatre Parkway, Mountain View, california.\",\n    lat: 37.12,\n    lng: -122.12,\n  };\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <PageTitle text=\"Filter and Search\" />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Title>Set Parameters and Search the Dataset</Title>\n              {/* React-Select, taken from https://stackoverflow.com/questions/48930622/react-select-show-search-bar-in-dropdown  */}\n              <div style={{ width: \"300px\" }}>\n                <Box pt={3}>\n                  Industry:\n                  <Autocomplete\n                    id=\"industry-dropdown\"\n                    options={options.sort(\n                      (a, b) => -b.firstLetter.localeCompare(a.firstLetter)\n                    )}\n                    groupBy={(option) => option.firstLetter}\n                    getOptionLabel={(option) => option.label}\n                    style={{ width: 300 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </Box>\n              </div>\n              {/* Age Range is taken from @material-ui https://material-ui.com/components/slider/ */}\n              <Box pt={3}>\n                Age Range:\n                <div className={classes.root} style={{ width: \"300px\" }}>\n                  <Typography id=\"range-slider\" gutterBottom></Typography>\n                  <Slider\n                    value={value}\n                    style={{ width: 300 }}\n                    onChange={handleChange}\n                    step={null}\n                    marks={marks}\n                    min={0}\n                    max={90}\n                    aria-labelledby=\"discrete-slider\"\n                    getAriaValueText={valuetext}\n                  />\n                </div>\n              </Box>\n\n              <div style={{ width: \"300px\" }}>\n                <Box pt={3}>\n                  Gender:\n                  <Autocomplete\n                    id=\"gender-dropdown\"\n                    options={genderOptions}\n                    loading={true}\n                    getOptionLabel={(option) => option.label}\n                    style={{ width: 300 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </Box>\n              </div>\n              <div style={{ width: \"300px\" }}>\n                <Box pt={3}>\n                  Country:\n                  <Autocomplete\n                    id=\"country-dropdown\"\n                    options={countryOptions}\n                    getOptionLabel={(option) => option.label}\n                    style={{ width: 300 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </Box>\n              </div>\n              <div style={{ width: \"300px\" }}>\n                <Box pt={3}>\n                  State/Province:\n                  <Autocomplete\n                    id=\"state-dropdown\"\n                    options={stateOptions}\n                    getOptionLabel={(option) => option.label}\n                    style={{ width: 300 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </Box>\n              </div>\n              <div style={{ width: \"300px\" }}>\n                <Box pt={3}>\n                  City:\n                  <Autocomplete\n                    id=\"city-dropdown\"\n                    options={cityOptions}\n                    getOptionLabel={(option) => option.label}\n                    style={{ width: 300 }}\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" />\n                    )}\n                  />\n                </Box>\n              </div>\n              <div style={{ width: \"300px\" }}>\n                <Box pt={3}>\n                  Google Maps\n                  <GoogleMaps location={location} zoomLevel={8} />\n                </Box>\n              </div>\n            </Grid>\n          </Grid>\n          <Box pt={5}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}