{"ast":null,"code":"var _jsxFileName = \"/home/ethan/Documents/DevHub/SalaryDataExplorer/frontend/src/Components/Graph.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"./UseStyles.js\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { csv } from 'd3';\nimport dataCSV from './CleanedData2021.csv';\nimport { RadarChart, Radar, PolarGrid, PolarAngleAxis, PolarRadiusAxis, BarChart, Bar, PieChart, Pie, LineChart, Line, CartesianGrid, XAxis, YAxis, Label, Tooltip, Legend, LabelList } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\nconst data = [{\n  name: \"Computing or Tech\",\n  val: 5000,\n  fill: colors[0]\n}, {\n  name: \"Accounting, Banking & Finance\",\n  val: 7000,\n  fill: colors[1]\n}, {\n  name: \"Education (Higher Education)\",\n  val: 2000,\n  fill: colors[2]\n}];\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\nvar data4 = [];\nvar numABF = 0;\nvar avgABF = 0.0;\nvar salABF = [];\nvar numAF = 0;\nvar avgAF = 0.0;\nvar salAF = [];\nvar numAD = 0;\nvar avgAD = 0.0;\nvar salAD = [];\nvar numBC = 0;\nvar avgBC = 0.0;\nvar salBC = [];\nvar numCT = 0;\nvar avgCT = 0.0;\nvar salCT = [];\nvar numEDU = 0;\nvar avgEDU = 0.0;\nvar salEDU = [];\nvar numEM = 0;\nvar avgEM = 0.0;\nvar salEM = [];\nvar numEnt = 0;\nvar avgEnt = 0.0;\nvar salEnt = [];\nvar numGPA = 0;\nvar avgGPA = 0.0;\nvar salGPA = [];\nvar numHC = 0;\nvar avgHC = 0.0;\nvar salHC = [];\nvar numHE = 0;\nvar avgHE = 0.0;\nvar salHE = [];\nvar numIns = 0;\nvar avgIns = 0.0;\nvar salIns = [];\nvar numLaw = 0;\nvar avgLaw = 0.0;\nvar salLaw = [];\nvar numLST = 0;\nvar avgLST = 0.0;\nvar salLST = [];\nvar numMAPR = 0;\nvar avgMAPR = 0.0;\nvar salMAPR = [];\nvar numMD = 0;\nvar avgMD = 0.0;\nvar salMD = [];\nvar numNonP = 0;\nvar avgNonP = 0.0;\nvar salNonP = [];\nvar numPC = 0;\nvar avgPC = 0.0;\nvar salPC = [];\nvar numRHR = 0;\nvar avgRHR = 0.0;\nvar salRHR = [];\nvar numRetail = 0;\nvar avgRetail = 0.0;\nvar salRetail = [];\nvar numSales = 0;\nvar avgSales = 0.0;\nvar salSales = [];\nvar numSW = 0;\nvar avgSW = 0.0;\nvar salSW = [];\nvar numTL = 0;\nvar avgTL = 0.0;\nvar salTL = [];\nvar numUT = 0;\nvar avgUT = 0.0;\nvar salUT = [];\nvar numPUB = 0;\nvar avgPUB = 0.0;\nvar salPUB = [];\nvar numRES = 0;\nvar avgRES = 0.0;\nvar salRES = [];\nvar numAER = 0;\nvar avgAER = 0.0;\nvar salAER = [];\nvar numLIB = 0;\nvar avgLIB = 0.0;\nvar salLIB = [];\nvar numFOOD = 0;\nvar avgFOOD = 0.0;\nvar salFOOD = [];\nvar numENG = 0;\nvar avgENG = 0.0;\nvar salENG = [];\nvar numENV = 0;\nvar avgENV = 0.0;\nvar salENV = [];\nvar numAR = 0;\nvar avgAR = 0.0;\nvar salAR = [];\nvar numO = 0;\nvar avgO = 0.0;\nvar salO = [];\nvar sal18 = [];\nvar sal18t24 = [];\nvar sal25t34 = [];\nvar sal35t44 = [];\nvar sal45t54 = [];\nvar sal55t64 = [];\nvar sal65 = [];\nvar avg18 = 0.0;\nvar avg18t24 = 0.0;\nvar avg25t34 = 0.0;\nvar avg35t44 = 0.0;\nvar avg45t54 = 0.0;\nvar avg55t64 = 0.0;\nvar avg65 = 0.0;\nvar highSchool = 0;\nvar someCollege = 0;\nvar college = 0;\nvar masters = 0;\nvar PhD = 0;\nvar profD = 0;\nexport default function Graph() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [isLoaded, setIsLoaded] = React.useState(false);\n\n  _s(async function google() {\n    _s();\n\n    useEffect(() => {\n      csv(dataCSV).then(data => {\n        data.pop(0);\n\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].Age === 'under 18') {\n            sal18.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Age === '18-24') {\n            sal18t24.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Age === '25-34') {\n            sal25t34.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Age === '35-44') {\n            sal35t44.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Age === '45-54') {\n            sal45t54.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Age === '55-64') {\n            sal55t64.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Age === '65 or over') {\n            sal65.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Accounting, Banking & Finance') {\n            numABF++;\n            salABF.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Agriculture or Forestry') {\n            numAF++;\n            salAF.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Art & Design') {\n            numAD++;\n            salAD.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Business or Consulting') {\n            numBC++;\n            salBC.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Computing or Tech') {\n            numCT++;\n            salCT.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Education') {\n            numEDU++;\n            salEDU.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Engineering or Manufacturing') {\n            numEM++;\n            salEM.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Entertainment') {\n            numEnt++;\n            salEnt.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Government and Public Administration') {\n            numGPA++;\n            salGPA.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Health care') {\n            numHC++;\n            salHC.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Hospitality & Events') {\n            numHE++;\n            salHE.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Insurance') {\n            numIns++;\n            salIns.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Law or Law Enforcement') {\n            numLaw++;\n            salLaw.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Leisure, Sport & Tourism') {\n            numLST++;\n            salLST.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Marketing, Advertising & PR') {\n            numMAPR++;\n            salMAPR.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Media & Digital') {\n            numMD++;\n            salMD.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Nonprofits') {\n            numNonP++;\n            salNonP.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Property or Construction') {\n            numPC++;\n            salPC.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Recruitment or HR') {\n            numRHR++;\n            salRHR.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Retail') {\n            numRetail++;\n            salRetail.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Sales') {\n            numSales++;\n            salSales.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Social Work') {\n            numSW++;\n            salSW.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Transport or Logistics') {\n            numTL++;\n            salTL.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Utilities & Telecommunications') {\n            numUT++;\n            salUT.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Publishing') {\n            numPUB++;\n            salPUB.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Research') {\n            numRES++;\n            salRES.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Aerospace') {\n            numAER++;\n            salAER.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Library') {\n            numLIB++;\n            salLIB.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Food') {\n            numFOOD++;\n            salFOOD.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Energy') {\n            numENG++;\n            salENG.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Environment') {\n            numENV++;\n            salENV.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Auto Repair') {\n            numAR++;\n            salAR.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Industry === 'Other') {\n            numO++;\n            salO.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Highest_Level_of_Education === 'High School') {\n            highSchool++;\n          }\n\n          if (data[i].Highest_Level_of_Education === 'Some college') {\n            someCollege++;\n          }\n\n          if (data[i].Highest_Level_of_Education === 'College degree') {\n            college++;\n          }\n\n          if (data[i].Highest_Level_of_Education === \"Master's degree\") {\n            masters++;\n          }\n\n          if (data[i].Highest_Level_of_Education === 'PhD') {\n            PhD++;\n          }\n\n          if (data[i].Highest_Level_of_Education === 'Professional degree (MD, JD, etc.)') {\n            profD++;\n          }\n        }\n\n        var sumABF = 0.0;\n\n        for (let i = 0; i < numABF; i++) {\n          sumABF += salABF[i];\n        }\n\n        console.log(sumABF);\n        avgABF = sumABF / numABF / 1000;\n        avgABF = avgABF.toFixed(2);\n        var sumENG = 0.0;\n\n        for (let i = 0; i < numENG; i++) {\n          sumENG += salENG[i];\n        }\n\n        avgENG = sumENG / numENG / 1000;\n        avgENG = avgENG.toFixed(2);\n        var sumAF = 0.0;\n\n        for (let i = 0; i < numAF; i++) {\n          sumAF += salAF[i];\n        }\n\n        avgAF = sumAF / numAF / 1000;\n        avgAF = avgAF.toFixed(2);\n        var sumAD = 0.0;\n\n        for (let i = 0; i < numAD; i++) {\n          sumAD += salAD[i];\n        }\n\n        avgAD = sumAD / numAD / 1000;\n        avgAD = avgAD.toFixed(2);\n        var sumBC = 0.0;\n\n        for (let i = 0; i < numBC; i++) {\n          sumBC += salBC[i];\n        }\n\n        avgBC = sumBC / numBC / 1000;\n        avgBC = avgBC.toFixed(2);\n        var sumCT = 0.0;\n\n        for (let i = 0; i < numCT; i++) {\n          sumCT += salCT[i];\n        }\n\n        avgCT = sumCT / numCT / 1000;\n        avgCT = avgCT.toFixed(2);\n        var sumEDU = 0.0;\n\n        for (let i = 0; i < numEDU; i++) {\n          sumEDU += salEDU[i];\n        }\n\n        avgEDU = sumEDU / numEDU / 1000;\n        avgEDU = avgEDU.toFixed(2);\n        var sumEM = 0.0;\n\n        for (let i = 0; i < numEM; i++) {\n          sumEM += salEM[i];\n        }\n\n        avgEM = sumEM / numEM / 1000;\n        avgEM = avgEM.toFixed(2);\n        var sumEnt = 0.0;\n\n        for (let i = 0; i < numEnt; i++) {\n          sumEnt += salEnt[i];\n        }\n\n        avgEnt = sumEnt / numEnt / 1000;\n        avgEnt = avgEnt.toFixed(2);\n        var sumGPA = 0.0;\n\n        for (let i = 0; i < numGPA; i++) {\n          sumGPA += salGPA[i];\n        }\n\n        avgGPA = sumGPA / numGPA / 1000;\n        avgGPA = avgGPA.toFixed(2);\n        var sumHC = 0.0;\n\n        for (let i = 0; i < numHC; i++) {\n          sumHC += salHC[i];\n        }\n\n        avgHC = sumHC / numHC / 1000;\n        avgHC = avgHC.toFixed(2);\n        var sumHE = 0.0;\n\n        for (let i = 0; i < numHE; i++) {\n          sumHE += salHE[i];\n        }\n\n        avgHE = sumHE / numHE / 1000;\n        avgHE = avgHE.toFixed(2);\n        var sumIns = 0.0;\n\n        for (let i = 0; i < numIns; i++) {\n          sumIns += salIns[i];\n        }\n\n        avgIns = sumIns / numIns / 1000;\n        avgIns = avgIns.toFixed(2);\n        var sumLaw = 0.0;\n\n        for (let i = 0; i < numLaw; i++) {\n          sumLaw += salLaw[i];\n        }\n\n        avgLaw = sumLaw / numLaw / 1000;\n        avgLaw = avgLaw.toFixed(2);\n        var sumLST = 0.0;\n\n        for (let i = 0; i < numLST; i++) {\n          sumLST += salLST[i];\n        }\n\n        avgLST = sumLST / numLST / 1000;\n        avgLST = avgLST.toFixed(2);\n        var sumMAPR = 0.0;\n\n        for (let i = 0; i < numMAPR; i++) {\n          sumMAPR += salMAPR[i];\n        }\n\n        avgMAPR = sumMAPR / numMAPR / 1000;\n        avgMAPR = avgMAPR.toFixed(2);\n        var sumMD = 0.0;\n\n        for (let i = 0; i < numMD; i++) {\n          sumMD += salMD[i];\n        }\n\n        avgMD = sumMD / numMD / 1000;\n        avgMD = avgMD.toFixed(2);\n        var sumNonP = 0.0;\n\n        for (let i = 0; i < numNonP; i++) {\n          sumNonP += salNonP[i];\n        }\n\n        avgNonP = sumNonP / numNonP / 1000;\n        avgNonP = avgNonP.toFixed(2);\n        var sumPC = 0.0;\n\n        for (let i = 0; i < numPC; i++) {\n          sumPC += salPC[i];\n        }\n\n        avgPC = sumPC / numPC / 1000;\n        avgPC = avgPC.toFixed(2);\n        var sumRHR = 0.0;\n\n        for (let i = 0; i < numRHR; i++) {\n          sumRHR += salRHR[i];\n        }\n\n        avgRHR = sumRHR / numRHR / 1000;\n        avgRHR = avgRHR.toFixed(2);\n        var sumRetail = 0.0;\n\n        for (let i = 0; i < numRetail; i++) {\n          sumRetail += salRetail[i];\n        }\n\n        avgRetail = sumRetail / numRetail / 1000;\n        avgRetail = avgRetail.toFixed(2);\n        var sumSales = 0.0;\n\n        for (let i = 0; i < numSales; i++) {\n          sumSales += salSales[i];\n        }\n\n        avgSales = sumSales / numSales / 1000;\n        avgSales = avgSales.toFixed(2);\n        var sumSW = 0.0;\n\n        for (let i = 0; i < numSW; i++) {\n          sumSW += salSW[i];\n        }\n\n        avgSW = sumSW / numSW / 1000;\n        avgSW = avgSW.toFixed(2);\n        var sumTL = 0.0;\n\n        for (let i = 0; i < numTL; i++) {\n          sumTL += salTL[i];\n        }\n\n        avgTL = sumTL / numTL / 1000;\n        avgTL = avgTL.toFixed(2);\n        var sumUT = 0.0;\n\n        for (let i = 0; i < numUT; i++) {\n          sumUT += salUT[i];\n        }\n\n        avgUT = sumUT / numUT / 1000;\n        avgUT = avgUT.toFixed(2);\n        var sumPUB = 0.0;\n\n        for (let i = 0; i < numPUB; i++) {\n          sumPUB += salPUB[i];\n        }\n\n        avgPUB = sumPUB / numPUB / 1000;\n        avgPUB = avgPUB.toFixed(2);\n        var sumRES = 0.0;\n\n        for (let i = 0; i < numRES; i++) {\n          sumRES += salRES[i];\n        }\n\n        avgRES = sumRES / numRES / 1000;\n        avgRES = avgRES.toFixed(2);\n        var sumAER = 0.0;\n\n        for (let i = 0; i < numAER; i++) {\n          sumAER += salAER[i];\n        }\n\n        avgAER = sumAER / numAER / 1000;\n        avgAER = avgAER.toFixed(2);\n        var sumLIB = 0.0;\n\n        for (let i = 0; i < numLIB; i++) {\n          sumLIB += salLIB[i];\n        }\n\n        avgLIB = sumLIB / numLIB / 1000;\n        avgLIB = avgLIB.toFixed(2);\n        var sumFOOD = 0.0;\n\n        for (let i = 0; i < numFOOD; i++) {\n          sumFOOD += salFOOD[i];\n        }\n\n        avgFOOD = sumFOOD / numFOOD / 1000;\n        avgFOOD = avgFOOD.toFixed(2);\n        var sumENV = 0.0;\n\n        for (let i = 0; i < numENV; i++) {\n          sumENV += salENV[i];\n        }\n\n        avgENV = sumENV / numENV / 1000;\n        avgENV = avgENV.toFixed(2);\n        var sumAR = 0.0;\n\n        for (let i = 0; i < numAR; i++) {\n          sumAR += salAR[i];\n        }\n\n        avgAR = sumAR / numAR / 1000;\n        avgAR = avgAR.toFixed(2);\n        var sumO = 0.0;\n\n        for (let i = 0; i < numO; i++) {\n          sumO += salO[i];\n        }\n\n        avgO = sumO / numO / 1000;\n        avgO = avgO.toFixed(2);\n        var sum18 = 0.0;\n\n        for (let i = 0; i < sal18.length; i++) {\n          sum18 += sal18[i];\n        }\n\n        avg18 = sum18 / sal18.length / 1000;\n        avg18 = avg18.toFixed(2);\n        var sum18t24 = 0.0;\n\n        for (let i = 0; i < sal18t24.length; i++) {\n          sum18t24 += sal18t24[i];\n        }\n\n        avg18t24 = sum18t24 / sal18t24.length / 1000;\n        avg18t24 = avg18t24.toFixed(2);\n        var sum25t34 = 0.0;\n\n        for (let i = 0; i < sal25t34.length; i++) {\n          sum25t34 += sal25t34[i];\n        }\n\n        avg25t34 = sum25t34 / sal25t34.length / 1000;\n        avg25t34 = avg25t34.toFixed(2);\n        var sum35t44 = 0.0;\n\n        for (let i = 0; i < sal35t44.length; i++) {\n          sum35t44 += sal35t44[i];\n        }\n\n        avg35t44 = sum35t44 / sal35t44.length / 1000;\n        avg35t44 = avg35t44.toFixed(2);\n        var sum45t54 = 0.0;\n\n        for (let i = 0; i < sal45t54.length; i++) {\n          sum45t54 += sal45t54[i];\n        }\n\n        avg45t54 = sum45t54 / sal45t54.length / 1000;\n        avg45t54 = avg45t54.toFixed(2);\n        var sum55t64 = 0.0;\n\n        for (let i = 0; i < sal55t64.length; i++) {\n          sum55t64 += sal55t64[i];\n        }\n\n        avg55t64 = sum55t64 / sal55t64.length / 1000;\n        avg55t64 = avg55t64.toFixed(2);\n        var sum65 = 0.0;\n\n        for (let i = 0; i < sal65.length; i++) {\n          sum65 += sal65[i];\n        }\n\n        avg65 = sum65 / sal65.length / 1000;\n        avg65 = avg65.toFixed(2);\n        data1.push({\n          name: \"Energy\",\n          val: numENG\n        });\n        data1.push({\n          name: \"Agriculture or Forestry\",\n          val: numAF\n        });\n        data1.push({\n          name: \"Art & Design\",\n          val: numAD\n        });\n        data1.push({\n          name: \"Business or Consulting\",\n          val: numBC\n        });\n        data1.push({\n          name: \"Computing or Tech\",\n          val: numCT\n        });\n        data1.push({\n          name: \"Education\",\n          val: numEDU\n        });\n        data1.push({\n          name: \"Engineering or Manufacturing\",\n          val: numEM\n        });\n        data1.push({\n          name: \"Entertainment\",\n          val: numEnt\n        });\n        data1.push({\n          name: \"Government and Public Admin\",\n          val: numGPA\n        });\n        data1.push({\n          name: \"Health Care\",\n          val: numHC\n        });\n        data1.push({\n          name: \"Hospitality & Events\",\n          val: numHE\n        });\n        data1.push({\n          name: \"Insurance\",\n          val: numIns\n        });\n        data1.push({\n          name: \"Law or Law Enforcement\",\n          val: numLaw\n        });\n        data1.push({\n          name: \"Leisure, Sport & Tourism\",\n          val: numLST\n        });\n        data1.push({\n          name: \"Marketing, Advertising & PR\",\n          val: numMAPR\n        });\n        data1.push({\n          name: \"Media & Digital\",\n          val: numMD\n        });\n        data1.push({\n          name: \"Nonprofits\",\n          val: numNonP\n        });\n        data1.push({\n          name: \"Property or Construction\",\n          val: numPC\n        });\n        data1.push({\n          name: \"Recruitment or HR\",\n          val: numRHR\n        });\n        data1.push({\n          name: \"Retail\",\n          val: numRetail\n        });\n        data1.push({\n          name: \"Sales\",\n          val: numSales\n        });\n        data1.push({\n          name: \"Social Work\",\n          val: numSW\n        });\n        data1.push({\n          name: \"Transport or Logistics\",\n          val: numTL\n        });\n        data1.push({\n          name: \"Utilities & Telecommunications\",\n          val: numUT\n        });\n        data1.push({\n          name: \"Publishing\",\n          val: numPUB\n        });\n        data1.push({\n          name: \"Research\",\n          val: numRES\n        });\n        data1.push({\n          name: \"Aerospace\",\n          val: numAER\n        });\n        data1.push({\n          name: \"Library\",\n          val: numLIB\n        });\n        data1.push({\n          name: \"Food\",\n          val: numFOOD\n        });\n        data1.push({\n          name: \"Accounting, Banking & Finance\",\n          val: numABF\n        });\n        data1.push({\n          name: \"Environment\",\n          val: numENV\n        });\n        data1.push({\n          name: \"Auto Repair\",\n          val: numAR\n        });\n        data1.push({\n          name: \"Other\",\n          val: numO\n        });\n        data2.push({\n          name: \"Energy\",\n          val: avgENG\n        });\n        data2.push({\n          name: \"Agriculture or Forestry\",\n          val: avgAF\n        });\n        data2.push({\n          name: \"Art & Design\",\n          val: avgAD\n        });\n        data2.push({\n          name: \"Business or Consulting\",\n          val: avgBC\n        });\n        data2.push({\n          name: \"Computing or Tech\",\n          val: avgCT\n        });\n        data2.push({\n          name: \"Education\",\n          val: avgEDU\n        });\n        data2.push({\n          name: \"Engineering or Manufacturing\",\n          val: avgEM\n        });\n        data2.push({\n          name: \"Entertainment\",\n          val: avgEnt\n        });\n        data2.push({\n          name: \"Government and Public Admin\",\n          val: avgGPA\n        });\n        data2.push({\n          name: \"Health Care\",\n          val: avgHC\n        });\n        data2.push({\n          name: \"Hospitality & Events\",\n          val: avgHE\n        });\n        data2.push({\n          name: \"Insurance\",\n          val: avgIns\n        });\n        data2.push({\n          name: \"Law or Law Enforcement\",\n          val: avgLaw\n        });\n        data2.push({\n          name: \"Leisure, Sport & Tourism\",\n          val: avgLST\n        });\n        data2.push({\n          name: \"Marketing, Advertising & PR\",\n          val: avgMAPR\n        });\n        data2.push({\n          name: \"Media & Digital\",\n          val: avgMD\n        });\n        data2.push({\n          name: \"Nonprofits\",\n          val: avgNonP\n        });\n        data2.push({\n          name: \"Property or Construction\",\n          val: avgPC\n        });\n        data2.push({\n          name: \"Recruitment or HR\",\n          val: avgRHR\n        });\n        data2.push({\n          name: \"Retail\",\n          val: avgRetail\n        });\n        data2.push({\n          name: \"Sales\",\n          val: avgSales\n        });\n        data2.push({\n          name: \"Social Work\",\n          val: avgSW\n        });\n        data2.push({\n          name: \"Transport or Logistics\",\n          val: avgTL\n        });\n        data2.push({\n          name: \"Utilities & Telecommunications\",\n          val: avgUT\n        });\n        data2.push({\n          name: \"Publishing\",\n          val: avgPUB\n        });\n        data2.push({\n          name: \"Research\",\n          val: avgRES\n        });\n        data2.push({\n          name: \"Aerospace\",\n          val: avgAER\n        });\n        data2.push({\n          name: \"Library\",\n          val: avgLIB\n        });\n        data2.push({\n          name: \"Food\",\n          val: avgFOOD\n        });\n        data2.push({\n          name: \"Accounting, Banking & Finance\",\n          val: avgABF\n        });\n        data2.push({\n          name: \"Environment\",\n          val: avgENV\n        });\n        data2.push({\n          name: \"Auto Repair\",\n          val: avgAR\n        });\n        data2.push({\n          name: \"Other\",\n          val: avgO\n        });\n        data3.push({\n          name: \"High School\",\n          val: highSchool,\n          fill: \"#009900\"\n        });\n        data3.push({\n          name: \"Some College\",\n          val: someCollege,\n          fill: \"#CCCC00\"\n        });\n        data3.push({\n          name: \"College Degree\",\n          val: college,\n          fill: \"#FF0000\"\n        });\n        data3.push({\n          name: \"Master's Degree\",\n          val: masters,\n          fill: \"#3333FF\"\n        });\n        data3.push({\n          name: \"PhD\",\n          val: PhD,\n          fill: \"#00CCCC\"\n        });\n        data3.push({\n          name: \"Professional degree (MD, JD, etc.)\",\n          val: profD,\n          fill: \"#FF00FF\"\n        });\n        data4.push({\n          age: \"under 18\",\n          val: avg18\n        });\n        data4.push({\n          age: \"18-24\",\n          val: avg18t24\n        });\n        data4.push({\n          age: \"25-34\",\n          val: avg25t34\n        });\n        data4.push({\n          age: \"35-44\",\n          val: avg35t44\n        });\n        data4.push({\n          age: \"45-54\",\n          val: avg45t54\n        });\n        data4.push({\n          age: \"55-64\",\n          val: avg55t64\n        });\n        data4.push({\n          age: \"65 or over\",\n          val: avg65\n        });\n        setIsLoaded(true);\n      });\n    }, []);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.appBarSpacer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            lg: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Distribution of People in the Job Market\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 17\n              }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(RadarChart, {\n                  innerRadius: 100,\n                  outerRadius: 300,\n                  width: 1000,\n                  height: 670,\n                  data: data1,\n                  children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 599,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n                    dataKey: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {\n                    angle: 30,\n                    domain: [0, 150]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Radar, {\n                    name: \"People\",\n                    dataKey: \"val\",\n                    fill: colors[2],\n                    fillOpacity: 0.5,\n                    children: /*#__PURE__*/_jsxDEV(LabelList, {\n                      dataKey: \"val\",\n                      position: \"insideStart\",\n                      angle: 0\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 608,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            lg: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Average Annual Salary Across Industries\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 17\n              }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  width: 1500,\n                  height: 500,\n                  data: data2,\n                  margin: {\n                    top: 20,\n                    right: 10,\n                    left: 10,\n                    bottom: 20\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    label: {\n                      value: \"Salary ($k)\",\n                      angle: -90,\n                      position: \"insideLeft\"\n                    },\n                    domain: [0, 150]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"val\",\n                    fill: colors[1],\n                    children: /*#__PURE__*/_jsxDEV(LabelList, {\n                      dataKey: \"name\",\n                      angle: 90,\n                      position: \"center\",\n                      fontSize: 12\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 642,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 638,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 644,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Distribution of Degrees\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 17\n              }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(PieChart, {\n                  width: 300,\n                  height: 350,\n                  margin: {\n                    top: 5,\n                    right: 0,\n                    left: 0,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Pie, {\n                    data: data3,\n                    dataKey: \"val\",\n                    nameKey: \"name\",\n                    cx: \"50%\",\n                    cy: \"50%\",\n                    outerRadius: 100,\n                    label: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 665,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 673,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 674,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            lg: 8,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Change in Average Annual Salary over Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 17\n              }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(LineChart, {\n                  width: 700,\n                  height: 350,\n                  data: data4,\n                  margin: {\n                    top: 20,\n                    right: 20,\n                    left: 20,\n                    bottom: 20\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 696,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"age\",\n                    padding: {\n                      left: 10,\n                      right: 10\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Label, {\n                      value: \"Age\",\n                      offset: -15,\n                      position: \"insideBottom\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 698,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    label: {\n                      value: \"Salary $k\",\n                      angle: -90,\n                      position: \"insideLeft\"\n                    },\n                    domain: [0, 120]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"val\",\n                    fill: colors[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 703,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 576,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Graph, \"E9FXvoLVpNCvxFRTOszJmb2KKvI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryDataExplorer/frontend/src/Components/Graph.js"],"names":["React","useEffect","Container","Grid","Paper","useStyles","CircularProgress","csv","dataCSV","RadarChart","Radar","PolarGrid","PolarAngleAxis","PolarRadiusAxis","BarChart","Bar","PieChart","Pie","LineChart","Line","CartesianGrid","XAxis","YAxis","Label","Tooltip","Legend","LabelList","colors","data","name","val","fill","data1","data2","data3","data4","numABF","avgABF","salABF","numAF","avgAF","salAF","numAD","avgAD","salAD","numBC","avgBC","salBC","numCT","avgCT","salCT","numEDU","avgEDU","salEDU","numEM","avgEM","salEM","numEnt","avgEnt","salEnt","numGPA","avgGPA","salGPA","numHC","avgHC","salHC","numHE","avgHE","salHE","numIns","avgIns","salIns","numLaw","avgLaw","salLaw","numLST","avgLST","salLST","numMAPR","avgMAPR","salMAPR","numMD","avgMD","salMD","numNonP","avgNonP","salNonP","numPC","avgPC","salPC","numRHR","avgRHR","salRHR","numRetail","avgRetail","salRetail","numSales","avgSales","salSales","numSW","avgSW","salSW","numTL","avgTL","salTL","numUT","avgUT","salUT","numPUB","avgPUB","salPUB","numRES","avgRES","salRES","numAER","avgAER","salAER","numLIB","avgLIB","salLIB","numFOOD","avgFOOD","salFOOD","numENG","avgENG","salENG","numENV","avgENV","salENV","numAR","avgAR","salAR","numO","avgO","salO","sal18","sal18t24","sal25t34","sal35t44","sal45t54","sal55t64","sal65","avg18","avg18t24","avg25t34","avg35t44","avg45t54","avg55t64","avg65","highSchool","someCollege","college","masters","PhD","profD","Graph","isLoaded","setIsLoaded","useState","google","then","pop","i","length","Age","push","parseFloat","Annual_Salary","Industry","Highest_Level_of_Education","sumABF","console","log","toFixed","sumENG","sumAF","sumAD","sumBC","sumCT","sumEDU","sumEM","sumEnt","sumGPA","sumHC","sumHE","sumIns","sumLaw","sumLST","sumMAPR","sumMD","sumNonP","sumPC","sumRHR","sumRetail","sumSales","sumSW","sumTL","sumUT","sumPUB","sumRES","sumAER","sumLIB","sumFOOD","sumENV","sumAR","sumO","sum18","sum18t24","sum25t34","sum35t44","sum45t54","sum55t64","sum65","age","classes","root","content","appBarSpacer","container","paper","top","right","left","bottom","value","angle","position"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"./UseStyles.js\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { csv } from 'd3';\nimport dataCSV from './CleanedData2021.csv';\nimport {RadarChart, Radar, PolarGrid, PolarAngleAxis, PolarRadiusAxis, BarChart, Bar, PieChart, Pie,\nLineChart, Line, CartesianGrid, XAxis, YAxis, Label, Tooltip, Legend, LabelList} from \"recharts\";\n\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\nconst data = [\n  { name: \"Computing or Tech\", val: 5000, fill: colors[0] },\n  { name: \"Accounting, Banking & Finance\", val: 7000, fill: colors[1] },\n  { name: \"Education (Higher Education)\", val: 2000, fill: colors[2] },\n];\nvar data1 = [];\nvar data2 = [];\nvar data3 = [];\nvar data4 = [];\n\nvar numABF = 0; var avgABF = 0.0; var salABF = [];\nvar numAF = 0; var avgAF = 0.0; var salAF = [];\nvar numAD = 0; var avgAD = 0.0; var salAD = [];\nvar numBC = 0; var avgBC = 0.0; var salBC = [];\nvar numCT = 0; var avgCT = 0.0; var salCT = [];\nvar numEDU = 0; var avgEDU = 0.0; var salEDU = [];\nvar numEM = 0; var avgEM = 0.0; var salEM = [];\nvar numEnt = 0; var avgEnt = 0.0; var salEnt = [];\nvar numGPA = 0; var avgGPA = 0.0; var salGPA = [];\nvar numHC = 0; var avgHC = 0.0; var salHC = [];\nvar numHE = 0; var avgHE = 0.0; var salHE = [];\nvar numIns = 0; var avgIns = 0.0; var salIns = [];\nvar numLaw = 0; var avgLaw = 0.0; var salLaw = [];\nvar numLST = 0; var avgLST = 0.0; var salLST = [];\nvar numMAPR = 0; var avgMAPR = 0.0; var salMAPR = [];\nvar numMD = 0; var avgMD = 0.0; var salMD = [];\nvar numNonP = 0; var avgNonP = 0.0; var salNonP = [];\nvar numPC = 0; var avgPC = 0.0; var salPC = [];\nvar numRHR = 0; var avgRHR = 0.0; var salRHR = [];\nvar numRetail = 0; var avgRetail = 0.0; var salRetail = [];\nvar numSales = 0; var avgSales = 0.0; var salSales = [];\nvar numSW = 0; var avgSW = 0.0; var salSW = [];\nvar numTL = 0; var avgTL = 0.0; var salTL = [];\nvar numUT = 0; var avgUT = 0.0; var salUT = [];\nvar numPUB = 0; var avgPUB = 0.0; var salPUB = [];\nvar numRES = 0; var avgRES = 0.0; var salRES = [];\nvar numAER = 0; var avgAER = 0.0; var salAER = [];\nvar numLIB = 0; var avgLIB = 0.0; var salLIB = [];\nvar numFOOD = 0; var avgFOOD = 0.0; var salFOOD = [];\nvar numENG = 0; var avgENG = 0.0; var salENG = [];\nvar numENV = 0; var avgENV = 0.0; var salENV = [];\nvar numAR = 0; var avgAR = 0.0; var salAR = [];\nvar numO = 0; var avgO = 0.0; var salO = [];\n\nvar sal18 = []; var sal18t24 = []; var sal25t34 = []; var sal35t44 = []; \nvar sal45t54 = []; var sal55t64 = []; var sal65 = [];\nvar avg18 = 0.0; var avg18t24 = 0.0;  var avg25t34 = 0.0; var avg35t44 = 0.0; var avg45t54 = 0.0;\nvar avg55t64 = 0.0; var avg65 = 0.0;\nvar highSchool = 0; var someCollege = 0; var college = 0; var masters = 0; var PhD = 0; var profD = 0;\n\nexport default function Graph() {\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  (async function google() {\n    useEffect(() => {\n      csv(dataCSV).then(data => {\n        data.pop(0);\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].Age === 'under 18') {\n            sal18.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Age === '18-24') {\n            sal18t24.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Age === '25-34') {\n            sal25t34.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Age === '35-44') {\n            sal35t44.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Age === '45-54') {\n            sal45t54.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Age === '55-64') {\n            sal55t64.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Age === '65 or over') {\n            sal65.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Accounting, Banking & Finance') {\n            numABF++;\n            salABF.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Agriculture or Forestry') {\n            numAF++;\n            salAF.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Art & Design') {\n            numAD++;\n            salAD.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Business or Consulting') {\n            numBC++;\n            salBC.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Computing or Tech') {\n            numCT++;\n            salCT.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Education') {\n            numEDU++;\n            salEDU.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Engineering or Manufacturing') {\n            numEM++;\n            salEM.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Entertainment') {\n            numEnt++;\n            salEnt.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Government and Public Administration') {\n            numGPA++;\n            salGPA.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Health care') {\n            numHC++;\n            salHC.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Hospitality & Events') {\n            numHE++;\n            salHE.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Insurance') {\n            numIns++;\n            salIns.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Law or Law Enforcement') {\n            numLaw++;\n            salLaw.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Leisure, Sport & Tourism') {\n            numLST++;\n            salLST.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Marketing, Advertising & PR') {\n            numMAPR++;\n            salMAPR.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Media & Digital') {\n            numMD++;\n            salMD.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Nonprofits') {\n            numNonP++;\n            salNonP.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Property or Construction') {\n            numPC++;\n            salPC.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Recruitment or HR') {\n            numRHR++;\n            salRHR.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Retail') {\n            numRetail++;\n            salRetail.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Sales') {\n            numSales++;\n            salSales.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Social Work') {\n            numSW++;\n            salSW.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Transport or Logistics') {\n            numTL++;\n            salTL.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Utilities & Telecommunications') {\n            numUT++;\n            salUT.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Publishing') {\n            numPUB++;\n            salPUB.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Research') {\n            numRES++;\n            salRES.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Aerospace') {\n            numAER++;\n            salAER.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Library') {\n            numLIB++;\n            salLIB.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Food') {\n            numFOOD++;\n            salFOOD.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Energy') {\n            numENG++;\n            salENG.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Environment') {\n            numENV++;\n            salENV.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Auto Repair') {\n            numAR++;\n            salAR.push(parseFloat(data[i].Annual_Salary));\n          }\n          if (data[i].Industry === 'Other') {\n            numO++;\n            salO.push(parseFloat(data[i].Annual_Salary));\n          }\n\n          if (data[i].Highest_Level_of_Education === 'High School') {\n            highSchool++;\n          }\n          if (data[i].Highest_Level_of_Education === 'Some college') {\n            someCollege++;\n          }\n          if (data[i].Highest_Level_of_Education === 'College degree') {\n            college++;\n          }\n          if (data[i].Highest_Level_of_Education === \"Master's degree\") {\n            masters++;\n          }\n          if (data[i].Highest_Level_of_Education === 'PhD') {\n            PhD++;\n          }\n          if (data[i].Highest_Level_of_Education === 'Professional degree (MD, JD, etc.)') {\n            profD++;\n          }\n        }\n\n        var sumABF = 0.0;\n        for (let i = 0; i < numABF; i++) {\n          sumABF += salABF[i];\n        }\n        console.log(sumABF);\n        avgABF = sumABF / numABF / 1000;\n        avgABF = avgABF.toFixed(2);\n        var sumENG = 0.0;\n        for (let i = 0; i < numENG; i++) {\n          sumENG += salENG[i];\n        }\n        avgENG = sumENG / numENG / 1000;\n        avgENG = avgENG.toFixed(2);\n        var sumAF = 0.0;\n        for (let i = 0; i < numAF; i++) {\n          sumAF += salAF[i];\n        }\n        avgAF = sumAF / numAF / 1000;\n        avgAF = avgAF.toFixed(2);\n        var sumAD = 0.0;\n        for (let i = 0; i < numAD; i++) {\n          sumAD += salAD[i];\n        }\n        avgAD = sumAD / numAD / 1000;\n        avgAD = avgAD.toFixed(2);\n        var sumBC = 0.0;\n        for (let i = 0; i < numBC; i++) {\n          sumBC += salBC[i];\n        }\n        avgBC = sumBC / numBC / 1000;\n        avgBC = avgBC.toFixed(2);\n        var sumCT = 0.0;\n        for (let i = 0; i < numCT; i++) {\n          sumCT += salCT[i];\n        }\n        avgCT = sumCT / numCT / 1000;\n        avgCT = avgCT.toFixed(2);\n        var sumEDU = 0.0;\n        for (let i = 0; i < numEDU; i++) {\n          sumEDU += salEDU[i];\n        }\n        avgEDU = sumEDU / numEDU / 1000;\n        avgEDU = avgEDU.toFixed(2);\n        var sumEM = 0.0;\n        for (let i = 0; i < numEM; i++) {\n          sumEM += salEM[i];\n        }\n        avgEM = sumEM / numEM / 1000;\n        avgEM = avgEM.toFixed(2);\n        var sumEnt = 0.0;\n        for (let i = 0; i < numEnt; i++) {\n          sumEnt += salEnt[i];\n        }\n        avgEnt = sumEnt / numEnt / 1000;\n        avgEnt = avgEnt.toFixed(2);\n        var sumGPA = 0.0;\n        for (let i = 0; i < numGPA; i++) {\n          sumGPA += salGPA[i];\n        }\n        avgGPA = sumGPA / numGPA / 1000;\n        avgGPA = avgGPA.toFixed(2);\n        var sumHC = 0.0;\n        for (let i = 0; i < numHC; i++) {\n          sumHC += salHC[i];\n        }\n        avgHC = sumHC / numHC / 1000;\n        avgHC = avgHC.toFixed(2);\n        var sumHE = 0.0;\n        for (let i = 0; i < numHE; i++) {\n          sumHE += salHE[i];\n        }\n        avgHE = sumHE / numHE / 1000;\n        avgHE = avgHE.toFixed(2);\n        var sumIns = 0.0;\n        for (let i = 0; i < numIns; i++) {\n          sumIns += salIns[i];\n        }\n        avgIns = sumIns / numIns / 1000;\n        avgIns = avgIns.toFixed(2);\n        var sumLaw = 0.0;\n        for (let i = 0; i < numLaw; i++) {\n          sumLaw += salLaw[i];\n        }\n        avgLaw = sumLaw / numLaw / 1000;\n        avgLaw = avgLaw.toFixed(2);\n        var sumLST = 0.0;\n        for (let i = 0; i < numLST; i++) {\n          sumLST += salLST[i];\n        }\n        avgLST = sumLST / numLST / 1000;\n        avgLST = avgLST.toFixed(2);\n        var sumMAPR = 0.0;\n        for (let i = 0; i < numMAPR; i++) {\n          sumMAPR += salMAPR[i];\n        }\n        avgMAPR = sumMAPR / numMAPR / 1000;\n        avgMAPR = avgMAPR.toFixed(2);\n        var sumMD = 0.0;\n        for (let i = 0; i < numMD; i++) {\n          sumMD += salMD[i];\n        }\n        avgMD = sumMD / numMD / 1000;\n        avgMD = avgMD.toFixed(2);\n        var sumNonP = 0.0;\n        for (let i = 0; i < numNonP; i++) {\n          sumNonP += salNonP[i];\n        }\n        avgNonP = sumNonP / numNonP / 1000;\n        avgNonP = avgNonP.toFixed(2);\n        var sumPC = 0.0;\n        for (let i = 0; i < numPC; i++) {\n          sumPC += salPC[i];\n        }\n        avgPC = sumPC / numPC / 1000;\n        avgPC = avgPC.toFixed(2);\n        var sumRHR = 0.0;\n        for (let i = 0; i < numRHR; i++) {\n          sumRHR += salRHR[i];\n        }\n        avgRHR = sumRHR / numRHR / 1000;\n        avgRHR = avgRHR.toFixed(2);\n        var sumRetail = 0.0;\n        for (let i = 0; i < numRetail; i++) {\n          sumRetail += salRetail[i];\n        }\n        avgRetail = sumRetail / numRetail / 1000;\n        avgRetail = avgRetail.toFixed(2);\n        var sumSales = 0.0;\n        for (let i = 0; i < numSales; i++) {\n          sumSales += salSales[i];\n        }\n        avgSales = sumSales / numSales / 1000;\n        avgSales = avgSales.toFixed(2);\n        var sumSW = 0.0;\n        for (let i = 0; i < numSW; i++) {\n          sumSW += salSW[i];\n        }\n        avgSW = sumSW / numSW / 1000;\n        avgSW = avgSW.toFixed(2);\n        var sumTL = 0.0;\n        for (let i = 0; i < numTL; i++) {\n          sumTL += salTL[i];\n        }\n        avgTL = sumTL / numTL / 1000;\n        avgTL = avgTL.toFixed(2);\n        var sumUT = 0.0;\n        for (let i = 0; i < numUT; i++) {\n          sumUT += salUT[i];\n        }\n        avgUT = sumUT / numUT / 1000;\n        avgUT = avgUT.toFixed(2);\n        var sumPUB = 0.0;\n        for (let i = 0; i < numPUB; i++) {\n          sumPUB += salPUB[i];\n        }\n        avgPUB = sumPUB / numPUB / 1000;\n        avgPUB = avgPUB.toFixed(2);\n        var sumRES = 0.0;\n        for (let i = 0; i < numRES; i++) {\n          sumRES += salRES[i];\n        }\n        avgRES = sumRES / numRES / 1000;\n        avgRES = avgRES.toFixed(2);\n        var sumAER = 0.0;\n        for (let i = 0; i < numAER; i++) {\n          sumAER += salAER[i];\n        }\n        avgAER = sumAER / numAER / 1000;\n        avgAER = avgAER.toFixed(2);\n        var sumLIB = 0.0;\n        for (let i = 0; i < numLIB; i++) {\n          sumLIB += salLIB[i];\n        }\n        avgLIB = sumLIB / numLIB / 1000;\n        avgLIB = avgLIB.toFixed(2);\n        var sumFOOD = 0.0;\n        for (let i = 0; i < numFOOD; i++) {\n          sumFOOD += salFOOD[i];\n        }\n        avgFOOD = sumFOOD / numFOOD / 1000;\n        avgFOOD = avgFOOD.toFixed(2);\n        var sumENV = 0.0;\n        for (let i = 0; i < numENV; i++) {\n          sumENV += salENV[i];\n        }\n        avgENV = sumENV / numENV / 1000;\n        avgENV = avgENV.toFixed(2);\n        var sumAR = 0.0;\n        for (let i = 0; i < numAR; i++) {\n          sumAR += salAR[i];\n        }\n        avgAR = sumAR / numAR / 1000;\n        avgAR = avgAR.toFixed(2);\n        var sumO = 0.0;\n        for (let i = 0; i < numO; i++) {\n          sumO += salO[i];\n        }\n        avgO = sumO / numO / 1000;\n        avgO = avgO.toFixed(2);\n\n        var sum18 = 0.0;\n        for (let i = 0; i < sal18.length; i++) {\n          sum18 += sal18[i];\n        }\n        avg18 = sum18 / sal18.length / 1000;\n        avg18 = avg18.toFixed(2);\n        var sum18t24 = 0.0;\n        for (let i = 0; i < sal18t24.length; i++) {\n          sum18t24 += sal18t24[i];\n        }\n        avg18t24 = sum18t24 / sal18t24.length / 1000;\n        avg18t24 = avg18t24.toFixed(2);\n        var sum25t34 = 0.0;\n        for (let i = 0; i < sal25t34.length; i++) {\n          sum25t34 += sal25t34[i];\n        }\n        avg25t34 = sum25t34 / sal25t34.length / 1000;\n        avg25t34 = avg25t34.toFixed(2);\n        var sum35t44 = 0.0;\n        for (let i = 0; i < sal35t44.length; i++) {\n          sum35t44 += sal35t44[i];\n        }\n        avg35t44 = sum35t44 / sal35t44.length / 1000;\n        avg35t44 = avg35t44.toFixed(2);\n        var sum45t54 = 0.0;\n        for (let i = 0; i < sal45t54.length; i++) {\n          sum45t54 += sal45t54[i];\n        }\n        avg45t54 = sum45t54 / sal45t54.length / 1000;\n        avg45t54 = avg45t54.toFixed(2);\n        var sum55t64 = 0.0;\n        for (let i = 0; i < sal55t64.length; i++) {\n          sum55t64 += sal55t64[i];\n        }\n        avg55t64 = sum55t64 / sal55t64.length / 1000;\n        avg55t64 = avg55t64.toFixed(2);\n        var sum65 = 0.0;\n        for (let i = 0; i < sal65.length; i++) {\n          sum65 += sal65[i];\n        }\n        avg65 = sum65 / sal65.length / 1000;\n        avg65 = avg65.toFixed(2);\n\n        data1.push({ name: \"Energy\", val: numENG});\n        data1.push({ name: \"Agriculture or Forestry\", val: numAF });\n        data1.push({ name: \"Art & Design\", val: numAD });\n        data1.push({ name: \"Business or Consulting\", val: numBC });\n        data1.push({ name: \"Computing or Tech\", val: numCT });\n        data1.push({ name: \"Education\", val: numEDU });\n        data1.push({ name: \"Engineering or Manufacturing\", val: numEM });\n        data1.push({ name: \"Entertainment\", val: numEnt });\n        data1.push({ name: \"Government and Public Admin\", val: numGPA });\n        data1.push({ name: \"Health Care\", val: numHC });\n        data1.push({ name: \"Hospitality & Events\", val: numHE });\n        data1.push({ name: \"Insurance\", val: numIns });\n        data1.push({ name: \"Law or Law Enforcement\", val: numLaw });\n        data1.push({ name: \"Leisure, Sport & Tourism\", val: numLST });\n        data1.push({ name: \"Marketing, Advertising & PR\", val: numMAPR });\n        data1.push({ name: \"Media & Digital\", val: numMD });\n        data1.push({ name: \"Nonprofits\", val: numNonP });\n        data1.push({ name: \"Property or Construction\", val: numPC });\n        data1.push({ name: \"Recruitment or HR\", val: numRHR });\n        data1.push({ name: \"Retail\", val: numRetail });\n        data1.push({ name: \"Sales\", val: numSales });\n        data1.push({ name: \"Social Work\", val: numSW });\n        data1.push({ name: \"Transport or Logistics\", val: numTL });\n        data1.push({ name: \"Utilities & Telecommunications\", val: numUT });\n        data1.push({ name: \"Publishing\", val: numPUB});\n        data1.push({ name: \"Research\", val: numRES});\n        data1.push({ name: \"Aerospace\", val: numAER});\n        data1.push({ name: \"Library\", val: numLIB});\n        data1.push({ name: \"Food\", val: numFOOD});\n        data1.push({ name: \"Accounting, Banking & Finance\", val: numABF });\n        data1.push({ name: \"Environment\", val: numENV});\n        data1.push({ name: \"Auto Repair\", val: numAR});\n        data1.push({ name: \"Other\", val: numO});\n\n        data2.push({ name: \"Energy\", val: avgENG});\n        data2.push({ name: \"Agriculture or Forestry\", val: avgAF});\n        data2.push({ name: \"Art & Design\", val: avgAD });\n        data2.push({ name: \"Business or Consulting\", val: avgBC  });\n        data2.push({ name: \"Computing or Tech\", val: avgCT  });\n        data2.push({ name: \"Education\", val: avgEDU  });\n        data2.push({ name: \"Engineering or Manufacturing\", val: avgEM  });\n        data2.push({ name: \"Entertainment\", val: avgEnt  });\n        data2.push({ name: \"Government and Public Admin\", val: avgGPA  });\n        data2.push({ name: \"Health Care\", val: avgHC });\n        data2.push({ name: \"Hospitality & Events\", val: avgHE  });\n        data2.push({ name: \"Insurance\", val: avgIns});\n        data2.push({ name: \"Law or Law Enforcement\", val: avgLaw  });\n        data2.push({ name: \"Leisure, Sport & Tourism\", val: avgLST  });\n        data2.push({ name: \"Marketing, Advertising & PR\", val: avgMAPR });\n        data2.push({ name: \"Media & Digital\", val: avgMD  });\n        data2.push({ name: \"Nonprofits\", val: avgNonP  });\n        data2.push({ name: \"Property or Construction\", val: avgPC  });\n        data2.push({ name: \"Recruitment or HR\", val: avgRHR  });\n        data2.push({ name: \"Retail\", val: avgRetail });\n        data2.push({ name: \"Sales\", val: avgSales });\n        data2.push({ name: \"Social Work\", val: avgSW });\n        data2.push({ name: \"Transport or Logistics\", val: avgTL  });\n        data2.push({ name: \"Utilities & Telecommunications\", val: avgUT });\n        data2.push({ name: \"Publishing\", val: avgPUB });\n        data2.push({ name: \"Research\", val: avgRES });\n        data2.push({ name: \"Aerospace\", val: avgAER});\n        data2.push({ name: \"Library\", val: avgLIB});\n        data2.push({ name: \"Food\", val: avgFOOD });\n        data2.push({ name: \"Accounting, Banking & Finance\", val: avgABF  });\n        data2.push({ name: \"Environment\", val: avgENV});\n        data2.push({ name: \"Auto Repair\", val: avgAR });\n        data2.push({ name: \"Other\", val: avgO });\n\n        data3.push({ name: \"High School\", val: highSchool, fill: \"#009900\" });\n        data3.push({ name: \"Some College\", val: someCollege, fill: \"#CCCC00\" });\n        data3.push({ name: \"College Degree\", val: college, fill: \"#FF0000\" });\n        data3.push({ name: \"Master's Degree\", val: masters, fill: \"#3333FF\" });\n        data3.push({ name: \"PhD\", val: PhD, fill: \"#00CCCC\" });\n        data3.push({ name: \"Professional degree (MD, JD, etc.)\", val: profD, fill: \"#FF00FF\" });\n        \n        data4.push({ age: \"under 18\", val: avg18});\n        data4.push({ age: \"18-24\", val: avg18t24});\n        data4.push({ age: \"25-34\", val: avg25t34});\n        data4.push({ age: \"35-44\", val: avg35t44});\n        data4.push({ age: \"45-54\", val: avg45t54});\n        data4.push({ age: \"55-64\", val: avg55t64});\n        data4.push({ age: \"65 or over\", val: avg65});\n        setIsLoaded(true);\n      });\n    }, []);\n  })();\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n\n\n            <Grid item xs={12} md={8} lg={12}>\n              <Paper className={classes.paper}>\n                <center>\n                  <h4>Distribution of People in the Job Market</h4>\n                </center>\n                {!isLoaded ? (\n                  <CircularProgress />\n                ) : (\n                  <center>\n                    <RadarChart\n                      innerRadius={100}\n                      outerRadius={300}\n                      width={1000}\n                      height={670}\n                      data={data1}\n                    >\n                      <PolarGrid />\n                      <PolarAngleAxis dataKey=\"name\" />\n                      <PolarRadiusAxis angle={30} domain={[0, 150]} />\n                      <Radar\n                        name=\"People\"\n                        dataKey=\"val\"\n                        fill={colors[2]}\n                        fillOpacity={0.5}\n                      >\n                        <LabelList dataKey = \"val\" position = \"insideStart\" angle = {0} />\n                      </Radar>\n                      <Legend />\n                      <Tooltip />\n                    </RadarChart>\n                  </center>\n                )}\n              </Paper>\n            </Grid>\n\n\n            <Grid item xs = {12} md = {8} lg = {12}>\n              <Paper className = {classes.paper}>\n                <center><h4>Average Annual Salary Across Industries</h4></center>\n                {!isLoaded ? (\n                  <CircularProgress />\n                ) : (\n                  <center>\n                    <BarChart \n                      width = {1500} \n                      height = {500} \n                      data = {data2} \n                      margin={{ top: 20, right: 10, left: 10, bottom: 20 }}\n                    >\n                    <CartesianGrid strokeDasharray = \"3 3\" />\n                    <XAxis dataKey = \"name\"/>\n                    <YAxis \n                      label = {{value: \"Salary ($k)\", angle: -90, position: \"insideLeft\"}}\n                      domain = {[0, 150]}\n                    />\n                    <Bar \n                      dataKey = \"val\" \n                      fill = {colors[1]}  \n                    >\n                      <LabelList dataKey = \"name\" angle = {90} position = \"center\" fontSize = {12}/>\n                    </Bar>\n                    <Tooltip />\n                    </BarChart>\n                  </center>\n                )\n                }\n              </Paper>\n            </Grid>\n\n\n            <Grid item xs = {12} md = {8} lg = {4}>\n              <Paper className={classes.paper}>\n                <center><h4>Distribution of Degrees</h4></center>\n                {!isLoaded ? (\n                  <CircularProgress />\n                ) : (\n                  <center>\n                    <PieChart \n                      width={300} \n                      height={350} \n                      margin = {{ top: 5, right: 0, left: 0, bottom: 5}}\n                    >\n                    <Pie \n                      data = {data3} \n                      dataKey = \"val\" \n                      nameKey = \"name\" \n                      cx = \"50%\" \n                      cy = \"50%\" \n                      outerRadius = {100} \n                      label />\n                    <Legend />\n                    <Tooltip />\n                    </PieChart>\n                  </center>\n                )\n                }\n              </Paper>\n            </Grid>\n\n\n            <Grid item xs = {12} md = {8} lg = {8}>\n              <Paper className = {classes.paper}>\n                <center><h4>Change in Average Annual Salary over Time</h4></center>\n                {!isLoaded ? (\n                  <CircularProgress />\n                ) : (\n                  <center>\n                    <LineChart \n                      width={700} \n                      height={350} \n                      data={data4}\n                      margin={{ top: 20, right: 20, left: 20, bottom: 20 }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"age\" padding={{ left: 10, right: 10 }}>\n                        <Label value = \"Age\" offset={-15} position=\"insideBottom\" />\n                      </XAxis>\n                      <Tooltip />\n                      <YAxis label = {{value: \"Salary $k\", angle: -90, position: \"insideLeft\"}} \n                      domain = {[0, 120]}/>\n                      <Line type=\"monotone\" dataKey=\"val\" fill = {colors[0]} />\n                    </LineChart>\n                  </center>\n                )}\n              </Paper>\n            </Grid>\n\n\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}