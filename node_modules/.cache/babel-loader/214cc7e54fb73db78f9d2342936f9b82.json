{"ast":null,"code":"var _jsxFileName = \"/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/SecondDatasetTable.js\",\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SheetsAPIInfo from \"../SheetsAPIInfo.json\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"Age\",\n  headerName: \"Age\",\n  width: 130\n}, {\n  field: \"Industry\",\n  headerName: \"Industry\",\n  width: 130\n}, {\n  field: \"Job Title\",\n  headerName: \"Job Title\",\n  width: 130\n}, {\n  field: \"Annual Salary\",\n  headerName: \"Annual Salary\",\n  width: 130\n}, {\n  field: \"Currency\",\n  headerName: \"Currency\",\n  width: 130\n}, {\n  field: \"Work Experience\",\n  headerName: \"Work Experience\",\n  width: 130\n}, {\n  field: \"Context for Job\",\n  headerName: \"Context for Job\",\n  width: 130\n}, {\n  field: \"Other\",\n  headerName: \"Other\",\n  width: 130\n}, {\n  field: \"Other Compensation\",\n  headerName: \"Other Compensation\",\n  width: 130\n}, {\n  field: \"Context\",\n  headerName: \"Context\",\n  width: 130\n}, {\n  field: \"Country\",\n  headerName: \"Country\",\n  width: 130\n}, {\n  field: \"State\",\n  headerName: \"State\",\n  width: 130\n}, {\n  field: \"City\",\n  headerName: \"City\",\n  width: 130\n}, {\n  field: \"Highest Level of Education\",\n  headerName: \"Highest Level of Education\",\n  width: 130\n}, {\n  field: \"Gender\",\n  headerName: \"Gender\",\n  width: 130\n}, {\n  field: \"Race\",\n  headerName: \"Race\",\n  width: 130\n}];\nconst spreadSheet = new GoogleSpreadsheet(\"1xL-FWa7vdAH32MtPPVX688IMmG2y2rE34A_VW7SoZnI\");\nexport default function TestTable() {\n  _s2();\n\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const [rows, setRows] = React.useState([]);\n  React.useEffect(() => {\n    var _s = $RefreshSig$();\n\n    _s(async function () {\n      _s();\n\n      try {\n        await spreadSheet.useServiceAccountAuth({\n          client_email: SheetsAPIInfo.client_email,\n          private_key: SheetsAPIInfo.private_key\n        });\n        await spreadSheet.loadInfo();\n        const sheet = spreadSheet.sheetsByIndex[0];\n        let tempRows = await sheet.getRows();\n        setRows(tempRows);\n        setIsLoaded(true);\n      } catch (e) {\n        console.error(\"Error: \", e);\n      }\n    }, \"XzZzjmf42T4ghIIVsLcPZIIQRXQ=\", false, function () {\n      return [spreadSheet.useServiceAccountAuth];\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 600,\n      width: \"100%\"\n    },\n    children: isLoaded ? /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      getRowId: rows => rows.rowNumber,\n      autoHeight: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TestTable, \"l9CX8FfLInqfYph98+e9Ibjgz0Q=\");\n\n_c = TestTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestTable\");","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/SecondDatasetTable.js"],"names":["React","DataGrid","CircularProgress","SheetsAPIInfo","GoogleSpreadsheet","columns","field","headerName","width","spreadSheet","TestTable","isLoaded","setIsLoaded","useState","rows","setRows","useEffect","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","tempRows","getRows","e","console","error","height","rowNumber"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SheetsAPIInfo from \"../SheetsAPIInfo.json\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\n\nconst columns = [\n  { field: \"Age\", headerName: \"Age\", width: 130 },\n  { field: \"Industry\", headerName: \"Industry\", width: 130 },\n  { field: \"Job Title\", headerName: \"Job Title\", width: 130 },\n  { field: \"Annual Salary\", headerName: \"Annual Salary\", width: 130 },\n  { field: \"Currency\", headerName: \"Currency\", width: 130 },\n  { field: \"Work Experience\", headerName: \"Work Experience\", width: 130 },\n  { field: \"Context for Job\", headerName: \"Context for Job\", width: 130 },\n  { field: \"Other\", headerName: \"Other\", width: 130 },\n  { field: \"Other Compensation\", headerName: \"Other Compensation\", width: 130 },\n  { field: \"Context\", headerName: \"Context\", width: 130 },\n  { field: \"Country\", headerName: \"Country\", width: 130 },\n  { field: \"State\", headerName: \"State\", width: 130 },\n  { field: \"City\", headerName: \"City\", width: 130 },\n  {\n    field: \"Highest Level of Education\",\n    headerName: \"Highest Level of Education\",\n    width: 130,\n  },\n  { field: \"Gender\", headerName: \"Gender\", width: 130 },\n  { field: \"Race\", headerName: \"Race\", width: 130 },\n];\n\nconst spreadSheet = new GoogleSpreadsheet(\n  \"1xL-FWa7vdAH32MtPPVX688IMmG2y2rE34A_VW7SoZnI\"\n);\n\nexport default function TestTable() {\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const [rows, setRows] = React.useState([]);\n\n  React.useEffect(() => {\n    (async function () {\n      try {\n        await spreadSheet.useServiceAccountAuth({\n          client_email: SheetsAPIInfo.client_email,\n          private_key: SheetsAPIInfo.private_key,\n        });\n\n        await spreadSheet.loadInfo();\n        const sheet = spreadSheet.sheetsByIndex[0];\n        let tempRows = await sheet.getRows();\n        setRows(tempRows);\n        setIsLoaded(true);\n      } catch (e) {\n        console.error(\"Error: \", e);\n      }\n    })();\n  }, []);\n\n  return (\n    <div style={{ height: 600, width: \"100%\" }}>\n      {isLoaded ? (\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          getRowId={(rows) => rows.rowNumber}\n          autoHeight={true}\n        />\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}