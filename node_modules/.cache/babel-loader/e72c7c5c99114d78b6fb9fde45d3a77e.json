{"ast":null,"code":"var _jsxFileName = \"/home/ethan/Documents/DevHub/SalaryTemplate/src/Components/TestTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SheetsAPIInfo from \"../SheetsAPIInfo.json\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"Col1\",\n  headerName: \"Column 1\",\n  width: 130\n}, {\n  field: \"Col2\",\n  headerName: \"Column 2\",\n  width: 130\n}];\nlet rows = [];\nconst spreadSheet = new GoogleSpreadsheet(\"1lGGq2KIfWu27Wr3sLWeDpNoEfCN8OR4FXTjI09k-uNY\");\nlet isLoaded = false;\n\n_s(async function () {\n  _s();\n\n  try {\n    await spreadSheet.useServiceAccountAuth({\n      client_email: SheetsAPIInfo.client_email,\n      private_key: SheetsAPIInfo.private_key\n    });\n    await spreadSheet.loadInfo();\n    const sheet = spreadSheet.sheetsByIndex[0];\n    rows = await sheet.getRows();\n    isLoaded = true;\n  } catch (e) {\n    console.error(\"Error: \", e);\n  }\n}, \"XzZzjmf42T4ghIIVsLcPZIIQRXQ=\", false, function () {\n  return [spreadSheet.useServiceAccountAuth];\n})();\n\nexport default function TestTable() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: \"100%\"\n    },\n    children: isLoaded ? /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      getRowId: rows => rows.Col1,\n      autoHeight: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = TestTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestTable\");","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryTemplate/src/Components/TestTable.js"],"names":["React","DataGrid","CircularProgress","SheetsAPIInfo","GoogleSpreadsheet","columns","field","headerName","width","rows","spreadSheet","isLoaded","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","getRows","e","console","error","TestTable","height","Col1"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE,UAA7B;AAAyCC,EAAAA,KAAK,EAAE;AAAhD,CADc,EAEd;AAAEF,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE,UAA7B;AAAyCC,EAAAA,KAAK,EAAE;AAAhD,CAFc,CAAhB;AAKA,IAAIC,IAAI,GAAG,EAAX;AAEA,MAAMC,WAAW,GAAG,IAAIN,iBAAJ,CAClB,8CADkB,CAApB;AAIA,IAAIO,QAAQ,GAAG,KAAf;;AAEA,GAAC,kBAAkB;AAAA;;AACjB,MAAI;AACF,UAAMD,WAAW,CAACE,qBAAZ,CAAkC;AACtCC,MAAAA,YAAY,EAAEV,aAAa,CAACU,YADU;AAEtCC,MAAAA,WAAW,EAAEX,aAAa,CAACW;AAFW,KAAlC,CAAN;AAKA,UAAMJ,WAAW,CAACK,QAAZ,EAAN;AACA,UAAMC,KAAK,GAAGN,WAAW,CAACO,aAAZ,CAA0B,CAA1B,CAAd;AACAR,IAAAA,IAAI,GAAG,MAAMO,KAAK,CAACE,OAAN,EAAb;AACAP,IAAAA,QAAQ,GAAG,IAAX;AACD,GAVD,CAUE,OAAOQ,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAc,SAAd,EAAyBF,CAAzB;AACD;AACF,CAdD;AAAA,UAEUT,WAAW,CAACE,qBAFtB;AAAA;;AAgBA,eAAe,SAASU,SAAT,GAAqB;AAClC,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAef,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,cACGG,QAAQ,gBACP,QAAC,QAAD;AACE,MAAA,IAAI,EAAEF,IADR;AAEE,MAAA,OAAO,EAAEJ,OAFX;AAGE,MAAA,QAAQ,EAAGI,IAAD,IAAUA,IAAI,CAACe,IAH3B;AAIE,MAAA,UAAU,EAAE;AAJd;AAAA;AAAA;AAAA;AAAA,YADO,gBAQP,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;KAfuBF,S","sourcesContent":["import * as React from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SheetsAPIInfo from \"../SheetsAPIInfo.json\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\n\nconst columns = [\n  { field: \"Col1\", headerName: \"Column 1\", width: 130 },\n  { field: \"Col2\", headerName: \"Column 2\", width: 130 },\n];\n\nlet rows = [];\n\nconst spreadSheet = new GoogleSpreadsheet(\n  \"1lGGq2KIfWu27Wr3sLWeDpNoEfCN8OR4FXTjI09k-uNY\"\n);\n\nlet isLoaded = false;\n\n(async function () {\n  try {\n    await spreadSheet.useServiceAccountAuth({\n      client_email: SheetsAPIInfo.client_email,\n      private_key: SheetsAPIInfo.private_key,\n    });\n\n    await spreadSheet.loadInfo();\n    const sheet = spreadSheet.sheetsByIndex[0];\n    rows = await sheet.getRows();\n    isLoaded = true;\n  } catch (e) {\n    console.error(\"Error: \", e);\n  }\n})();\n\nexport default function TestTable() {\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      {isLoaded ? (\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          getRowId={(rows) => rows.Col1}\n          autoHeight={true}\n        />\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}