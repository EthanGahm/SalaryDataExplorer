{"ast":null,"code":"var _jsxFileName = \"/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/Graph.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport SheetsAPIInfo from \"../SheetsAPIInfo.json\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"./UseStyles.js\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { RadarChart, Radar, PolarGrid, PolarAngleAxis, PolarRadiusAxis, BarChart, Bar, PieChart, Pie, LineChart, Line, CartesianGrid, XAxis, YAxis, Label, Tooltip, Legend, LabelList } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\nconst data = [{\n  name: \"Computing or Tech\",\n  val: 5000,\n  fill: colors[0]\n}, {\n  name: \"Accounting, Banking & Finance\",\n  val: 7000,\n  fill: colors[1]\n}, {\n  name: \"Education (Higher Education)\",\n  val: 2000,\n  fill: colors[2]\n}];\nlet data1 = [];\nlet data2 = [];\nlet data3 = [];\nlet rows = [];\nlet numABF = 0;\nlet avgABF = 0.0;\nvar salABF = [];\nvar numAF = 0;\nvar avgAF = 0.0;\nvar salAF = [];\nvar numAD = 0;\nvar avgAD = 0.0;\nvar salAD = [];\nvar numBC = 0;\nvar avgBC = 0.0;\nvar salBC = [];\nvar numCT = 0;\nvar avgCT = 0.0;\nvar salCT = [];\nvar numEPS = 0;\nvar avgEPS = 0.0;\nvar salEPS = [];\nvar numEH = 0;\nvar avgEH = 0.0;\nvar salEH = [];\nvar numEM = 0;\nvar avgEM = 0.0;\nvar salEM = [];\nvar numEnt = 0;\nvar avgEnt = 0.0;\nvar salEnt = [];\nvar numGPA = 0;\nvar avgGPA = 0.0;\nvar salGPA = [];\nvar numHC = 0;\nvar avgHC = 0.0;\nvar salHC = [];\nvar numHE = 0;\nvar avgHE = 0.0;\nvar salHE = [];\nvar numIns = 0;\nvar avgIns = 0.0;\nvar salIns = [];\nvar numLaw = 0;\nvar avgLaw = 0.0;\nvar salLaw = [];\nvar numLS = 0;\nvar avgLS = 0.0;\nvar salLS = [];\nvar numLST = 0;\nvar avgLST = 0.0;\nvar salLST = [];\nvar numMAPR = 0;\nvar avgMAPR = 0.0;\nvar salMAPR = [];\nvar numMD = 0;\nvar avgMD = 0.0;\nvar salMD = [];\nvar numNonP = 0;\nvar avgNonP = 0.0;\nvar salNonP = [];\nvar numPC = 0;\nvar avgPC = 0.0;\nvar salPC = [];\nvar numRHR = 0;\nvar avgRHR = 0.0;\nvar salRHR = [];\nvar numRetail = 0;\nvar avgRetail = 0.0;\nvar salRetail = [];\nvar numSales = 0;\nvar avgSales = 0.0;\nvar salSales = [];\nvar numSW = 0;\nvar avgSW = 0.0;\nvar salSW = [];\nvar numTL = 0;\nvar avgTL = 0.0;\nvar salTL = [];\nvar numUT = 0;\nvar avgUT = 0.0;\nvar salUT = [];\nvar highSchool = 0;\nvar someCollege = 0;\nvar college = 0;\nvar masters = 0;\nvar PhD = 0;\nvar profD = 0;\nconst spreadSheet = new GoogleSpreadsheet(\"1xL-FWa7vdAH32MtPPVX688IMmG2y2rE34A_VW7SoZnI\");\nexport default function Graph() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [isLoaded, setIsLoaded] = React.useState(false);\n\n  _s(async function google() {\n    _s();\n\n    try {\n      await spreadSheet.useServiceAccountAuth({\n        client_email: SheetsAPIInfo.client_email,\n        private_key: SheetsAPIInfo.private_key\n      });\n      await spreadSheet.loadInfo();\n      const sheet = spreadSheet.sheetsByIndex[0];\n      rows = await sheet.getRows();\n      var otherCurs = [];\n\n      for (var i = 0; i < rows.length; i++) {\n        if (rows[i].Other != \"\") {\n          otherCurs.push(rows[i].Other);\n        }\n\n        if (rows[i][\"Highest Level of Education\"] === \"High School\") {\n          highSchool++;\n        }\n\n        if (rows[i][\"Highest Level of Education\"] === \"Some college\") {\n          someCollege++;\n        }\n\n        if (rows[i][\"Highest Level of Education\"] === \"College degree\") {\n          college++;\n        }\n\n        if (rows[i][\"Highest Level of Education\"] === \"Master's degree\") {\n          masters++;\n        }\n\n        if (rows[i][\"Highest Level of Education\"] === \"PhD\") {\n          PhD++;\n        }\n\n        if (rows[i][\"Highest Level of Education\"] === \"Professional degree (MD, JD, etc.)\") {\n          profD++;\n        }\n\n        if (rows[i].Industry === \"Accounting, Banking & Finance\") {\n          numABF++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salABF.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Agriculture or Forestry\") {\n          numAF++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salAF.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Art & Design\") {\n          numAD++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salAD.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Business or Consulting\") {\n          numBC++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salBC.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Computing or Tech\") {\n          numCT++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salCT.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Education (Primary/Secondary)\") {\n          numEPS++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salEPS.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Education (Higher Education)\") {\n          numEH++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salEH.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Engineering or Manufacturing\") {\n          numEM++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salEM.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Entertainment\") {\n          numEnt++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salEnt.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Government and Public Administration\") {\n          numGPA++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salGPA.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Health care\") {\n          numHC++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salHC.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Hospitality & Events\") {\n          numHE++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salHE.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Insurance\") {\n          numIns++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salIns.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Law\") {\n          numLaw++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salLaw.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Law Enforcement & Security\") {\n          numLS++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salLS.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Leisure, Sport & Tourism\") {\n          numLST++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salLST.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Marketing, Advertising & PR\") {\n          numMAPR++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salMAPR.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Media & Digital\") {\n          numMD++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salMD.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Nonprofits\") {\n          numNonP++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salNonP.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Property or Construction\") {\n          numPC++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salPC.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Recruitment or HR\") {\n          numRHR++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salRHR.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Retail\") {\n          numRetail++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salRetail.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Sales\") {\n          numSales++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salSales.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Social Work\") {\n          numSW++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salSW.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Transport or Logistics\") {\n          numTL++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salTL.push(totalSalary);\n        }\n\n        if (rows[i].Industry === \"Utilities & Telecommunications\") {\n          numUT++;\n          var totalSalary = parseInt(rows[i][\"Annual Salary\"].replace(/,/g, \"\"));\n\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n\n          salUT.push(totalSalary);\n        }\n      }\n\n      console.log(otherCurs);\n      var sumABF = 0;\n\n      for (let i = 0; i < numABF; i++) {\n        sumABF += salABF[i];\n      }\n\n      avgABF = sumABF / numABF / 1000;\n      avgABF = avgABF.toFixed(2);\n      var sumAF = 0;\n\n      for (let i = 0; i < numAF; i++) {\n        sumAF += salAF[i];\n      }\n\n      avgAF = sumAF / numAF / 1000;\n      avgAF = avgAF.toFixed(2);\n      var sumAD = 0;\n\n      for (let i = 0; i < numAD; i++) {\n        sumAD += salAD[i];\n      }\n\n      avgAD = sumAD / numAD / 1000;\n      avgAD = avgAD.toFixed(2);\n      var sumBC = 0;\n\n      for (let i = 0; i < numBC; i++) {\n        sumBC += salBC[i];\n      }\n\n      avgBC = sumBC / numBC / 1000;\n      avgBC = avgBC.toFixed(2);\n      var sumCT = 0;\n\n      for (let i = 0; i < numCT; i++) {\n        sumCT += salCT[i];\n      }\n\n      avgCT = sumCT / numCT / 1000;\n      avgCT = avgCT.toFixed(2);\n      var sumEPS = 0;\n\n      for (let i = 0; i < numEPS; i++) {\n        sumEPS += salEPS[i];\n      }\n\n      avgEPS = sumEPS / numEPS / 1000;\n      avgEPS = avgEPS.toFixed(2);\n      var sumEH = 0;\n\n      for (let i = 0; i < numEH; i++) {\n        sumEH += salEH[i];\n      }\n\n      avgEH = sumEH / numEH / 1000;\n      avgEH = avgEH.toFixed(2);\n      var sumEM = 0;\n\n      for (let i = 0; i < numEM; i++) {\n        sumEM += salEM[i];\n      }\n\n      avgEM = sumEM / numEM / 1000;\n      avgEM = avgEM.toFixed(2);\n      var sumEnt = 0;\n\n      for (let i = 0; i < numEnt; i++) {\n        sumEnt += salEnt[i];\n      }\n\n      avgEnt = sumEnt / numEnt / 1000;\n      avgEnt = avgEnt.toFixed(2);\n      var sumGPA = 0;\n\n      for (let i = 0; i < numGPA; i++) {\n        sumGPA += salGPA[i];\n      }\n\n      avgGPA = sumGPA / numGPA / 1000;\n      avgGPA = avgGPA.toFixed(2);\n      var sumHC = 0;\n\n      for (let i = 0; i < numHC; i++) {\n        sumHC += salHC[i];\n      }\n\n      avgHC = sumHC / numHC / 1000;\n      avgHC = avgHC.toFixed(2);\n      var sumHE = 0;\n\n      for (let i = 0; i < numHE; i++) {\n        sumHE += salHE[i];\n      }\n\n      avgHE = sumHE / numHE / 1000;\n      avgHE = avgHE.toFixed(2);\n      var sumIns = 0;\n\n      for (let i = 0; i < numIns; i++) {\n        sumIns += salIns[i];\n      }\n\n      avgIns = sumIns / numIns / 1000;\n      avgIns = avgIns.toFixed(2);\n      var sumLaw = 0;\n\n      for (let i = 0; i < numLaw; i++) {\n        sumLaw += salLaw[i];\n      }\n\n      avgLaw = sumLaw / numLaw / 1000;\n      avgLaw = avgLaw.toFixed(2);\n      var sumLS = 0;\n\n      for (let i = 0; i < numLS; i++) {\n        sumLS += salLS[i];\n      }\n\n      avgLS = sumLS / numLS / 1000;\n      avgLS = avgLS.toFixed(2);\n      var sumLST = 0;\n\n      for (let i = 0; i < numLST; i++) {\n        sumLST += salLST[i];\n      }\n\n      avgLST = sumLST / numLST / 1000;\n      avgLST = avgLST.toFixed(2);\n      var sumMAPR = 0;\n\n      for (let i = 0; i < numMAPR; i++) {\n        sumMAPR += salMAPR[i];\n      }\n\n      avgMAPR = sumMAPR / numMAPR / 1000;\n      avgMAPR = avgMAPR.toFixed(2);\n      var sumMD = 0;\n\n      for (let i = 0; i < numMD; i++) {\n        sumMD += salMD[i];\n      }\n\n      avgMD = sumMD / numMD / 1000;\n      avgMD = avgMD.toFixed(2);\n      var sumNonP = 0;\n\n      for (let i = 0; i < numNonP; i++) {\n        sumNonP += salNonP[i];\n      }\n\n      avgNonP = sumNonP / numNonP / 1000;\n      avgNonP = avgNonP.toFixed(2);\n      var sumPC = 0;\n\n      for (let i = 0; i < numPC; i++) {\n        sumPC += salPC[i];\n      }\n\n      avgPC = sumPC / numPC / 1000;\n      avgPC = avgPC.toFixed(2);\n      var sumRHR = 0;\n\n      for (let i = 0; i < numRHR; i++) {\n        sumRHR += salRHR[i];\n      }\n\n      avgRHR = sumRHR / numRHR / 1000;\n      avgRHR = avgRHR.toFixed(2);\n      var sumRetail = 0;\n\n      for (let i = 0; i < numRetail; i++) {\n        sumRetail += salRetail[i];\n      }\n\n      avgRetail = sumRetail / numRetail / 1000;\n      avgRetail = avgRetail.toFixed(2);\n      var sumSales = 0;\n\n      for (let i = 0; i < numSales; i++) {\n        sumSales += salSales[i];\n      }\n\n      avgSales = sumSales / numSales / 1000;\n      avgSales = avgSales.toFixed(2);\n      var sumSW = 0;\n\n      for (let i = 0; i < numSW; i++) {\n        sumSW += salSW[i];\n      }\n\n      avgSW = sumSW / numSW / 1000;\n      avgSW = avgSW.toFixed(2);\n      var sumTL = 0;\n\n      for (let i = 0; i < numTL; i++) {\n        sumTL += salTL[i];\n      }\n\n      avgTL = sumTL / numTL / 1000;\n      avgTL = avgTL.toFixed(2);\n      var sumUT = 0;\n\n      for (let i = 0; i < numUT; i++) {\n        sumUT += salUT[i];\n      }\n\n      avgUT = sumUT / numUT / 1000;\n      avgUT = avgUT.toFixed(2);\n      data1.push({\n        name: \"Accounting, Banking & Finance\",\n        val: numABF\n      });\n      data1.push({\n        name: \"Agriculture or Forestry\",\n        val: numAF\n      });\n      data1.push({\n        name: \"Art & Design\",\n        val: numAD\n      });\n      data1.push({\n        name: \"Business or Consulting\",\n        val: numBC\n      });\n      data1.push({\n        name: \"Computing or Tech\",\n        val: numCT\n      });\n      data1.push({\n        name: \"Education (Primary/Secondary)\",\n        val: numEPS\n      });\n      data1.push({\n        name: \"Education (Higher Education)\",\n        val: numEH\n      });\n      data1.push({\n        name: \"Engineering or Manufacturing\",\n        val: numEM\n      });\n      data1.push({\n        name: \"Entertainment\",\n        val: numEnt\n      });\n      data1.push({\n        name: \"Government and Public Administration\",\n        val: numGPA\n      });\n      data1.push({\n        name: \"Health Care\",\n        val: numHC\n      });\n      data1.push({\n        name: \"Hospitality & Events\",\n        val: numHE\n      });\n      data1.push({\n        name: \"Insurance\",\n        val: numIns\n      });\n      data1.push({\n        name: \"Law\",\n        val: numLaw\n      });\n      data1.push({\n        name: \"Law Enforcement & Security\",\n        val: numLS\n      });\n      data1.push({\n        name: \"Leisure, Sport & Tourism\",\n        val: numLST\n      });\n      data1.push({\n        name: \"Marketing, Advertising & PR\",\n        val: numMAPR\n      });\n      data1.push({\n        name: \"Media & Digital\",\n        val: numMD\n      });\n      data1.push({\n        name: \"Nonprofits\",\n        val: numNonP\n      });\n      data1.push({\n        name: \"Property or Construction\",\n        val: numPC\n      });\n      data1.push({\n        name: \"Recruitment or HR\",\n        val: numRHR\n      });\n      data1.push({\n        name: \"Retail\",\n        val: numRetail\n      });\n      data1.push({\n        name: \"Sales\",\n        val: numSales\n      });\n      data1.push({\n        name: \"Social Work\",\n        val: numSW\n      });\n      data1.push({\n        name: \"Transport or Logistics\",\n        val: numTL\n      });\n      data1.push({\n        name: \"Utilities & Telecommunications\",\n        val: numUT\n      });\n      data2.push({\n        name: \"Accounting, Banking & Finance\",\n        val: avgABF\n      });\n      data2.push({\n        name: \"Agriculture or Forestry\",\n        val: avgAF\n      });\n      data2.push({\n        name: \"Art & Design\",\n        val: avgAD\n      });\n      data2.push({\n        name: \"Business or Consulting\",\n        val: avgBC\n      });\n      data2.push({\n        name: \"Computing or Tech\",\n        val: avgCT\n      });\n      data2.push({\n        name: \"Education (Primary/Secondary)\",\n        val: avgEPS\n      });\n      data2.push({\n        name: \"Education (Higher Education)\",\n        val: avgEH\n      });\n      data2.push({\n        name: \"Engineering or Manufacturing\",\n        val: avgEM\n      });\n      data2.push({\n        name: \"Entertainment\",\n        val: avgEnt\n      });\n      data2.push({\n        name: \"Government and Public Administration\",\n        val: avgGPA\n      });\n      data2.push({\n        name: \"Health Care\",\n        val: avgHC\n      });\n      data2.push({\n        name: \"Hospitality & Events\",\n        val: avgHE\n      });\n      data2.push({\n        name: \"Insurance\",\n        val: avgIns\n      });\n      data2.push({\n        name: \"Law\",\n        val: avgLaw\n      });\n      data2.push({\n        name: \"Law Enforcement & Security\",\n        val: avgLS\n      });\n      data2.push({\n        name: \"Leisure, Sport & Tourism\",\n        val: avgLST\n      });\n      data2.push({\n        name: \"Marketing, Advertising & PR\",\n        val: avgMAPR\n      });\n      data2.push({\n        name: \"Media & Digital\",\n        val: avgMD\n      });\n      data2.push({\n        name: \"Nonprofits\",\n        val: avgNonP\n      });\n      data2.push({\n        name: \"Property or Construction\",\n        val: avgPC\n      });\n      data2.push({\n        name: \"Recruitment or HR\",\n        val: avgRHR\n      });\n      data2.push({\n        name: \"Retail\",\n        val: avgRetail\n      });\n      data2.push({\n        name: \"Sales\",\n        val: avgSales\n      });\n      data2.push({\n        name: \"Social Work\",\n        val: avgSW\n      });\n      data2.push({\n        name: \"Transport or Logistics\",\n        val: avgTL\n      });\n      data2.push({\n        name: \"Utilities & Telecommunications\",\n        val: avgUT\n      });\n      data3.push({\n        name: \"High School\",\n        val: highSchool,\n        fill: \"#009900\"\n      });\n      data3.push({\n        name: \"Some College\",\n        val: someCollege,\n        fill: \"#CCCC00\"\n      });\n      data3.push({\n        name: \"College Degree\",\n        val: college,\n        fill: \"#FF0000\"\n      });\n      data3.push({\n        name: \"Master's Degree\",\n        val: masters,\n        fill: \"#3333FF\"\n      });\n      data3.push({\n        name: \"PhD\",\n        val: PhD,\n        fill: \"#00CCCC\"\n      });\n      data3.push({\n        name: \"Professional degree (MD, JD, etc.)\",\n        val: profD,\n        fill: \"#FF00FF\"\n      });\n      console.log(data1);\n      console.log(data2);\n      console.log(data3); // console.log(salABF);\n      // console.log(avgABF);\n\n      setIsLoaded(true);\n      console.log(isLoaded);\n      return true;\n    } catch (e) {\n      console.error(\"Error: \", e);\n    }\n  }, \"XzZzjmf42T4ghIIVsLcPZIIQRXQ=\", false, function () {\n    return [spreadSheet.useServiceAccountAuth];\n  })();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.appBarSpacer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            lg: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Distribution of People in the Job Market\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1292,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1291,\n                columnNumber: 17\n              }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1295,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(RadarChart, {\n                  innerRadius: 70,\n                  outerRadius: 300,\n                  width: 1000,\n                  height: 670,\n                  data: data1,\n                  children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1305,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n                    dataKey: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1306,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {\n                    angle: 30,\n                    domain: [0, 150]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1307,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Radar, {\n                    name: \"People\",\n                    dataKey: \"val\",\n                    fill: colors[2],\n                    fillOpacity: 0.5,\n                    children: /*#__PURE__*/_jsxDEV(LabelList, {\n                      dataKey: \"val\",\n                      position: \"insideStart\",\n                      angle: 0\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1314,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1308,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1316,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1298,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1297,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1290,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            lg: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Average Annual Salary Across Industries\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1326,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1326,\n                columnNumber: 17\n              }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1328,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  width: 1150,\n                  height: 600,\n                  data: data2,\n                  margin: {\n                    top: 20,\n                    right: 10,\n                    left: 10,\n                    bottom: 20\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1337,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1338,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    label: {\n                      value: \"Salary ($k)\",\n                      angle: -90,\n                      position: \"insideLeft\"\n                    },\n                    domain: [0, 520.45]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1339,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"val\",\n                    fill: colors[1],\n                    children: /*#__PURE__*/_jsxDEV(LabelList, {\n                      dataKey: \"name\",\n                      angle: 90,\n                      position: \"center\",\n                      fontSize: 12\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1347,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1343,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1349,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1331,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            lg: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Distribution of Degrees\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1360,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1360,\n                columnNumber: 17\n              }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1362,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(PieChart, {\n                  width: 300,\n                  height: 350,\n                  margin: {\n                    top: 5,\n                    right: 0,\n                    left: 0,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Pie, {\n                    data: data3,\n                    dataKey: \"val\",\n                    nameKey: \"name\",\n                    cx: \"50%\",\n                    cy: \"50%\",\n                    outerRadius: 100,\n                    label: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1370,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1378,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1365,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1364,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1359,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1283,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1282,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Graph, \"E9FXvoLVpNCvxFRTOszJmb2KKvI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/Graph.js"],"names":["React","SheetsAPIInfo","GoogleSpreadsheet","Container","Grid","Paper","useStyles","CircularProgress","RadarChart","Radar","PolarGrid","PolarAngleAxis","PolarRadiusAxis","BarChart","Bar","PieChart","Pie","LineChart","Line","CartesianGrid","XAxis","YAxis","Label","Tooltip","Legend","LabelList","colors","data","name","val","fill","data1","data2","data3","rows","numABF","avgABF","salABF","numAF","avgAF","salAF","numAD","avgAD","salAD","numBC","avgBC","salBC","numCT","avgCT","salCT","numEPS","avgEPS","salEPS","numEH","avgEH","salEH","numEM","avgEM","salEM","numEnt","avgEnt","salEnt","numGPA","avgGPA","salGPA","numHC","avgHC","salHC","numHE","avgHE","salHE","numIns","avgIns","salIns","numLaw","avgLaw","salLaw","numLS","avgLS","salLS","numLST","avgLST","salLST","numMAPR","avgMAPR","salMAPR","numMD","avgMD","salMD","numNonP","avgNonP","salNonP","numPC","avgPC","salPC","numRHR","avgRHR","salRHR","numRetail","avgRetail","salRetail","numSales","avgSales","salSales","numSW","avgSW","salSW","numTL","avgTL","salTL","numUT","avgUT","salUT","highSchool","someCollege","college","masters","PhD","profD","spreadSheet","Graph","isLoaded","setIsLoaded","useState","google","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","getRows","otherCurs","i","length","Other","push","Industry","totalSalary","parseInt","replace","Currency","console","log","sumABF","toFixed","sumAF","sumAD","sumBC","sumCT","sumEPS","sumEH","sumEM","sumEnt","sumGPA","sumHC","sumHE","sumIns","sumLaw","sumLS","sumLST","sumMAPR","sumMD","sumNonP","sumPC","sumRHR","sumRetail","sumSales","sumSW","sumTL","sumUT","e","error","classes","root","content","appBarSpacer","container","paper","top","right","left","bottom","value","angle","position"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SACEC,UADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,cAJF,EAKEC,eALF,EAMEC,QANF,EAOEC,GAPF,EAQEC,QARF,EASEC,GATF,EAUEC,SAVF,EAWEC,IAXF,EAYEC,aAZF,EAaEC,KAbF,EAcEC,KAdF,EAeEC,KAfF,EAgBEC,OAhBF,EAiBEC,MAjBF,EAkBEC,SAlBF,QAmBO,UAnBP;;AAqBA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAAf;AACA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE,mBAAR;AAA6BC,EAAAA,GAAG,EAAE,IAAlC;AAAwCC,EAAAA,IAAI,EAAEJ,MAAM,CAAC,CAAD;AAApD,CADW,EAEX;AAAEE,EAAAA,IAAI,EAAE,+BAAR;AAAyCC,EAAAA,GAAG,EAAE,IAA9C;AAAoDC,EAAAA,IAAI,EAAEJ,MAAM,CAAC,CAAD;AAAhE,CAFW,EAGX;AAAEE,EAAAA,IAAI,EAAE,8BAAR;AAAwCC,EAAAA,GAAG,EAAE,IAA7C;AAAmDC,EAAAA,IAAI,EAAEJ,MAAM,CAAC,CAAD;AAA/D,CAHW,CAAb;AAKA,IAAIK,KAAK,GAAG,EAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,IAAI,GAAG,EAAX;AACA,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,MAAM,GAAG,GAAb;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,MAAM,GAAG,GAAb;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,MAAM,GAAG,GAAb;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,MAAM,GAAG,GAAb;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,MAAM,GAAG,GAAb;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,MAAM,GAAG,GAAb;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,MAAM,GAAG,GAAb;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,OAAO,GAAG,GAAd;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,OAAO,GAAG,GAAd;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,MAAM,GAAG,GAAb;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,SAAS,GAAG,GAAhB;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,QAAQ,GAAG,CAAf;AACA,IAAIC,QAAQ,GAAG,GAAf;AACA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,UAAU,GAAG,CAAjB;AAAoB,IAAIC,WAAW,GAAG,CAAlB;AAAqB,IAAIC,OAAO,GAAG,CAAd;AAAiB,IAAIC,OAAO,GAAG,CAAd;AAAiB,IAAIC,GAAG,GAAG,CAAV;AAAa,IAAIC,KAAK,GAAG,CAAZ;AAExF,MAAMC,WAAW,GAAG,IAAIrH,iBAAJ,CAClB,8CADkB,CAApB;AAIA,eAAe,SAASsH,KAAT,GAAiB;AAAA;;AAAA;;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B1H,KAAK,CAAC2H,QAAN,CAAe,KAAf,CAAhC;;AAEA,KAAC,eAAeC,MAAf,GAAwB;AAAA;;AACvB,QAAI;AACF,YAAML,WAAW,CAACM,qBAAZ,CAAkC;AACtCC,QAAAA,YAAY,EAAE7H,aAAa,CAAC6H,YADU;AAEtCC,QAAAA,WAAW,EAAE9H,aAAa,CAAC8H;AAFW,OAAlC,CAAN;AAKA,YAAMR,WAAW,CAACS,QAAZ,EAAN;AACA,YAAMC,KAAK,GAAGV,WAAW,CAACW,aAAZ,CAA0B,CAA1B,CAAd;AACAhG,MAAAA,IAAI,GAAG,MAAM+F,KAAK,CAACE,OAAN,EAAb;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnG,IAAI,CAACoG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAInG,IAAI,CAACmG,CAAD,CAAJ,CAAQE,KAAR,IAAiB,EAArB,EAAyB;AACvBH,UAAAA,SAAS,CAACI,IAAV,CAAetG,IAAI,CAACmG,CAAD,CAAJ,CAAQE,KAAvB;AACD;;AAED,YAAIrG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,4BAAR,MAA0C,aAA9C,EAA6D;AAC3DpB,UAAAA,UAAU;AACX;;AACD,YAAI/E,IAAI,CAACmG,CAAD,CAAJ,CAAQ,4BAAR,MAA0C,cAA9C,EAA8D;AAC5DnB,UAAAA,WAAW;AACZ;;AACD,YAAIhF,IAAI,CAACmG,CAAD,CAAJ,CAAQ,4BAAR,MAA0C,gBAA9C,EAAgE;AAC9DlB,UAAAA,OAAO;AACR;;AACD,YAAIjF,IAAI,CAACmG,CAAD,CAAJ,CAAQ,4BAAR,MAA0C,iBAA9C,EAAiE;AAC/DjB,UAAAA,OAAO;AACR;;AACD,YAAIlF,IAAI,CAACmG,CAAD,CAAJ,CAAQ,4BAAR,MAA0C,KAA9C,EAAqD;AACnDhB,UAAAA,GAAG;AACJ;;AACD,YAAInF,IAAI,CAACmG,CAAD,CAAJ,CAAQ,4BAAR,MAA0C,oCAA9C,EAAoF;AAClFf,UAAAA,KAAK;AACN;;AAED,YAAIpF,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,+BAAzB,EAA0D;AACxDtG,UAAAA,MAAM;AACN,cAAIuG,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDrG,UAAAA,MAAM,CAACmG,IAAP,CAAYE,WAAZ;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,yBAAzB,EAAoD;AAClDnG,UAAAA,KAAK;AACL,cAAIoG,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDlG,UAAAA,KAAK,CAACgG,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,cAAzB,EAAyC;AACvChG,UAAAA,KAAK;AACL,cAAIiG,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD/F,UAAAA,KAAK,CAAC6F,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,wBAAzB,EAAmD;AACjD7F,UAAAA,KAAK;AACL,cAAI8F,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD5F,UAAAA,KAAK,CAAC0F,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,mBAAzB,EAA8C;AAC5C1F,UAAAA,KAAK;AACL,cAAI2F,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDzF,UAAAA,KAAK,CAACuF,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,+BAAzB,EAA0D;AACxDvF,UAAAA,MAAM;AACN,cAAIwF,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDtF,UAAAA,MAAM,CAACoF,IAAP,CAAYE,WAAZ;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,8BAAzB,EAAyD;AACvDpF,UAAAA,KAAK;AACL,cAAIqF,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDnF,UAAAA,KAAK,CAACiF,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,8BAAzB,EAAyD;AACvDjF,UAAAA,KAAK;AACL,cAAIkF,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDhF,UAAAA,KAAK,CAAC8E,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,eAAzB,EAA0C;AACxC9E,UAAAA,MAAM;AACN,cAAI+E,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD7E,UAAAA,MAAM,CAAC2E,IAAP,CAAYE,WAAZ;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,sCAAzB,EAAiE;AAC/D3E,UAAAA,MAAM;AACN,cAAI4E,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD1E,UAAAA,MAAM,CAACwE,IAAP,CAAYE,WAAZ;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,aAAzB,EAAwC;AACtCxE,UAAAA,KAAK;AACL,cAAIyE,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDvE,UAAAA,KAAK,CAACqE,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,sBAAzB,EAAiD;AAC/CrE,UAAAA,KAAK;AACL,cAAIsE,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDpE,UAAAA,KAAK,CAACkE,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,WAAzB,EAAsC;AACpClE,UAAAA,MAAM;AACN,cAAImE,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDjE,UAAAA,MAAM,CAAC+D,IAAP,CAAYE,WAAZ;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,KAAzB,EAAgC;AAC9B/D,UAAAA,MAAM;AACN,cAAIgE,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD9D,UAAAA,MAAM,CAAC4D,IAAP,CAAYE,WAAZ;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,4BAAzB,EAAuD;AACrD5D,UAAAA,KAAK;AACL,cAAI6D,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD3D,UAAAA,KAAK,CAACyD,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,0BAAzB,EAAqD;AACnDzD,UAAAA,MAAM;AACN,cAAI0D,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDxD,UAAAA,MAAM,CAACsD,IAAP,CAAYE,WAAZ;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,6BAAzB,EAAwD;AACtDtD,UAAAA,OAAO;AACP,cAAIuD,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDrD,UAAAA,OAAO,CAACmD,IAAR,CAAaE,WAAb;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,iBAAzB,EAA4C;AAC1CnD,UAAAA,KAAK;AACL,cAAIoD,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDlD,UAAAA,KAAK,CAACgD,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,YAAzB,EAAuC;AACrChD,UAAAA,OAAO;AACP,cAAIiD,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD/C,UAAAA,OAAO,CAAC6C,IAAR,CAAaE,WAAb;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,0BAAzB,EAAqD;AACnD7C,UAAAA,KAAK;AACL,cAAI8C,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD5C,UAAAA,KAAK,CAAC0C,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,mBAAzB,EAA8C;AAC5C1C,UAAAA,MAAM;AACN,cAAI2C,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDzC,UAAAA,MAAM,CAACuC,IAAP,CAAYE,WAAZ;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,QAAzB,EAAmC;AACjCvC,UAAAA,SAAS;AACT,cAAIwC,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDtC,UAAAA,SAAS,CAACoC,IAAV,CAAeE,WAAf;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,OAAzB,EAAkC;AAChCpC,UAAAA,QAAQ;AACR,cAAIqC,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDnC,UAAAA,QAAQ,CAACiC,IAAT,CAAcE,WAAd;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,aAAzB,EAAwC;AACtCjC,UAAAA,KAAK;AACL,cAAIkC,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACDhC,UAAAA,KAAK,CAAC8B,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,wBAAzB,EAAmD;AACjD9B,UAAAA,KAAK;AACL,cAAI+B,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD7B,UAAAA,KAAK,CAAC2B,IAAN,CAAWE,WAAX;AACD;;AACD,YAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQI,QAAR,KAAqB,gCAAzB,EAA2D;AACzD3B,UAAAA,KAAK;AACL,cAAI4B,WAAW,GAAGC,QAAQ,CACxBzG,IAAI,CAACmG,CAAD,CAAJ,CAAQ,eAAR,EAAyBO,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CADwB,CAA1B;;AAGA,cAAI1G,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,MAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,SAAzB,EAAoC;AAClCH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,KAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD,cAAIxG,IAAI,CAACmG,CAAD,CAAJ,CAAQQ,QAAR,KAAqB,KAAzB,EAAgC;AAC9BH,YAAAA,WAAW,IAAI,IAAf;AACD;;AACD1B,UAAAA,KAAK,CAACwB,IAAN,CAAWE,WAAX;AACD;AACF;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AAEA,UAAIY,MAAM,GAAG,CAAb;;AACA,WAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlG,MAApB,EAA4BkG,CAAC,EAA7B,EAAiC;AAC/BW,QAAAA,MAAM,IAAI3G,MAAM,CAACgG,CAAD,CAAhB;AACD;;AACDjG,MAAAA,MAAM,GAAG4G,MAAM,GAAG7G,MAAT,GAAkB,IAA3B;AACAC,MAAAA,MAAM,GAAGA,MAAM,CAAC6G,OAAP,CAAe,CAAf,CAAT;AACA,UAAIC,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/F,KAApB,EAA2B+F,CAAC,EAA5B,EAAgC;AAC9Ba,QAAAA,KAAK,IAAI1G,KAAK,CAAC6F,CAAD,CAAd;AACD;;AACD9F,MAAAA,KAAK,GAAG2G,KAAK,GAAG5G,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAAC0G,OAAN,CAAc,CAAd,CAAR;AACA,UAAIE,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5F,KAApB,EAA2B4F,CAAC,EAA5B,EAAgC;AAC9Bc,QAAAA,KAAK,IAAIxG,KAAK,CAAC0F,CAAD,CAAd;AACD;;AACD3F,MAAAA,KAAK,GAAGyG,KAAK,GAAG1G,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAACuG,OAAN,CAAc,CAAd,CAAR;AACA,UAAIG,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzF,KAApB,EAA2ByF,CAAC,EAA5B,EAAgC;AAC9Be,QAAAA,KAAK,IAAItG,KAAK,CAACuF,CAAD,CAAd;AACD;;AACDxF,MAAAA,KAAK,GAAGuG,KAAK,GAAGxG,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAACoG,OAAN,CAAc,CAAd,CAAR;AACA,UAAII,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtF,KAApB,EAA2BsF,CAAC,EAA5B,EAAgC;AAC9BgB,QAAAA,KAAK,IAAIpG,KAAK,CAACoF,CAAD,CAAd;AACD;;AACDrF,MAAAA,KAAK,GAAGqG,KAAK,GAAGtG,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAACiG,OAAN,CAAc,CAAd,CAAR;AACA,UAAIK,MAAM,GAAG,CAAb;;AACA,WAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnF,MAApB,EAA4BmF,CAAC,EAA7B,EAAiC;AAC/BiB,QAAAA,MAAM,IAAIlG,MAAM,CAACiF,CAAD,CAAhB;AACD;;AACDlF,MAAAA,MAAM,GAAGmG,MAAM,GAAGpG,MAAT,GAAkB,IAA3B;AACAC,MAAAA,MAAM,GAAGA,MAAM,CAAC8F,OAAP,CAAe,CAAf,CAAT;AACA,UAAIM,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhF,KAApB,EAA2BgF,CAAC,EAA5B,EAAgC;AAC9BkB,QAAAA,KAAK,IAAIhG,KAAK,CAAC8E,CAAD,CAAd;AACD;;AACD/E,MAAAA,KAAK,GAAGiG,KAAK,GAAGlG,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAAC2F,OAAN,CAAc,CAAd,CAAR;AACA,UAAIO,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7E,KAApB,EAA2B6E,CAAC,EAA5B,EAAgC;AAC9BmB,QAAAA,KAAK,IAAI9F,KAAK,CAAC2E,CAAD,CAAd;AACD;;AACD5E,MAAAA,KAAK,GAAG+F,KAAK,GAAGhG,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAACwF,OAAN,CAAc,CAAd,CAAR;AACA,UAAIQ,MAAM,GAAG,CAAb;;AACA,WAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1E,MAApB,EAA4B0E,CAAC,EAA7B,EAAiC;AAC/BoB,QAAAA,MAAM,IAAI5F,MAAM,CAACwE,CAAD,CAAhB;AACD;;AACDzE,MAAAA,MAAM,GAAG6F,MAAM,GAAG9F,MAAT,GAAkB,IAA3B;AACAC,MAAAA,MAAM,GAAGA,MAAM,CAACqF,OAAP,CAAe,CAAf,CAAT;AACA,UAAIS,MAAM,GAAG,CAAb;;AACA,WAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvE,MAApB,EAA4BuE,CAAC,EAA7B,EAAiC;AAC/BqB,QAAAA,MAAM,IAAI1F,MAAM,CAACqE,CAAD,CAAhB;AACD;;AACDtE,MAAAA,MAAM,GAAG2F,MAAM,GAAG5F,MAAT,GAAkB,IAA3B;AACAC,MAAAA,MAAM,GAAGA,MAAM,CAACkF,OAAP,CAAe,CAAf,CAAT;AACA,UAAIU,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpE,KAApB,EAA2BoE,CAAC,EAA5B,EAAgC;AAC9BsB,QAAAA,KAAK,IAAIxF,KAAK,CAACkE,CAAD,CAAd;AACD;;AACDnE,MAAAA,KAAK,GAAGyF,KAAK,GAAG1F,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAAC+E,OAAN,CAAc,CAAd,CAAR;AACA,UAAIW,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIvB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjE,KAApB,EAA2BiE,CAAC,EAA5B,EAAgC;AAC9BuB,QAAAA,KAAK,IAAItF,KAAK,CAAC+D,CAAD,CAAd;AACD;;AACDhE,MAAAA,KAAK,GAAGuF,KAAK,GAAGxF,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAAC4E,OAAN,CAAc,CAAd,CAAR;AACA,UAAIY,MAAM,GAAG,CAAb;;AACA,WAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9D,MAApB,EAA4B8D,CAAC,EAA7B,EAAiC;AAC/BwB,QAAAA,MAAM,IAAIpF,MAAM,CAAC4D,CAAD,CAAhB;AACD;;AACD7D,MAAAA,MAAM,GAAGqF,MAAM,GAAGtF,MAAT,GAAkB,IAA3B;AACAC,MAAAA,MAAM,GAAGA,MAAM,CAACyE,OAAP,CAAe,CAAf,CAAT;AACA,UAAIa,MAAM,GAAG,CAAb;;AACA,WAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3D,MAApB,EAA4B2D,CAAC,EAA7B,EAAiC;AAC/ByB,QAAAA,MAAM,IAAIlF,MAAM,CAACyD,CAAD,CAAhB;AACD;;AACD1D,MAAAA,MAAM,GAAGmF,MAAM,GAAGpF,MAAT,GAAkB,IAA3B;AACAC,MAAAA,MAAM,GAAGA,MAAM,CAACsE,OAAP,CAAe,CAAf,CAAT;AACA,UAAIc,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxD,KAApB,EAA2BwD,CAAC,EAA5B,EAAgC;AAC9B0B,QAAAA,KAAK,IAAIhF,KAAK,CAACsD,CAAD,CAAd;AACD;;AACDvD,MAAAA,KAAK,GAAGiF,KAAK,GAAGlF,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAACmE,OAAN,CAAc,CAAd,CAAR;AACA,UAAIe,MAAM,GAAG,CAAb;;AACA,WAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrD,MAApB,EAA4BqD,CAAC,EAA7B,EAAiC;AAC/B2B,QAAAA,MAAM,IAAI9E,MAAM,CAACmD,CAAD,CAAhB;AACD;;AACDpD,MAAAA,MAAM,GAAG+E,MAAM,GAAGhF,MAAT,GAAkB,IAA3B;AACAC,MAAAA,MAAM,GAAGA,MAAM,CAACgE,OAAP,CAAe,CAAf,CAAT;AACA,UAAIgB,OAAO,GAAG,CAAd;;AACA,WAAK,IAAI5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlD,OAApB,EAA6BkD,CAAC,EAA9B,EAAkC;AAChC4B,QAAAA,OAAO,IAAI5E,OAAO,CAACgD,CAAD,CAAlB;AACD;;AACDjD,MAAAA,OAAO,GAAG6E,OAAO,GAAG9E,OAAV,GAAoB,IAA9B;AACAC,MAAAA,OAAO,GAAGA,OAAO,CAAC6D,OAAR,CAAgB,CAAhB,CAAV;AACA,UAAIiB,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/C,KAApB,EAA2B+C,CAAC,EAA5B,EAAgC;AAC9B6B,QAAAA,KAAK,IAAI1E,KAAK,CAAC6C,CAAD,CAAd;AACD;;AACD9C,MAAAA,KAAK,GAAG2E,KAAK,GAAG5E,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAAC0D,OAAN,CAAc,CAAd,CAAR;AACA,UAAIkB,OAAO,GAAG,CAAd;;AACA,WAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5C,OAApB,EAA6B4C,CAAC,EAA9B,EAAkC;AAChC8B,QAAAA,OAAO,IAAIxE,OAAO,CAAC0C,CAAD,CAAlB;AACD;;AACD3C,MAAAA,OAAO,GAAGyE,OAAO,GAAG1E,OAAV,GAAoB,IAA9B;AACAC,MAAAA,OAAO,GAAGA,OAAO,CAACuD,OAAR,CAAgB,CAAhB,CAAV;AACA,UAAImB,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzC,KAApB,EAA2ByC,CAAC,EAA5B,EAAgC;AAC9B+B,QAAAA,KAAK,IAAItE,KAAK,CAACuC,CAAD,CAAd;AACD;;AACDxC,MAAAA,KAAK,GAAGuE,KAAK,GAAGxE,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAACoD,OAAN,CAAc,CAAd,CAAR;AACA,UAAIoB,MAAM,GAAG,CAAb;;AACA,WAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtC,MAApB,EAA4BsC,CAAC,EAA7B,EAAiC;AAC/BgC,QAAAA,MAAM,IAAIpE,MAAM,CAACoC,CAAD,CAAhB;AACD;;AACDrC,MAAAA,MAAM,GAAGqE,MAAM,GAAGtE,MAAT,GAAkB,IAA3B;AACAC,MAAAA,MAAM,GAAGA,MAAM,CAACiD,OAAP,CAAe,CAAf,CAAT;AACA,UAAIqB,SAAS,GAAG,CAAhB;;AACA,WAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnC,SAApB,EAA+BmC,CAAC,EAAhC,EAAoC;AAClCiC,QAAAA,SAAS,IAAIlE,SAAS,CAACiC,CAAD,CAAtB;AACD;;AACDlC,MAAAA,SAAS,GAAGmE,SAAS,GAAGpE,SAAZ,GAAwB,IAApC;AACAC,MAAAA,SAAS,GAAGA,SAAS,CAAC8C,OAAV,CAAkB,CAAlB,CAAZ;AACA,UAAIsB,QAAQ,GAAG,CAAf;;AACA,WAAK,IAAIlC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhC,QAApB,EAA8BgC,CAAC,EAA/B,EAAmC;AACjCkC,QAAAA,QAAQ,IAAIhE,QAAQ,CAAC8B,CAAD,CAApB;AACD;;AACD/B,MAAAA,QAAQ,GAAGiE,QAAQ,GAAGlE,QAAX,GAAsB,IAAjC;AACAC,MAAAA,QAAQ,GAAGA,QAAQ,CAAC2C,OAAT,CAAiB,CAAjB,CAAX;AACA,UAAIuB,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAInC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7B,KAApB,EAA2B6B,CAAC,EAA5B,EAAgC;AAC9BmC,QAAAA,KAAK,IAAI9D,KAAK,CAAC2B,CAAD,CAAd;AACD;;AACD5B,MAAAA,KAAK,GAAG+D,KAAK,GAAGhE,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAACwC,OAAN,CAAc,CAAd,CAAR;AACA,UAAIwB,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1B,KAApB,EAA2B0B,CAAC,EAA5B,EAAgC;AAC9BoC,QAAAA,KAAK,IAAI5D,KAAK,CAACwB,CAAD,CAAd;AACD;;AACDzB,MAAAA,KAAK,GAAG6D,KAAK,GAAG9D,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAACqC,OAAN,CAAc,CAAd,CAAR;AACA,UAAIyB,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,KAApB,EAA2BuB,CAAC,EAA5B,EAAgC;AAC9BqC,QAAAA,KAAK,IAAI1D,KAAK,CAACqB,CAAD,CAAd;AACD;;AACDtB,MAAAA,KAAK,GAAG2D,KAAK,GAAG5D,KAAR,GAAgB,IAAxB;AACAC,MAAAA,KAAK,GAAGA,KAAK,CAACkC,OAAN,CAAc,CAAd,CAAR;AAEAlH,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,+BAAR;AAAyCC,QAAAA,GAAG,EAAEM;AAA9C,OAAX;AACAJ,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,yBAAR;AAAmCC,QAAAA,GAAG,EAAES;AAAxC,OAAX;AACAP,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,GAAG,EAAEY;AAA7B,OAAX;AACAV,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,wBAAR;AAAkCC,QAAAA,GAAG,EAAEe;AAAvC,OAAX;AACAb,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,mBAAR;AAA6BC,QAAAA,GAAG,EAAEkB;AAAlC,OAAX;AACAhB,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,+BAAR;AAAyCC,QAAAA,GAAG,EAAEqB;AAA9C,OAAX;AACAnB,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,8BAAR;AAAwCC,QAAAA,GAAG,EAAEwB;AAA7C,OAAX;AACAtB,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,8BAAR;AAAwCC,QAAAA,GAAG,EAAE2B;AAA7C,OAAX;AACAzB,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,GAAG,EAAE8B;AAA9B,OAAX;AACA5B,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,sCAAR;AAAgDC,QAAAA,GAAG,EAAEiC;AAArD,OAAX;AACA/B,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,GAAG,EAAEoC;AAA5B,OAAX;AACAlC,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,sBAAR;AAAgCC,QAAAA,GAAG,EAAEuC;AAArC,OAAX;AACArC,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,GAAG,EAAE0C;AAA1B,OAAX;AACAxC,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,GAAG,EAAE6C;AAApB,OAAX;AACA3C,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,4BAAR;AAAsCC,QAAAA,GAAG,EAAEgD;AAA3C,OAAX;AACA9C,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,0BAAR;AAAoCC,QAAAA,GAAG,EAAEmD;AAAzC,OAAX;AACAjD,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,6BAAR;AAAuCC,QAAAA,GAAG,EAAEsD;AAA5C,OAAX;AACApD,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,iBAAR;AAA2BC,QAAAA,GAAG,EAAEyD;AAAhC,OAAX;AACAvD,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,GAAG,EAAE4D;AAA3B,OAAX;AACA1D,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,0BAAR;AAAoCC,QAAAA,GAAG,EAAE+D;AAAzC,OAAX;AACA7D,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,mBAAR;AAA6BC,QAAAA,GAAG,EAAEkE;AAAlC,OAAX;AACAhE,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,GAAG,EAAEqE;AAAvB,OAAX;AACAnE,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,GAAG,EAAEwE;AAAtB,OAAX;AACAtE,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,GAAG,EAAE2E;AAA5B,OAAX;AACAzE,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,wBAAR;AAAkCC,QAAAA,GAAG,EAAE8E;AAAvC,OAAX;AACA5E,MAAAA,KAAK,CAACyG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,gCAAR;AAA0CC,QAAAA,GAAG,EAAEiF;AAA/C,OAAX;AAEA9E,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,+BAAR;AAAyCC,QAAAA,GAAG,EAAEO;AAA9C,OAAX;AACAJ,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,yBAAR;AAAmCC,QAAAA,GAAG,EAAEU;AAAxC,OAAX;AACAP,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,GAAG,EAAEa;AAA7B,OAAX;AACAV,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,wBAAR;AAAkCC,QAAAA,GAAG,EAAEgB;AAAvC,OAAX;AACAb,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,mBAAR;AAA6BC,QAAAA,GAAG,EAAEmB;AAAlC,OAAX;AACAhB,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,+BAAR;AAAyCC,QAAAA,GAAG,EAAEsB;AAA9C,OAAX;AACAnB,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,8BAAR;AAAwCC,QAAAA,GAAG,EAAEyB;AAA7C,OAAX;AACAtB,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,8BAAR;AAAwCC,QAAAA,GAAG,EAAE4B;AAA7C,OAAX;AACAzB,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,GAAG,EAAE+B;AAA9B,OAAX;AACA5B,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,sCAAR;AAAgDC,QAAAA,GAAG,EAAEkC;AAArD,OAAX;AACA/B,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,GAAG,EAAEqC;AAA5B,OAAX;AACAlC,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,sBAAR;AAAgCC,QAAAA,GAAG,EAAEwC;AAArC,OAAX;AACArC,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,GAAG,EAAE2C;AAA1B,OAAX;AACAxC,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,GAAG,EAAE8C;AAApB,OAAX;AACA3C,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,4BAAR;AAAsCC,QAAAA,GAAG,EAAEiD;AAA3C,OAAX;AACA9C,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,0BAAR;AAAoCC,QAAAA,GAAG,EAAEoD;AAAzC,OAAX;AACAjD,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,6BAAR;AAAuCC,QAAAA,GAAG,EAAEuD;AAA5C,OAAX;AACApD,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,iBAAR;AAA2BC,QAAAA,GAAG,EAAE0D;AAAhC,OAAX;AACAvD,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,GAAG,EAAE6D;AAA3B,OAAX;AACA1D,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,0BAAR;AAAoCC,QAAAA,GAAG,EAAEgE;AAAzC,OAAX;AACA7D,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,mBAAR;AAA6BC,QAAAA,GAAG,EAAEmE;AAAlC,OAAX;AACAhE,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,GAAG,EAAEsE;AAAvB,OAAX;AACAnE,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,GAAG,EAAEyE;AAAtB,OAAX;AACAtE,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,GAAG,EAAE4E;AAA5B,OAAX;AACAzE,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,wBAAR;AAAkCC,QAAAA,GAAG,EAAE+E;AAAvC,OAAX;AACA5E,MAAAA,KAAK,CAACwG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,gCAAR;AAA0CC,QAAAA,GAAG,EAAEkF;AAA/C,OAAX;AAEA9E,MAAAA,KAAK,CAACuG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,GAAG,EAAEoF,UAA5B;AAAwCnF,QAAAA,IAAI,EAAE;AAA9C,OAAX;AACAG,MAAAA,KAAK,CAACuG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,GAAG,EAAEqF,WAA7B;AAA0CpF,QAAAA,IAAI,EAAE;AAAhD,OAAX;AACAG,MAAAA,KAAK,CAACuG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,GAAG,EAAEsF,OAA/B;AAAwCrF,QAAAA,IAAI,EAAE;AAA9C,OAAX;AACAG,MAAAA,KAAK,CAACuG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,iBAAR;AAA2BC,QAAAA,GAAG,EAAEuF,OAAhC;AAAyCtF,QAAAA,IAAI,EAAE;AAA/C,OAAX;AACAG,MAAAA,KAAK,CAACuG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,GAAG,EAAEwF,GAApB;AAAyBvF,QAAAA,IAAI,EAAE;AAA/B,OAAX;AACAG,MAAAA,KAAK,CAACuG,IAAN,CAAW;AAAE5G,QAAAA,IAAI,EAAE,oCAAR;AAA8CC,QAAAA,GAAG,EAAEyF,KAAnD;AAA0DxF,QAAAA,IAAI,EAAE;AAAhE,OAAX;AAEAgH,MAAAA,OAAO,CAACC,GAAR,CAAYhH,KAAZ;AACA+G,MAAAA,OAAO,CAACC,GAAR,CAAY/G,KAAZ;AACA8G,MAAAA,OAAO,CAACC,GAAR,CAAY9G,KAAZ,EArnCE,CAsnCF;AACA;;AACAyF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACA,aAAO,IAAP;AACD,KA3nCD,CA2nCE,OAAOkD,CAAP,EAAU;AACV7B,MAAAA,OAAO,CAAC8B,KAAR,CAAc,SAAd,EAAyBD,CAAzB;AACD;AACF,GA/nCD;AAAA,YAEUpD,WAAW,CAACM,qBAFtB;AAAA;;AAioCA,QAAMgD,OAAO,GAAGvK,SAAS,EAAzB;AACA,sBACE;AAAK,IAAA,SAAS,EAAEuK,OAAO,CAACC,IAAxB;AAAA,2BACE;AAAM,MAAA,SAAS,EAAED,OAAO,CAACE,OAAzB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEF,OAAO,CAACG;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAEH,OAAO,CAACI,SAA5C;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCAGE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAA0B,YAAA,EAAE,EAAE,EAA9B;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,SAAS,EAAEJ,OAAO,CAACK,KAA1B;AAAA,sCACE;AAAA,uCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,EAIG,CAACzD,QAAD,gBACC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,sBADD,gBAGC;AAAA,uCACE,QAAC,UAAD;AACE,kBAAA,WAAW,EAAE,EADf;AAEE,kBAAA,WAAW,EAAE,GAFf;AAGE,kBAAA,KAAK,EAAE,IAHT;AAIE,kBAAA,MAAM,EAAE,GAJV;AAKE,kBAAA,IAAI,EAAE1F,KALR;AAAA,0CAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,0BAPF,eAQE,QAAC,cAAD;AAAgB,oBAAA,OAAO,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,0BARF,eASE,QAAC,eAAD;AAAiB,oBAAA,KAAK,EAAE,EAAxB;AAA4B,oBAAA,MAAM,EAAE,CAAC,CAAD,EAAI,GAAJ;AAApC;AAAA;AAAA;AAAA;AAAA,0BATF,eAUE,QAAC,KAAD;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,OAAO,EAAC,KAFV;AAGE,oBAAA,IAAI,EAAEL,MAAM,CAAC,CAAD,CAHd;AAIE,oBAAA,WAAW,EAAE,GAJf;AAAA,2CAME,QAAC,SAAD;AAAW,sBAAA,OAAO,EAAG,KAArB;AAA2B,sBAAA,QAAQ,EAAG,aAAtC;AAAoD,sBAAA,KAAK,EAAI;AAA7D;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,0BAVF,eAkBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,0BAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAHF,eAsCE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAI,EAAjB;AAAqB,YAAA,EAAE,EAAI,CAA3B;AAA8B,YAAA,EAAE,EAAI,EAApC;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,SAAS,EAAImJ,OAAO,CAACK,KAA5B;AAAA,sCACE;AAAA,uCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,sBADF,EAEG,CAACzD,QAAD,gBACC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,sBADD,gBAGC;AAAA,uCACE,QAAC,QAAD;AACE,kBAAA,KAAK,EAAI,IADX;AAEE,kBAAA,MAAM,EAAI,GAFZ;AAGE,kBAAA,IAAI,EAAIzF,KAHV;AAIE,kBAAA,MAAM,EAAE;AAAEmJ,oBAAAA,GAAG,EAAE,EAAP;AAAWC,oBAAAA,KAAK,EAAE,EAAlB;AAAsBC,oBAAAA,IAAI,EAAE,EAA5B;AAAgCC,oBAAAA,MAAM,EAAE;AAAxC,mBAJV;AAAA,0CAMA,QAAC,aAAD;AAAe,oBAAA,eAAe,EAAG;AAAjC;AAAA;AAAA;AAAA;AAAA,0BANA,eAOA,QAAC,KAAD;AAAO,oBAAA,OAAO,EAAG;AAAjB;AAAA;AAAA;AAAA;AAAA,0BAPA,eAQA,QAAC,KAAD;AACE,oBAAA,KAAK,EAAI;AAACC,sBAAAA,KAAK,EAAE,aAAR;AAAuBC,sBAAAA,KAAK,EAAE,CAAC,EAA/B;AAAmCC,sBAAAA,QAAQ,EAAE;AAA7C,qBADX;AAEE,oBAAA,MAAM,EAAI,CAAC,CAAD,EAAI,MAAJ;AAFZ;AAAA;AAAA;AAAA;AAAA,0BARA,eAYA,QAAC,GAAD;AACE,oBAAA,OAAO,EAAG,KADZ;AAEE,oBAAA,IAAI,EAAI/J,MAAM,CAAC,CAAD,CAFhB;AAAA,2CAIE,QAAC,SAAD;AAAW,sBAAA,OAAO,EAAG,MAArB;AAA4B,sBAAA,KAAK,EAAI,EAArC;AAAyC,sBAAA,QAAQ,EAAG,QAApD;AAA6D,sBAAA,QAAQ,EAAI;AAAzE;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,0BAZA,eAkBA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,0BAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAtCF,eAwEE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAI,EAAjB;AAAqB,YAAA,EAAE,EAAI,CAA3B;AAA8B,YAAA,EAAE,EAAI,EAApC;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,SAAS,EAAEmJ,OAAO,CAACK,KAA1B;AAAA,sCACE;AAAA,uCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,sBADF,EAEG,CAACzD,QAAD,gBACC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,sBADD,gBAGC;AAAA,uCACE,QAAC,QAAD;AACE,kBAAA,KAAK,EAAE,GADT;AAEE,kBAAA,MAAM,EAAE,GAFV;AAGE,kBAAA,MAAM,EAAI;AAAE0D,oBAAAA,GAAG,EAAE,CAAP;AAAUC,oBAAAA,KAAK,EAAE,CAAjB;AAAoBC,oBAAAA,IAAI,EAAE,CAA1B;AAA6BC,oBAAAA,MAAM,EAAE;AAArC,mBAHZ;AAAA,0CAKA,QAAC,GAAD;AACE,oBAAA,IAAI,EAAIrJ,KADV;AAEE,oBAAA,OAAO,EAAG,KAFZ;AAGE,oBAAA,OAAO,EAAG,MAHZ;AAIE,oBAAA,EAAE,EAAG,KAJP;AAKE,oBAAA,EAAE,EAAG,KALP;AAME,oBAAA,WAAW,EAAI,GANjB;AAOE,oBAAA,KAAK;AAPP;AAAA;AAAA;AAAA;AAAA,0BALA,eAaA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,0BAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAxEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+GD;;IApvCuBuF,K;UAooCNlH,S;;;KApoCMkH,K","sourcesContent":["import React from \"react\";\nimport SheetsAPIInfo from \"../SheetsAPIInfo.json\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"./UseStyles.js\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  RadarChart,\n  Radar,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Label,\n  Tooltip,\n  Legend,\n  LabelList,\n} from \"recharts\";\n\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\nconst data = [\n  { name: \"Computing or Tech\", val: 5000, fill: colors[0] },\n  { name: \"Accounting, Banking & Finance\", val: 7000, fill: colors[1] },\n  { name: \"Education (Higher Education)\", val: 2000, fill: colors[2] },\n];\nlet data1 = [];\nlet data2 = [];\nlet data3 = [];\nlet rows = [];\nlet numABF = 0;\nlet avgABF = 0.0;\nvar salABF = [];\nvar numAF = 0;\nvar avgAF = 0.0;\nvar salAF = [];\nvar numAD = 0;\nvar avgAD = 0.0;\nvar salAD = [];\nvar numBC = 0;\nvar avgBC = 0.0;\nvar salBC = [];\nvar numCT = 0;\nvar avgCT = 0.0;\nvar salCT = [];\nvar numEPS = 0;\nvar avgEPS = 0.0;\nvar salEPS = [];\nvar numEH = 0;\nvar avgEH = 0.0;\nvar salEH = [];\nvar numEM = 0;\nvar avgEM = 0.0;\nvar salEM = [];\nvar numEnt = 0;\nvar avgEnt = 0.0;\nvar salEnt = [];\nvar numGPA = 0;\nvar avgGPA = 0.0;\nvar salGPA = [];\nvar numHC = 0;\nvar avgHC = 0.0;\nvar salHC = [];\nvar numHE = 0;\nvar avgHE = 0.0;\nvar salHE = [];\nvar numIns = 0;\nvar avgIns = 0.0;\nvar salIns = [];\nvar numLaw = 0;\nvar avgLaw = 0.0;\nvar salLaw = [];\nvar numLS = 0;\nvar avgLS = 0.0;\nvar salLS = [];\nvar numLST = 0;\nvar avgLST = 0.0;\nvar salLST = [];\nvar numMAPR = 0;\nvar avgMAPR = 0.0;\nvar salMAPR = [];\nvar numMD = 0;\nvar avgMD = 0.0;\nvar salMD = [];\nvar numNonP = 0;\nvar avgNonP = 0.0;\nvar salNonP = [];\nvar numPC = 0;\nvar avgPC = 0.0;\nvar salPC = [];\nvar numRHR = 0;\nvar avgRHR = 0.0;\nvar salRHR = [];\nvar numRetail = 0;\nvar avgRetail = 0.0;\nvar salRetail = [];\nvar numSales = 0;\nvar avgSales = 0.0;\nvar salSales = [];\nvar numSW = 0;\nvar avgSW = 0.0;\nvar salSW = [];\nvar numTL = 0;\nvar avgTL = 0.0;\nvar salTL = [];\nvar numUT = 0;\nvar avgUT = 0.0;\nvar salUT = [];\nvar highSchool = 0; var someCollege = 0; var college = 0; var masters = 0; var PhD = 0; var profD = 0;\n\nconst spreadSheet = new GoogleSpreadsheet(\n  \"1xL-FWa7vdAH32MtPPVX688IMmG2y2rE34A_VW7SoZnI\"\n);\n\nexport default function Graph() {\n  const [isLoaded, setIsLoaded] = React.useState(false);\n\n  (async function google() {\n    try {\n      await spreadSheet.useServiceAccountAuth({\n        client_email: SheetsAPIInfo.client_email,\n        private_key: SheetsAPIInfo.private_key,\n      });\n\n      await spreadSheet.loadInfo();\n      const sheet = spreadSheet.sheetsByIndex[0];\n      rows = await sheet.getRows();\n      var otherCurs = [];\n      for (var i = 0; i < rows.length; i++) {\n        if (rows[i].Other != \"\") {\n          otherCurs.push(rows[i].Other);\n        }\n\n        if (rows[i][\"Highest Level of Education\"] === \"High School\") {\n          highSchool++;\n        }\n        if (rows[i][\"Highest Level of Education\"] === \"Some college\") {\n          someCollege++;\n        }\n        if (rows[i][\"Highest Level of Education\"] === \"College degree\") {\n          college++;\n        }\n        if (rows[i][\"Highest Level of Education\"] === \"Master's degree\") {\n          masters++;\n        }\n        if (rows[i][\"Highest Level of Education\"] === \"PhD\") {\n          PhD++;\n        }\n        if (rows[i][\"Highest Level of Education\"] === \"Professional degree (MD, JD, etc.)\") {\n          profD++;\n        }\n\n        if (rows[i].Industry === \"Accounting, Banking & Finance\") {\n          numABF++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salABF.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Agriculture or Forestry\") {\n          numAF++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salAF.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Art & Design\") {\n          numAD++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salAD.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Business or Consulting\") {\n          numBC++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salBC.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Computing or Tech\") {\n          numCT++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salCT.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Education (Primary/Secondary)\") {\n          numEPS++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salEPS.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Education (Higher Education)\") {\n          numEH++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salEH.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Engineering or Manufacturing\") {\n          numEM++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salEM.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Entertainment\") {\n          numEnt++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salEnt.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Government and Public Administration\") {\n          numGPA++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salGPA.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Health care\") {\n          numHC++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salHC.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Hospitality & Events\") {\n          numHE++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salHE.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Insurance\") {\n          numIns++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salIns.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Law\") {\n          numLaw++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salLaw.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Law Enforcement & Security\") {\n          numLS++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salLS.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Leisure, Sport & Tourism\") {\n          numLST++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salLST.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Marketing, Advertising & PR\") {\n          numMAPR++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salMAPR.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Media & Digital\") {\n          numMD++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salMD.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Nonprofits\") {\n          numNonP++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salNonP.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Property or Construction\") {\n          numPC++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salPC.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Recruitment or HR\") {\n          numRHR++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salRHR.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Retail\") {\n          numRetail++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salRetail.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Sales\") {\n          numSales++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salSales.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Social Work\") {\n          numSW++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salSW.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Transport or Logistics\") {\n          numTL++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salTL.push(totalSalary);\n        }\n        if (rows[i].Industry === \"Utilities & Telecommunications\") {\n          numUT++;\n          var totalSalary = parseInt(\n            rows[i][\"Annual Salary\"].replace(/,/g, \"\")\n          );\n          if (rows[i].Currency === \"EUR\") {\n            totalSalary *= 1.22;\n          }\n          if (rows[i].Currency === \"JPY\") {\n            totalSalary *= 0.0091;\n          }\n          if (rows[i].Currency === \"GPB\") {\n            totalSalary *= 1.42;\n          }\n          if (rows[i].Currency === \"CHF\") {\n            totalSalary *= 1.11;\n          }\n          if (rows[i].Currency === \"CAD\") {\n            totalSalary *= 0.83;\n          }\n          if (rows[i].Currency === \"AUD/NZD\") {\n            totalSalary *= 0.78;\n          }\n          if (rows[i].Currency === \"ZAR\") {\n            totalSalary *= 0.074;\n          }\n          if (rows[i].Currency === \"HKD\") {\n            totalSalary *= 0.13;\n          }\n          if (rows[i].Currency === \"SEK\") {\n            totalSalary *= 0.12;\n          }\n          salUT.push(totalSalary);\n        }\n      }\n      console.log(otherCurs);\n\n      var sumABF = 0;\n      for (let i = 0; i < numABF; i++) {\n        sumABF += salABF[i];\n      }\n      avgABF = sumABF / numABF / 1000;\n      avgABF = avgABF.toFixed(2);\n      var sumAF = 0;\n      for (let i = 0; i < numAF; i++) {\n        sumAF += salAF[i];\n      }\n      avgAF = sumAF / numAF / 1000;\n      avgAF = avgAF.toFixed(2);\n      var sumAD = 0;\n      for (let i = 0; i < numAD; i++) {\n        sumAD += salAD[i];\n      }\n      avgAD = sumAD / numAD / 1000;\n      avgAD = avgAD.toFixed(2);\n      var sumBC = 0;\n      for (let i = 0; i < numBC; i++) {\n        sumBC += salBC[i];\n      }\n      avgBC = sumBC / numBC / 1000;\n      avgBC = avgBC.toFixed(2);\n      var sumCT = 0;\n      for (let i = 0; i < numCT; i++) {\n        sumCT += salCT[i];\n      }\n      avgCT = sumCT / numCT / 1000;\n      avgCT = avgCT.toFixed(2);\n      var sumEPS = 0;\n      for (let i = 0; i < numEPS; i++) {\n        sumEPS += salEPS[i];\n      }\n      avgEPS = sumEPS / numEPS / 1000;\n      avgEPS = avgEPS.toFixed(2);\n      var sumEH = 0;\n      for (let i = 0; i < numEH; i++) {\n        sumEH += salEH[i];\n      }\n      avgEH = sumEH / numEH / 1000;\n      avgEH = avgEH.toFixed(2);\n      var sumEM = 0;\n      for (let i = 0; i < numEM; i++) {\n        sumEM += salEM[i];\n      }\n      avgEM = sumEM / numEM / 1000;\n      avgEM = avgEM.toFixed(2);\n      var sumEnt = 0;\n      for (let i = 0; i < numEnt; i++) {\n        sumEnt += salEnt[i];\n      }\n      avgEnt = sumEnt / numEnt / 1000;\n      avgEnt = avgEnt.toFixed(2);\n      var sumGPA = 0;\n      for (let i = 0; i < numGPA; i++) {\n        sumGPA += salGPA[i];\n      }\n      avgGPA = sumGPA / numGPA / 1000;\n      avgGPA = avgGPA.toFixed(2);\n      var sumHC = 0;\n      for (let i = 0; i < numHC; i++) {\n        sumHC += salHC[i];\n      }\n      avgHC = sumHC / numHC / 1000;\n      avgHC = avgHC.toFixed(2);\n      var sumHE = 0;\n      for (let i = 0; i < numHE; i++) {\n        sumHE += salHE[i];\n      }\n      avgHE = sumHE / numHE / 1000;\n      avgHE = avgHE.toFixed(2);\n      var sumIns = 0;\n      for (let i = 0; i < numIns; i++) {\n        sumIns += salIns[i];\n      }\n      avgIns = sumIns / numIns / 1000;\n      avgIns = avgIns.toFixed(2);\n      var sumLaw = 0;\n      for (let i = 0; i < numLaw; i++) {\n        sumLaw += salLaw[i];\n      }\n      avgLaw = sumLaw / numLaw / 1000;\n      avgLaw = avgLaw.toFixed(2);\n      var sumLS = 0;\n      for (let i = 0; i < numLS; i++) {\n        sumLS += salLS[i];\n      }\n      avgLS = sumLS / numLS / 1000;\n      avgLS = avgLS.toFixed(2);\n      var sumLST = 0;\n      for (let i = 0; i < numLST; i++) {\n        sumLST += salLST[i];\n      }\n      avgLST = sumLST / numLST / 1000;\n      avgLST = avgLST.toFixed(2);\n      var sumMAPR = 0;\n      for (let i = 0; i < numMAPR; i++) {\n        sumMAPR += salMAPR[i];\n      }\n      avgMAPR = sumMAPR / numMAPR / 1000;\n      avgMAPR = avgMAPR.toFixed(2);\n      var sumMD = 0;\n      for (let i = 0; i < numMD; i++) {\n        sumMD += salMD[i];\n      }\n      avgMD = sumMD / numMD / 1000;\n      avgMD = avgMD.toFixed(2);\n      var sumNonP = 0;\n      for (let i = 0; i < numNonP; i++) {\n        sumNonP += salNonP[i];\n      }\n      avgNonP = sumNonP / numNonP / 1000;\n      avgNonP = avgNonP.toFixed(2);\n      var sumPC = 0;\n      for (let i = 0; i < numPC; i++) {\n        sumPC += salPC[i];\n      }\n      avgPC = sumPC / numPC / 1000;\n      avgPC = avgPC.toFixed(2);\n      var sumRHR = 0;\n      for (let i = 0; i < numRHR; i++) {\n        sumRHR += salRHR[i];\n      }\n      avgRHR = sumRHR / numRHR / 1000;\n      avgRHR = avgRHR.toFixed(2);\n      var sumRetail = 0;\n      for (let i = 0; i < numRetail; i++) {\n        sumRetail += salRetail[i];\n      }\n      avgRetail = sumRetail / numRetail / 1000;\n      avgRetail = avgRetail.toFixed(2);\n      var sumSales = 0;\n      for (let i = 0; i < numSales; i++) {\n        sumSales += salSales[i];\n      }\n      avgSales = sumSales / numSales / 1000;\n      avgSales = avgSales.toFixed(2);\n      var sumSW = 0;\n      for (let i = 0; i < numSW; i++) {\n        sumSW += salSW[i];\n      }\n      avgSW = sumSW / numSW / 1000;\n      avgSW = avgSW.toFixed(2);\n      var sumTL = 0;\n      for (let i = 0; i < numTL; i++) {\n        sumTL += salTL[i];\n      }\n      avgTL = sumTL / numTL / 1000;\n      avgTL = avgTL.toFixed(2);\n      var sumUT = 0;\n      for (let i = 0; i < numUT; i++) {\n        sumUT += salUT[i];\n      }\n      avgUT = sumUT / numUT / 1000;\n      avgUT = avgUT.toFixed(2);\n\n      data1.push({ name: \"Accounting, Banking & Finance\", val: numABF });\n      data1.push({ name: \"Agriculture or Forestry\", val: numAF });\n      data1.push({ name: \"Art & Design\", val: numAD });\n      data1.push({ name: \"Business or Consulting\", val: numBC });\n      data1.push({ name: \"Computing or Tech\", val: numCT });\n      data1.push({ name: \"Education (Primary/Secondary)\", val: numEPS });\n      data1.push({ name: \"Education (Higher Education)\", val: numEH });\n      data1.push({ name: \"Engineering or Manufacturing\", val: numEM });\n      data1.push({ name: \"Entertainment\", val: numEnt });\n      data1.push({ name: \"Government and Public Administration\", val: numGPA });\n      data1.push({ name: \"Health Care\", val: numHC });\n      data1.push({ name: \"Hospitality & Events\", val: numHE });\n      data1.push({ name: \"Insurance\", val: numIns });\n      data1.push({ name: \"Law\", val: numLaw });\n      data1.push({ name: \"Law Enforcement & Security\", val: numLS });\n      data1.push({ name: \"Leisure, Sport & Tourism\", val: numLST });\n      data1.push({ name: \"Marketing, Advertising & PR\", val: numMAPR });\n      data1.push({ name: \"Media & Digital\", val: numMD });\n      data1.push({ name: \"Nonprofits\", val: numNonP });\n      data1.push({ name: \"Property or Construction\", val: numPC });\n      data1.push({ name: \"Recruitment or HR\", val: numRHR });\n      data1.push({ name: \"Retail\", val: numRetail });\n      data1.push({ name: \"Sales\", val: numSales });\n      data1.push({ name: \"Social Work\", val: numSW });\n      data1.push({ name: \"Transport or Logistics\", val: numTL });\n      data1.push({ name: \"Utilities & Telecommunications\", val: numUT });\n\n      data2.push({ name: \"Accounting, Banking & Finance\", val: avgABF });\n      data2.push({ name: \"Agriculture or Forestry\", val: avgAF });\n      data2.push({ name: \"Art & Design\", val: avgAD });\n      data2.push({ name: \"Business or Consulting\", val: avgBC });\n      data2.push({ name: \"Computing or Tech\", val: avgCT });\n      data2.push({ name: \"Education (Primary/Secondary)\", val: avgEPS });\n      data2.push({ name: \"Education (Higher Education)\", val: avgEH });\n      data2.push({ name: \"Engineering or Manufacturing\", val: avgEM });\n      data2.push({ name: \"Entertainment\", val: avgEnt });\n      data2.push({ name: \"Government and Public Administration\", val: avgGPA });\n      data2.push({ name: \"Health Care\", val: avgHC });\n      data2.push({ name: \"Hospitality & Events\", val: avgHE });\n      data2.push({ name: \"Insurance\", val: avgIns });\n      data2.push({ name: \"Law\", val: avgLaw });\n      data2.push({ name: \"Law Enforcement & Security\", val: avgLS });\n      data2.push({ name: \"Leisure, Sport & Tourism\", val: avgLST });\n      data2.push({ name: \"Marketing, Advertising & PR\", val: avgMAPR });\n      data2.push({ name: \"Media & Digital\", val: avgMD });\n      data2.push({ name: \"Nonprofits\", val: avgNonP });\n      data2.push({ name: \"Property or Construction\", val: avgPC });\n      data2.push({ name: \"Recruitment or HR\", val: avgRHR });\n      data2.push({ name: \"Retail\", val: avgRetail });\n      data2.push({ name: \"Sales\", val: avgSales });\n      data2.push({ name: \"Social Work\", val: avgSW });\n      data2.push({ name: \"Transport or Logistics\", val: avgTL });\n      data2.push({ name: \"Utilities & Telecommunications\", val: avgUT });\n\n      data3.push({ name: \"High School\", val: highSchool, fill: \"#009900\" });\n      data3.push({ name: \"Some College\", val: someCollege, fill: \"#CCCC00\" });\n      data3.push({ name: \"College Degree\", val: college, fill: \"#FF0000\" });\n      data3.push({ name: \"Master's Degree\", val: masters, fill: \"#3333FF\" });\n      data3.push({ name: \"PhD\", val: PhD, fill: \"#00CCCC\" });\n      data3.push({ name: \"Professional degree (MD, JD, etc.)\", val: profD, fill: \"#FF00FF\" });\n\n      console.log(data1);\n      console.log(data2);\n      console.log(data3);\n      // console.log(salABF);\n      // console.log(avgABF);\n      setIsLoaded(true);\n      console.log(isLoaded);\n      return true;\n    } catch (e) {\n      console.error(\"Error: \", e);\n    }\n  })();\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n\n\n            <Grid item xs={12} md={8} lg={12}>\n              <Paper className={classes.paper}>\n                <center>\n                  <h4>Distribution of People in the Job Market</h4>\n                </center>\n                {!isLoaded ? (\n                  <CircularProgress />\n                ) : (\n                  <center>\n                    <RadarChart\n                      innerRadius={70}\n                      outerRadius={300}\n                      width={1000}\n                      height={670}\n                      data={data1}\n                    >\n                      <PolarGrid />\n                      <PolarAngleAxis dataKey=\"name\" />\n                      <PolarRadiusAxis angle={30} domain={[0, 150]} />\n                      <Radar\n                        name=\"People\"\n                        dataKey=\"val\"\n                        fill={colors[2]}\n                        fillOpacity={0.5}\n                      >\n                        <LabelList dataKey = \"val\" position = \"insideStart\" angle = {0} />\n                      </Radar>\n                      <Legend />\n                    </RadarChart>\n                  </center>\n                )}\n              </Paper>\n            </Grid>\n\n\n            <Grid item xs = {12} md = {8} lg = {12}>\n              <Paper className = {classes.paper}>\n                <center><h4>Average Annual Salary Across Industries</h4></center>\n                {!isLoaded ? (\n                  <CircularProgress />\n                ) : (\n                  <center>\n                    <BarChart \n                      width = {1150} \n                      height = {600} \n                      data = {data2} \n                      margin={{ top: 20, right: 10, left: 10, bottom: 20 }}\n                    >\n                    <CartesianGrid strokeDasharray = \"3 3\" />\n                    <XAxis dataKey = \"name\"/>\n                    <YAxis \n                      label = {{value: \"Salary ($k)\", angle: -90, position: \"insideLeft\"}}\n                      domain = {[0, 520.45]}\n                    />\n                    <Bar \n                      dataKey = \"val\" \n                      fill = {colors[1]}  \n                    >\n                      <LabelList dataKey = \"name\" angle = {90} position = \"center\" fontSize = {12}/>\n                    </Bar>\n                    <Tooltip />\n                    </BarChart>\n                  </center>\n                )\n                }\n              </Paper>\n            </Grid>\n\n\n            <Grid item xs = {12} md = {8} lg = {12}>\n              <Paper className={classes.paper}>\n                <center><h4>Distribution of Degrees</h4></center>\n                {!isLoaded ? (\n                  <CircularProgress />\n                ) : (\n                  <center>\n                    <PieChart \n                      width={300} \n                      height={350} \n                      margin = {{ top: 5, right: 0, left: 0, bottom: 5}}\n                    >\n                    <Pie \n                      data = {data3} \n                      dataKey = \"val\" \n                      nameKey = \"name\" \n                      cx = \"50%\" \n                      cy = \"50%\" \n                      outerRadius = {100} \n                      label />\n                    <Legend />\n                    </PieChart>\n                  </center>\n                )\n                }\n              </Paper>\n            </Grid>\n\n\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}