{"ast":null,"code":"var _jsxFileName = \"/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/SecondDatasetTable.js\",\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SheetsAPIInfo from \"../SheetsAPIInfo.json\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestTable() {\n  _s2();\n\n  const [rows, setRows] = React.useState([]);\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const columns = [{\n    field: \"Age\",\n    headerName: \"Age\",\n    width: 130\n  }, {\n    field: \"Industry\",\n    headerName: \"Industry\",\n    width: 130\n  }, {\n    field: \"Job Title\",\n    headerName: \"Job Title\",\n    width: 130\n  }, {\n    field: \"Annual Salary\",\n    headerName: \"Annual Salary\",\n    width: 130\n  }, {\n    field: \"Currency\",\n    headerName: \"Currency\",\n    width: 130\n  }, {\n    field: \"Work Experience\",\n    headerName: \"Work Experience\",\n    width: 130\n  }, {\n    field: \"Context for Job\",\n    headerName: \"Context for Job\",\n    width: 130\n  }, {\n    field: \"Other\",\n    headerName: \"Other\",\n    width: 130\n  }, {\n    field: \"Other Compensation\",\n    headerName: \"Other Compensation\",\n    width: 130\n  }, {\n    field: \"Context\",\n    headerName: \"Context\",\n    width: 130\n  }, {\n    field: \"Country\",\n    headerName: \"Country\",\n    width: 130\n  }, {\n    field: \"State\",\n    headerName: \"State\",\n    width: 130\n  }, {\n    field: \"City\",\n    headerName: \"City\",\n    width: 130\n  }, {\n    field: \"Highest Level of Education\",\n    headerName: \"Highest Level of Education\",\n    width: 130\n  }, {\n    field: \"Gender\",\n    headerName: \"Gender\",\n    width: 130\n  }, {\n    field: \"Race\",\n    headerName: \"Race\",\n    width: 130\n  }];\n  const spreadSheet = new GoogleSpreadsheet(\"1xL-FWa7vdAH32MtPPVX688IMmG2y2rE34A_VW7SoZnI\");\n  React.useEffect(() => {\n    var _s = $RefreshSig$();\n\n    _s(async function () {\n      _s();\n\n      try {\n        await spreadSheet.useServiceAccountAuth({\n          client_email: SheetsAPIInfo.client_email,\n          private_key: SheetsAPIInfo.private_key\n        });\n        await spreadSheet.loadInfo();\n        const sheet = spreadSheet.sheetsByIndex[0];\n        setRows(await sheet.getRows());\n        console.log(\"set rows\");\n        setIsLoaded(true);\n      } catch (e) {\n        console.error(\"Error: \", e);\n      }\n    }, \"XzZzjmf42T4ghIIVsLcPZIIQRXQ=\", false, function () {\n      return [spreadSheet.useServiceAccountAuth];\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 600,\n      width: \"100%\"\n    },\n    children: isLoaded ? /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      getRowId: rows => rows.rowNumber,\n      autoHeight: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TestTable, \"yDPvP4HY9ZG2InPg6xbC1Hvz/hU=\");\n\n_c = TestTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestTable\");","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/SecondDatasetTable.js"],"names":["React","DataGrid","CircularProgress","SheetsAPIInfo","GoogleSpreadsheet","TestTable","rows","setRows","useState","isLoaded","setIsLoaded","columns","field","headerName","width","spreadSheet","useEffect","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","getRows","console","log","e","error","height","rowNumber"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SheetsAPIInfo from \"../SheetsAPIInfo.json\";\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\n\nexport default function TestTable() {\n  const [rows, setRows] = React.useState([]);\n  const [isLoaded, setIsLoaded] = React.useState(false);\n\n  const columns = [\n    { field: \"Age\", headerName: \"Age\", width: 130 },\n    { field: \"Industry\", headerName: \"Industry\", width: 130 },\n    { field: \"Job Title\", headerName: \"Job Title\", width: 130 },\n    { field: \"Annual Salary\", headerName: \"Annual Salary\", width: 130 },\n    { field: \"Currency\", headerName: \"Currency\", width: 130 },\n    { field: \"Work Experience\", headerName: \"Work Experience\", width: 130 },\n    { field: \"Context for Job\", headerName: \"Context for Job\", width: 130 },\n    { field: \"Other\", headerName: \"Other\", width: 130 },\n    {\n      field: \"Other Compensation\",\n      headerName: \"Other Compensation\",\n      width: 130,\n    },\n    { field: \"Context\", headerName: \"Context\", width: 130 },\n    { field: \"Country\", headerName: \"Country\", width: 130 },\n    { field: \"State\", headerName: \"State\", width: 130 },\n    { field: \"City\", headerName: \"City\", width: 130 },\n    {\n      field: \"Highest Level of Education\",\n      headerName: \"Highest Level of Education\",\n      width: 130,\n    },\n    { field: \"Gender\", headerName: \"Gender\", width: 130 },\n    { field: \"Race\", headerName: \"Race\", width: 130 },\n  ];\n\n  const spreadSheet = new GoogleSpreadsheet(\n    \"1xL-FWa7vdAH32MtPPVX688IMmG2y2rE34A_VW7SoZnI\"\n  );\n\n  React.useEffect(() => {\n    (async function () {\n      try {\n        await spreadSheet.useServiceAccountAuth({\n          client_email: SheetsAPIInfo.client_email,\n          private_key: SheetsAPIInfo.private_key,\n        });\n\n        await spreadSheet.loadInfo();\n        const sheet = spreadSheet.sheetsByIndex[0];\n        setRows(await sheet.getRows());\n        console.log(\"set rows\");\n        setIsLoaded(true);\n      } catch (e) {\n        console.error(\"Error: \", e);\n      }\n    })();\n  }, []);\n\n  return (\n    <div style={{ height: 600, width: \"100%\" }}>\n      {isLoaded ? (\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          getRowId={(rows) => rows.rowNumber}\n          autoHeight={true}\n        />\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}