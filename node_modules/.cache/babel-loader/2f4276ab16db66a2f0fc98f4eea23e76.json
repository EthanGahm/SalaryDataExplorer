{"ast":null,"code":"import data from \"@iconify/icons-mdi/map-marker\";\nimport $ from \"jquery\"; //import google from \"google-maps\"\n\nimport axios from \"axios\";\nimport { ArrowRight } from \"@material-ui/icons\";\nexport default async function getData() {\n  var coordsList = [];\n  var list = [\"united states of america\"];\n\n  for (var i = 0; i < list.length; i++) {\n    try {\n      var temp = await getRes(list[i]); // console.log(\"temp: \"+temp)\n\n      coordsList.push(temp);\n      console.log(coordsList);\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  }\n\n  return coordsList;\n}\n\nasync function getRes(str) {\n  var loc = str.replace(/\\s+/g, '+');\n  const url = \"https://maps.googleapis.com/maps/api/geocode/json?address=\" + loc + \"&key=\" + process.env.REACT_APP_GOOGLEMAPS_ID; //  console.log(url)\n\n  var res = await axios.get(url); // console.log(res)\n  // console.log(\"Latitude: \" + res.data.results[0].geometry.location.lat);\n  // console.log(\"Longitude: \" + res.data.results[0].geometry.location.lng);\n  // console.log(\"Location: \" + res.data.results[0].formatted_address);\n\n  var arr = [];\n  arr.push(JSON.stringify(res.data.results[0].geometry.location.lat));\n  arr.push(JSON.stringify(res.data.results[0].geometry.location.lng));\n  arr.push(JSON.stringify(res.data.results[0].formatted_address));\n  return arr;\n} //  var lat = results[0].geometry.location.lat;\n//       var long = results[0].geometry.location.lng;\n//       var name = results[0].formatted_address\n//       var temp = [lat,long,temp]\n//       coordsList.push(temp)\n// console.log(g.latlng)\n// var sydney = new google.maps.LatLng(-33.867, 151.195);\n// var map = new google.maps.Map(\n//     document.getElementById('map'), {center: sydney, zoom: 15});\n// var request = {\n//   query: list[i],\n//   fields: ['name', 'lat', 'lng'],\n// };\n// var service = new google.maps.places.PlacesService(map);\n// service.findPlaceFromQuery(request, function(results, status) {\n//   if (status === google.maps.places.PlacesServiceStatus.OK) {\n//       var lat = results[0].geometry.location.lat;\n//       var long = results[0].geometry.location.lng;\n//       var name = results[0].formatted_address\n//       var temp = [lat,long,temp]\n//       coordsList.push(temp)\n//     }\n//   console.log(coordsList)\n// });\n// return coordsList;\n// }\n//\n// var x =\"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\"+list[i]+\"&key=\"+ process.env.REACT_APP_GOOGLEMAPS_ID\n// var result = axios.get(x)\n// result.then((result) =>{\n//   var lat = result.data.results[0].geometry.location.lat;\n//   lat = lat.toString();\n//   const location =result.data.results[0].formatted_address\n//   var long =result.data.results[0].geometry.location.lng;\n//   long = long.toString()\n//   // console.log(\"Name: \"+ list[i])\n//   // console.log(\"Lat: \"+lat)\n//   // console.log(\"Long: \"+long)\n//    var res = [lat,long,location]\n//   //  console.log(res)\n//   // console.log(\"Return val: \"+ res)\n//    coordsList.push(res);\n//   // console.log(res)\n// })\n// var headers = new Headers();\n// function loadScript() {\n// var script = document.createElement('script');\n// script.type = 'text/javascript';\n// script.src = process.env.REACT_APP_URL;\n// document.body.appendChild(script);\n// }\n// window.onload = loadScript;\n// for (var i =0; i<list.length;i++){\n//   let x = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\"+list[i]+\"&key=\"+ process.env.REACT_APP_GOOGLEMAPS_ID;\n//   fetch(x)\n//     .then(response => response.json())\n//     .then(data => {\n//       console.log(data);\n//       let lat = data.results[0].geometry.location.lat;\n//       let long = data.results[0].geometry.location.lng;\n//       let name = data.results[0].formatted_address;\n//       let temp = [lat,long,name]\n//       coordsList.push(temp)","map":{"version":3,"sources":["/home/ethan/Documents/DevHub/SalaryDataExplorer/src/Components/LocationCoordinates.js"],"names":["data","$","axios","ArrowRight","getData","coordsList","list","i","length","temp","getRes","push","console","log","error","str","loc","replace","url","process","env","REACT_APP_GOOGLEMAPS_ID","res","get","arr","JSON","stringify","results","geometry","location","lat","lng","formatted_address"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,+BAAjB;AACA,OAAOC,CAAP,MAAc,QAAd,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAGA,eAAe,eAAeC,OAAf,GAAwB;AAGnC,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,IAAI,GAAE,CAAC,0BAAD,CAAV;;AACA,OAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAACD,IAAI,CAACE,MAAtB,EAA6BD,CAAC,EAA9B,EAAiC;AAC/B,QAAI;AACJ,UAAIE,IAAI,GAAI,MAAMC,MAAM,CAACJ,IAAI,CAACC,CAAD,CAAL,CAAxB,CADI,CAGH;;AACCF,MAAAA,UAAU,CAACM,IAAX,CAAgBF,IAAhB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AAED,KAPD,CAOC,OAAOS,KAAP,EAAa;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,aAAOA,KAAP;AACD;AAKF;;AAED,SAAOT,UAAP;AACD;;AAEF,eAAeK,MAAf,CAAsBK,GAAtB,EAA0B;AACnB,MAAIC,GAAG,GAAED,GAAG,CAACE,OAAJ,CAAY,MAAZ,EAAoB,GAApB,CAAT;AACA,QAAMC,GAAG,GAAG,+DAA6DF,GAA7D,GAAiE,OAAjE,GAAyEG,OAAO,CAACC,GAAR,CAAYC,uBAAjG,CAFmB,CAGrB;;AAGE,MAAIC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAUL,GAAV,CAAhB,CANmB,CAQnB;AAEE;AACA;AACA;;AACA,MAAIM,GAAG,GAAG,EAAV;AACAA,EAAAA,GAAG,CAACb,IAAJ,CAASc,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACtB,IAAJ,CAAS2B,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAA7B,CAAsCC,GAArD,CAAT;AACAN,EAAAA,GAAG,CAACb,IAAJ,CAASc,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACtB,IAAJ,CAAS2B,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAA7B,CAAsCE,GAArD,CAAT;AACAP,EAAAA,GAAG,CAACb,IAAJ,CAASc,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACtB,IAAJ,CAAS2B,OAAT,CAAiB,CAAjB,EAAoBK,iBAAnC,CAAT;AACA,SAAOR,GAAP;AAOH,C,CAED;AACA;AACA;AACA;AACA;AAGA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGF;AACF;AAOF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import data from \"@iconify/icons-mdi/map-marker\";\nimport $ from \"jquery\";\n//import google from \"google-maps\"\nimport axios from \"axios\";\nimport { ArrowRight } from \"@material-ui/icons\";\n\n\nexport default async function getData(){   \n  \n  \n    var coordsList = [];   \n    var list= [\"united states of america\"]\n    for (var i =0; i<list.length;i++){\n      try {\n      var temp =  await getRes(list[i]);\n\n       // console.log(\"temp: \"+temp)\n        coordsList.push(temp);\n        console.log(coordsList)\n        \n      }catch (error){\n        console.log(error)\n        return error\n      }\n     \n        \n      \n      \n    }\n   \n    return coordsList;\n  }\n   \n async function getRes(str){\n        var loc =str.replace(/\\s+/g, '+')\n        const url = \"https://maps.googleapis.com/maps/api/geocode/json?address=\"+loc+\"&key=\"+process.env.REACT_APP_GOOGLEMAPS_ID;\n      //  console.log(url)\n      \n       \n        var res = await axios.get(url);\n            \n        // console.log(res)\n        \n          // console.log(\"Latitude: \" + res.data.results[0].geometry.location.lat);\n          // console.log(\"Longitude: \" + res.data.results[0].geometry.location.lng);\n          // console.log(\"Location: \" + res.data.results[0].formatted_address);\n          var arr = [];\n          arr.push(JSON.stringify(res.data.results[0].geometry.location.lat));\n          arr.push(JSON.stringify(res.data.results[0].geometry.location.lng));\n          arr.push(JSON.stringify(res.data.results[0].formatted_address));\n          return arr;\n\n\n    \n       \n\n\n      }\n \n      //  var lat = results[0].geometry.location.lat;\n      //       var long = results[0].geometry.location.lng;\n      //       var name = results[0].formatted_address\n      //       var temp = [lat,long,temp]\n      //       coordsList.push(temp)\n\n   \n      // console.log(g.latlng)\n\n      // var sydney = new google.maps.LatLng(-33.867, 151.195);\n      \n       \n      // var map = new google.maps.Map(\n      //     document.getElementById('map'), {center: sydney, zoom: 15});\n      \n      // var request = {\n      //   query: list[i],\n      //   fields: ['name', 'lat', 'lng'],\n      // };\n      // var service = new google.maps.places.PlacesService(map);\n      \n      // service.findPlaceFromQuery(request, function(results, status) {\n      //   if (status === google.maps.places.PlacesServiceStatus.OK) {\n          \n      //       var lat = results[0].geometry.location.lat;\n      //       var long = results[0].geometry.location.lng;\n      //       var name = results[0].formatted_address\n      //       var temp = [lat,long,temp]\n      //       coordsList.push(temp)\n      //     }\n     \n       \n      //   console.log(coordsList)\n      // });\n    \n    \n    // return coordsList;\n  // }\n      \n\n\n\n\n\n//\n \n// var x =\"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\"+list[i]+\"&key=\"+ process.env.REACT_APP_GOOGLEMAPS_ID\n// var result = axios.get(x)\n// result.then((result) =>{\n//   var lat = result.data.results[0].geometry.location.lat;\n//   lat = lat.toString();\n//   const location =result.data.results[0].formatted_address\n//   var long =result.data.results[0].geometry.location.lng;\n//   long = long.toString()\n//   // console.log(\"Name: \"+ list[i])\n//   // console.log(\"Lat: \"+lat)\n//   // console.log(\"Long: \"+long)\n//    var res = [lat,long,location]\n//   //  console.log(res)\n//   // console.log(\"Return val: \"+ res)\n//    coordsList.push(res);\n   \n//   // console.log(res)\n// })\n// var headers = new Headers();\n    \n// function loadScript() {\n// var script = document.createElement('script');\n// script.type = 'text/javascript';\n// script.src = process.env.REACT_APP_URL;\n// document.body.appendChild(script);\n// }\n// window.onload = loadScript;\n// for (var i =0; i<list.length;i++){\n//   let x = \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=\"+list[i]+\"&key=\"+ process.env.REACT_APP_GOOGLEMAPS_ID;\n//   fetch(x)\n//     .then(response => response.json())\n   \n//     .then(data => {\n//       console.log(data);\n//       let lat = data.results[0].geometry.location.lat;\n//       let long = data.results[0].geometry.location.lng;\n//       let name = data.results[0].formatted_address;\n//       let temp = [lat,long,name]\n//       coordsList.push(temp)\n\n\n"]},"metadata":{},"sourceType":"module"}